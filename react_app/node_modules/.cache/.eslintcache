[{"C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\index.js":"1","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\App.js":"2","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\reportWebVitals.js":"3","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Services\\Json.js":"4","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Container.js":"5","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Header\\Header.js":"6","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Services\\loginCredentialsAndQueries.js":"7","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\TotalPlants.js":"8","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Services\\image.js":"9","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Header\\KPIofPlant.js":"10","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\PatternStorage.js":"11","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Plant\\Plant.js":"12","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\MFI\\MFI.js":"13","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Pagination\\Pagination.js":"14","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\AA\\AA.js":"15","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Header\\KPI.js":"16","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Plant\\MG.js":"17","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Plant\\Machine.js":"18","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Services\\Velocity.js":"19","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Plant\\Monitor.js":"20","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Plant\\Tablemini.js":"21","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Scrollbar\\AlertsBar.js":"22"},{"size":1428,"mtime":1699434821672,"results":"23","hashOfConfig":"24"},{"size":1172,"mtime":1698731559675,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1698731052699,"results":"26","hashOfConfig":"24"},{"size":3052,"mtime":1699261145119,"results":"27","hashOfConfig":"24"},{"size":13039,"mtime":1699362412784,"results":"28","hashOfConfig":"24"},{"size":3772,"mtime":1699261145118,"results":"29","hashOfConfig":"24"},{"size":1762,"mtime":1698731559695,"results":"30","hashOfConfig":"24"},{"size":5893,"mtime":1699261145119,"results":"31","hashOfConfig":"24"},{"size":1277,"mtime":1698731559694,"results":"32","hashOfConfig":"24"},{"size":597,"mtime":1699013666452,"results":"33","hashOfConfig":"24"},{"size":2610,"mtime":1699261145110,"results":"34","hashOfConfig":"24"},{"size":473,"mtime":1698731559688,"results":"35","hashOfConfig":"24"},{"size":3573,"mtime":1699600712265,"results":"36","hashOfConfig":"24"},{"size":1077,"mtime":1698731559691,"results":"37","hashOfConfig":"24"},{"size":3353,"mtime":1699600598549,"results":"38","hashOfConfig":"24"},{"size":613,"mtime":1699261145118,"results":"39","hashOfConfig":"24"},{"size":308,"mtime":1698731559686,"results":"40","hashOfConfig":"24"},{"size":7446,"mtime":1699261145113,"results":"41","hashOfConfig":"24"},{"size":3524,"mtime":1699261145120,"results":"42","hashOfConfig":"24"},{"size":1004,"mtime":1699261145114,"results":"43","hashOfConfig":"24"},{"size":635,"mtime":1699261145114,"results":"44","hashOfConfig":"24"},{"size":8506,"mtime":1699261145117,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"zjm64w",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"126"},"C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\index.js",["127"],[],"import React from 'react';\r\nimport {useEffect} from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// const handleScriptLoad = async() => {\r\n//   console.log(\"hero\")\r\n//   await window.ZOHO.CREATOR.init().then(function(data) {\r\n//    // var queryParams = window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n//    const email=\"rapaka.chandrashekar@gmail.com\";//Stage == \\\"Open\\\"\r\n//      var config = {\r\n//       appName: \"infinite-control-room\",\r\n//       reportName: \"All_Users\",\r\n//       criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\r\n//       page: \"1\",\r\n//       pageSize: \"100\"\r\n//     }\r\n\r\n//     //get all records API\r\n//     window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n//       //callback block\r\n//       let userData = response;\r\n//       console.log(\"userData\"+JSON.stringify(userData));\r\n      \r\n//     });\r\n//   });\r\n//  // console.log(window.ZC);\r\n \r\n// };\r\n// handleScriptLoad();\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n\r\n\r\n",[],"C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\App.js",["128","129","130","131","132","133","134","135"],[],"import React, { useEffect, useState } from 'react';\r\nimport Header from './Components/Header/Header';\r\nimport Container from './Components/Containers/Container';\r\nimport { Plants } from './Services/Json';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [options, setOptions] = useState([]);\r\n  const [plantID, setPlantID] = useState();\r\n  const [plantDetails, setPlantDetails] = useState({});\r\n\r\n  const boxes = {};\r\n  \r\n  function handleSelectChange(e) {\r\n    setPlantID(e.target.value);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await Plants();\r\n  //       setPlantDetails(response);\r\n  //       // const plantNames = response.map((ele) => ele.plantName);\r\n  //       // setOptions(plantNames);\r\n  //       // console.log(\"options\"+options);\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  \r\n\r\n  return (\r\n    <div className='App'>\r\n      {/* <Header options={options} handleSelectChange={handleSelectChange} /> */}\r\n      \r\n      <Container plantDetails={plantDetails} boxes={boxes} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\reportWebVitals.js",[],[],"C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Services\\Json.js",["136","137","138"],[],"let intervalId;\r\n\r\nexport async function Plants() {\r\n  let accessToken = \"\";\r\n  const arrayOfPlants = [];\r\n  const arrayOfMachines = [];\r\n  let apicallstatus = true;\r\n\r\n  try {\r\n    const loginResponse = await window.ZOHO.CREATOR.init().then(function (data) {\r\n      let accessTokenz = \"\";\r\n      let userid = window.ZOHO.CREATOR.UTIL.getQueryParams().user;\r\n\r\n      var config = {\r\n        appName: \"infinite-control-room\",\r\n        reportName: \"My_Profile_Data\",\r\n        criteria: \"Username == \\\"\" + userid + \"\\\"\",\r\n        page: \"1\",\r\n        pageSize: \"100\"\r\n      };\r\n\r\n      const access = window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n        let userData = response;\r\n        accessTokenz = userData.data[0].Access_Token;\r\n        return accessTokenz;\r\n      });\r\n      \r\n      return access;\r\n    });\r\n\r\n    const queryParams = await window.ZOHO.CREATOR.init().then(function (data) {\r\n      return window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n    });\r\n\r\n    const loginData = await loginResponse;\r\n    accessToken = loginData;\r\n\r\n    let orgid = queryParams.PlantId.split(\",\")[1];\r\n    const orgidAll = queryParams.PlantId.split(\",\");\r\n\r\n    const fetchPlantsData = async () => {\r\n      ////console.log(\"functioncalled\"+new Date().getMinutes);\r\n      try {\r\n        await Promise.all(orgidAll.map(async (orgid) => {\r\n          const plantsResponse = await fetch(`https://api.infinite-uptime.com/api/3.0/idap-api/plants/${orgid}/machine-group-stats`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'accept': 'application/json',\r\n              'Authorization': 'Bearer ' + accessToken,\r\n            },\r\n          });\r\n\r\n          if (plantsResponse.status === 401) {\r\n            apicallstatus = false;\r\n            // Stop further API calls\r\n           // clearInterval(intervalId);\r\n            //console.log(\"apicallstatus: \" + apicallstatus);\r\n            return [[]],apicallstatus;\r\n          }\r\n          \r\n          const plantsData = await plantsResponse.json();\r\n          const plantsArray = [];\r\n         // console.log(plantsData);\r\n          \r\n          plantsData.data.machineGroups.forEach((mg) => {\r\n            mg.machines.forEach((machine) => {\r\n              machine.mg = mg.name;\r\n              machine.plantName = plantsData.data.name;\r\n              machine.plantid = plantsData.data.id;\r\n              plantsArray.push(machine);\r\n            });\r\n          });\r\n\r\n          arrayOfMachines.push(plantsArray);\r\n          arrayOfPlants.push(plantsData.data);\r\n        }));\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    await fetchPlantsData();\r\n\r\n    \r\n    //intervalId = setInterval(fetchPlantsData, 30000);\r\n\r\n    return [arrayOfMachines, apicallstatus];\r\n\r\n  } catch (error) {\r\n    //console.error(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\nPlants()\r\n  .then(([machines, status]) => {\r\n    //console.log(\"Machines:\", machines);\r\n    //console.log(\"API Call Status:\", status);\r\n  })\r\n  .catch((error) => {\r\n    //console.log(\"Error:\", error);\r\n  });\r\n","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Container.js",["139","140","141","142","143","144","145","146","147","148","149","150"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Container.css\";\r\nimport AA from \"./AA/AA\";\r\nimport MFI from \"./MFI/MFI\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport Plant from \"./Plant/Plant\";\r\nimport { Plants } from \"../../Services/Json\";\r\nimport Header from \"../Header/Header\";\r\nimport TotalPlants from \"../TotalPlants\";\r\nimport AlertsBar from \"./Scrollbar/AlertsBar\";\r\nimport PatternStorage from \"./PatternStorage\";\r\n\r\nfunction Container() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 15;\r\n  const [timeIn, setTimeIn] = useState(30000);\r\n  const [plantsData, setPlantsData] = useState([]);\r\n  const [currentPlantIndex, setCurrentPlantIndex] = useState(0);\r\n  const [zoomLevel, setZoomLevel] = useState(0);\r\n  const [kpimachines, setKpimachines] = useState(0);\r\n  const [kpidisconnected, setKpiDisconnected] = useState(0);\r\n  const [kpimonitors, setKpimonitors] = useState(0);\r\n  const [noData, setNoData] = useState('');\r\n  const [apicall, setApiCall] = useState(true);\r\n  const [autoPagination, setAutoPagination] = useState(true); \r\n  const [PlantSelection,setPlantSelection]=useState(false);\r\n\r\n  //screen things\r\n  ////console.log(\"insidecontainer.js\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await Plants();\r\n\r\n        if (response[1]) {\r\n          let plants = [];\r\n\r\n          if (response[0]) {\r\n            response[0].forEach(element => {\r\n              if (element.length > 0) plants.push(element);\r\n            });\r\n\r\n            const storedPattern = await fetchProfile();\r\n\r\n            if (storedPattern && storedPattern !== undefined) {\r\n              const uniqueOrderedIds = [...new Set(JSON.parse(storedPattern))];\r\n              const uniquePlantIds = plants.map(plant => plant[0].plantid);\r\n              const patternsMatch = JSON.stringify(uniqueOrderedIds.sort()) === JSON.stringify(uniquePlantIds.sort());\r\n\r\n              if (storedPattern && storedPattern.length > 1 && patternsMatch) {\r\n                const orderedPattern = JSON.parse(storedPattern);\r\n                const reorderedPlantsData = orderedPattern.map((plantId) => {\r\n                  const plant = plants.find((plant) => plant[0].plantid === plantId);\r\n                  return plant ? plant : null;\r\n                }).filter((plant) => plant !== null);\r\n\r\n                setPlantsData(reorderedPlantsData);\r\n              } else {\r\n                setPlantsData(plants);\r\n              }\r\n            } else {\r\n              setPlantsData(plants);\r\n            }\r\n\r\n            if (plants.length === 0) {\r\n              setNoData('No data found');\r\n            }\r\n          } else {\r\n            setNoData('No data found');\r\n          }\r\n        } else {\r\n          setApiCall(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        setNoData('Error occurred while fetching data.');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [timeIn]);\r\n \r\n  const fetchProfile = async () => {\r\n    try {\r\n        const data = await window.ZOHO.CREATOR.init();\r\n        let userid = window.ZOHO.CREATOR.UTIL.getQueryParams().user;\r\n        var config = {\r\n            appName: \"infinite-control-room\",\r\n            reportName: \"My_Profile_Data\",\r\n            criteria: \"Username == \\\"\" + userid + \"\\\"\",\r\n            page: \"1\",\r\n            pageSize: \"100\"\r\n        };\r\n        const response = await window.ZOHO.CREATOR.API.getAllRecords(config);\r\n        const idx = response.data[0].PlantPattern;\r\n        console.log(idx);\r\n        return idx;\r\n    } catch (error) {\r\n        console.error(error);\r\n        // Handle error cases\r\n        return null; // Or any appropriate value indicating error\r\n    }\r\n};\r\n  useEffect(() => {\r\n    let timeout;\r\n\r\n    if (autoPagination && plantsData.length > 0&&PlantSelection==false) {\r\n      const currentPlant = plantsData[currentPlantIndex];\r\n      // console.log(currentPlantIndex);\r\n      setKpimachines(plantsData[currentPlantIndex].length);\r\n     // \r\n      let kpimonitorsnew = 0;\r\n      let kpidisconnectednew = 0;\r\n      plantsData[currentPlantIndex].forEach((mon) => {\r\n        mon.monitors.forEach((ele)=>{\r\n          if(ele.status==5){\r\n            //console.log(ele.status,currentPlantIndex);\r\n            kpidisconnectednew++;\r\n            \r\n          }\r\n        }) \r\n        kpimonitorsnew += mon.monitors.length;\r\n      });\r\n     // console.log(currentPlantIndex);\r\n      setKpiDisconnected(kpidisconnectednew);\r\n      setKpimonitors(kpimonitorsnew);\r\n\r\n      const totalPages = Math.ceil(currentPlant?.length / itemsPerPage);\r\n\r\n      if (currentPage > totalPages ) {\r\n        if (currentPlantIndex === plantsData.length - 1) {\r\n          timeout = setTimeout(() => {\r\n            setCurrentPage(1);\r\n            setCurrentPlantIndex(0);\r\n          }, 0);\r\n        } else {\r\n          timeout = setTimeout(() => {\r\n            setCurrentPage(1);\r\n            setCurrentPlantIndex((prevIndex) => prevIndex + 1);\r\n          }, 0);\r\n        }\r\n      } else {\r\n        timeout = setTimeout(() => {\r\n          setCurrentPage((prevPage) => prevPage + 1);\r\n        }, timeIn);\r\n      }\r\n    }\r\n    \r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [currentPage, currentPlantIndex, plantsData, autoPagination]);\r\n\r\n  const handleNextPlant = () => {\r\n    const nextPage = currentPage + 1;\r\n  \r\n    \r\n      \r\n      // If we're at the end of the current plant, switch to the next plant\r\n      const nextPlantIndex = (currentPlantIndex + 1) % plantsData.length;\r\n      if(nextPlantIndex>plantsData.length-1){\r\n      setCurrentPlantIndex(nextPlantIndex);\r\n      setCurrentPage(1);\r\n      }else{\r\n        setCurrentPlantIndex(nextPlantIndex);\r\n        setCurrentPage(1);\r\n      } // Reset currentPage for the new plant\r\n      const currentPlant = plantsData[currentPlantIndex];\r\n      setKpimachines(plantsData[currentPlantIndex].length);\r\n\r\n      let kpimonitorsnew = 0;\r\n      let kpidisconnectednew = 0;\r\n\r\n      plantsData[currentPlantIndex].forEach((mon) => {\r\n        \r\n        mon.monitors.forEach((ele)=>{\r\n          if(ele.status==5){\r\n           // console.log(ele.status,currentPlantIndex);\r\n            kpidisconnectednew++;\r\n            \r\n          }\r\n        })\r\n        kpimonitorsnew += mon.monitors.length;\r\n      });\r\n      //console.log(currentPlantIndex);\r\n      setKpiDisconnected(kpidisconnectednew);\r\n      setKpimonitors(kpimonitorsnew);\r\n    \r\n  };\r\n  //console.log(currentPlantIndex+\"\"+kpidisconnected);\r\n  const handlePageChange = (pageNumber) => {\r\n    const totalPages = Math.ceil(plantsData[currentPlantIndex].length / itemsPerPage);\r\n\r\n    if (pageNumber <= totalPages) {\r\n      setCurrentPage(pageNumber);\r\n\r\n      if (pageNumber === totalPages && currentPlantIndex !== plantsData.length - 1) {\r\n        setTimeout(() => {\r\n          const nextPlantIndex = currentPlantIndex + 1;\r\n          setCurrentPage(1);\r\n          setCurrentPlantIndex(nextPlantIndex);\r\n        }, timeIn);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    setAutoPagination((prevState) => !prevState);\r\n  }\r\n \r\n \r\n  const currentPlant = plantsData[currentPlantIndex];\r\n  const totalPages = Math.ceil(currentPlant?.length / itemsPerPage);\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = currentPlant ? currentPlant.slice(indexOfFirstItem, indexOfLastItem) : [];\r\n  \r\n  //  style={{ transform: `scale(${1 + zoomLevel / 100})` }}\r\n  return (\r\n    <div>\r\n\r\n      {(currentPlant && apicall) ? (\r\n\r\n        <section className=\"dashboard-sec\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"header\">\r\n              <TotalPlants plantsData={plantsData} />\r\n              <PatternStorage plantsData={plantsData} cp={currentPlant} />\r\n            </div>\r\n\r\n            <div className=\"main-content\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-9\">\r\n                  <div className=\"left-main\">\r\n                    <div className=\"title-section d-flex mb-2 align-items-center justify-content-between py-2 px-3 bg-white br-10\">\r\n                      <p className=\"mb-0 fs-18 fw-600\"> {currentPlant[0]?.plantName || \"\"}</p>\r\n                      <p className=\"mb-0 fs-16 text-gray\" onClick={(e)=>{handleNextPlant(currentPlantIndex)}}> Coming Next: <strong className=\"text-primary\" style={{ cursor: \"pointer\" }} >{plantsData[currentPlantIndex + 1] !== undefined ? plantsData[currentPlantIndex + 1][0].plantName : plantsData[0][0].plantName}</strong></p>\r\n                    </div>\r\n\r\n                    <Header kpidisconnected={kpidisconnected} kpimachines={kpimachines} kpimonitors={kpimonitors} currentPlant={currentPlant} />\r\n                   \r\n                    <Plant currentItems={currentItems} NextPlant={plantsData[currentPlantIndex + 1] !== undefined ? plantsData[currentPlantIndex + 1][0].plantName : plantsData[0][0].plantName} />\r\n                    \r\n                    <div className=\"pagination-sec\" style={{paddingBottom:\"10px\"}}>\r\n                      <div className=\"row\">\r\n                        <div class=\"pagination-section\">\r\n                          <div class=\"pagination-inner-sec\">\r\n                            <ul className=\"pagination-block\">\r\n                              <Pagination\r\n                                items={currentItems}\r\n                                currentPage={currentPage}\r\n                                totalPages={totalPages}\r\n                                onPageChange={handlePageChange}\r\n                              />\r\n                            </ul>\r\n                            <div className=\"stop-auto-pagination\" >\r\n                              <form>\r\n                                <input onClick={handleCheck} type=\"checkbox\" />\r\n                                Stop Auto Pagination\r\n                              </form>\r\n\r\n                            </div>\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"health-score-sec\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-3 mb-3 col-md-6 col-sm-6\">\r\n                          <div className=\"health-score-box py-2 md:px-3 px-1\">\r\n                            <div className=\"score-box green\"></div>\r\n                            <p className=\"text-dark fs-14 mb-0 fw-bold\">Normal</p>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 mb-3 col-md-6 col-sm-6\">\r\n                          <div className=\"health-score-box py-2 px-3\">\r\n                            <div className=\"score-box yellow\"></div>\r\n                            <p className=\"text-dark fs-14 mb-0 fw-bold\">Caution\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 mb-3 col-md-6 col-sm-6\">\r\n                          <div className=\"health-score-box py-2 px-3\">\r\n                            <div className=\"score-box red\"></div>\r\n                            <p className=\"text-dark fs-14 mb-0 fw-bold\">Warning\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 mb-3 col-md-6 col-sm-6\">\r\n                          <div className=\"health-score-box py-2 px-3\">\r\n                            <div className=\"score-box text-bg-secondary\"></div>\r\n                            <p className=\"text-dark fs-14 mb-0 fw-bold \" >Disconnected\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-3\">\r\n                  <div className=\"right-main\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-12 col-md-4 col-sm-6 mb-3\" >\r\n                        <AA currentPlant={currentPlant} />\r\n                      </div>\r\n                      <div className=\"col-lg-12 col-md-4 col-sm-6 mb-3\">\r\n                        <MFI currentPlant={currentPlant} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          <AlertsBar  currentPlant={currentPlant} plantsData={plantsData}/>\r\n          </div>\r\n        </section>\r\n      ) : ((apicall === true) ?\r\n\r\n        (<div style={{ textAlign: \"center\" }}><h1>{`loading....${noData}`}</h1></div>)\r\n        : (<div className=\"login-again\">\r\n          <p>{`Invalid Token, Please Login here`}</p>\r\n          <a href=\"https://crv.infinite-uptime.com/#Profile\" target=\"_blank\">Please click here</a>\r\n        </div>)\r\n\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Header\\Header.js",["151","152","153"],[],"import React, { useState, useEffect } from \"react\";\r\nimport KPIofPlant from \"./KPIofPlant\";\r\nimport { Image } from \"../../Services/image\";\r\nimport { LoginCredentialsAndQueries } from \"../../Services/loginCredentialsAndQueries\";\r\nimport icon1 from '../../assets/imgs/about-white-icon-1.png';\r\nimport icon2 from '../../assets/imgs/about-white-icon-2.png';\r\nimport icon3 from '../../assets/imgs/about-white-icon-3.png';\r\nimport icon4 from '../../assets/imgs/about-white-icon-4.png';\r\nimport icon5 from '../../assets/imgs/about-white-icon-5.png';\r\nimport test from '../../assets/imgs/icons8-wi-fi-off-30.png';\r\n\r\n\r\n\r\n\r\n  \r\nfunction Header(prop) {\r\n  \r\n  const initialKipobj = {\r\n    kpi1: {\r\n      title: \"\",\r\n      value: \"Total Devices Installed\",\r\n      src:icon1\r\n    },\r\n    kpi2: { title: \"\", value: \"Total Machines Digitized\",src:icon2},\r\n    kpi3: { title: \"\", value: \"Total Faults Identified\",src:icon3 },\r\n    kpi4: { title: \"\", value: \"Reports Closed\",src:icon4 },\r\n    kpi5: { title: \"\", value: \"Downtime Saved (Hrs)\",src:icon5 },\r\n    kpi6: { title: \"\", value: \"Disconnected\" ,src:test },\r\n  };\r\n  \r\n  const [kipobj, setKipobj] = useState(initialKipobj);\r\n\r\n // console.log(prop.kpidisconnected);\r\n\r\n  useEffect(() => {\r\n    const fetchPlantDetails = async () => {\r\n      try {\r\n        let plantid = prop.currentPlant[0].plantid;\r\n        let token=await LoginCredentialsAndQueries();\r\n        \r\n         const kpidatafinal= await fetch('https://api.infinite-uptime.com/api/3.0/idap-api/service-requests/analytics?plantIds='+plantid,{\r\n            method: 'GET',\r\n            headers:{\r\n              'Authorization':'Bearer '+ token,\r\n              'accept': \"*/*\",\r\n            },\r\n\r\n          });\r\n          //console.log(kpidatafinal.json());\r\n        let  kpidata = await kpidatafinal.json();\r\n        let kpidatalength=kpidata.data.length;\r\n        //console.log(\"downtime\"+JSON.stringify(kpidatalength));\r\n        \r\n        \r\n        if(kpidatalength!=0){\r\n        const updatedKipobj = {\r\n          ...kipobj,\r\n          kpi4: {\r\n            ...kipobj.kpi4,\r\n            title: JSON.stringify(kpidata.data[0].completedCount),\r\n          },\r\n          kpi5: {\r\n            ...kipobj.kpi5,\r\n            title:JSON.stringify(kpidata.data[0].downtime),\r\n          },\r\n          kpi2:{\r\n            ...kipobj.kpi2,\r\n            title:\r\n            JSON.stringify(prop.kpimachines)\r\n          },\r\n          kpi3: {\r\n            ...kipobj.kpi3,\r\n            title:\r\n            JSON.stringify(kpidata.data[0].newCount+kpidata.data[0].completedCount)\r\n          },\r\n          kpi6: {\r\n            ...kipobj.kpi6,\r\n            title:\r\n            JSON.stringify(prop.kpidisconnected)\r\n          },\r\n         //totaldevicesinstalled\r\n          kpi1: {\r\n            ...kipobj.kpi1,\r\n            title:\r\n            JSON.stringify(prop.kpimonitors)\r\n          }\r\n        };\r\n        \r\n       setKipobj(updatedKipobj);\r\n      }\r\n      else{\r\n        initialKipobj.kpi2.title=JSON.stringify(prop.kpimachines);\r\n        initialKipobj.kpi1.title=JSON.stringify(prop.kpimonitors);\r\n        initialKipobj.kpi3.title='-';\r\n        initialKipobj.kpi4.title='-';\r\n        initialKipobj.kpi5.title='-';\r\n        initialKipobj.kpi6.title= JSON.stringify(prop.kpidisconnected);\r\n        setKipobj(initialKipobj); \r\n      }\r\n        \r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchPlantDetails();\r\n  }, [prop.currentPlant,prop.kpimachines,prop.kpimonitors,prop.kpidisconnected ]);\r\n  \r\n  //console.log(\"rresult\"+result);\r\n  return (\r\n    <div className=\"boxes-section row\">\r\n      {Object.keys(kipobj).map(function (ele) {\r\n        return <KPIofPlant data={kipobj[ele]} />;\r\n      })}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Services\\loginCredentialsAndQueries.js",["154"],[],"\r\nexport async function LoginCredentialsAndQueries() {\r\n    let accessToken=\"\";\r\n    \r\n      try {\r\n         \r\n        const loginResponse =  await window.ZOHO.CREATOR.init().then(function(data) {\r\n          let accessTokenz=\"\";\r\n          let userid=window.ZOHO.CREATOR.UTIL.getQueryParams().user;\r\n          //console.log(\"userid\"+userid)\r\n        \r\n         var config = {\r\n          appName: \"infinite-control-room\",\r\n          reportName: \"My_Profile_Data\",\r\n          criteria: \"Username ==\\\"\"+userid+\"\\\"\",\r\n          page: \"1\",\r\n          pageSize: \"100\"\r\n        }\r\n        const access=window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n          let userData = response;\r\n          \r\n          accessTokenz=userData.data[0].Access_Token;\r\n          //console.log(\"userData\"+JSON.stringify(userData.data[0].Access_Token));\r\n         // console.log(\"check\"+accessToken);\r\n         // return accessToken;\r\n        return accessTokenz;\r\n        });\r\n        return access;\r\n      });\r\n      const queryParams =  await window.ZOHO.CREATOR.init().then(function(data) { \r\n        return window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n      });\r\n    \r\n        const loginData = await loginResponse;\r\n\r\n       accessToken = loginData;\r\n         //console.log(\"queryParamsLOGIN\"+JSON.stringify(queryParams));\r\n         //console.log(\"dataused\"+JSON.stringify(accessToken),queryParams)\r\n        \r\n        const lqp={accessToken,queryParams};\r\n        // let orgid=queryParams.PlantId.split(\",\")[1];\r\n        // const orgidAll=queryParams.PlantId.split(\",\");\r\n      //console.log(\"dataused\"+accessToken,queryParams)\r\n        return accessToken;\r\n      } catch (error) {\r\n        console.error(error);\r\n        throw error;\r\n      }\r\n    }\r\n    ","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\TotalPlants.js",["155","156","157","158"],[],"import React, { useState,useEffect } from \"react\";\r\nimport KPI from \"./Header/KPI\";\r\nimport { LoginCredentialsAndQueries } from \"../Services/loginCredentialsAndQueries\";\r\nimport { Image } from \"../Services/image\";\r\n\r\nimport icon1 from '../assets/imgs/about-icon-1.png';\r\nimport icon2 from '../assets/imgs/about-icon-2.png';\r\nimport icon3 from '../assets/imgs/about-icon-3.png';\r\nimport icon4 from '../assets/imgs/about-icon-4.png';\r\nimport icon5 from '../assets/imgs/about-icon-5.png';\r\nimport test from '../assets/imgs/test.png';\r\n\r\n\r\nfunction TotalPlants(prop){\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n    const initialKipobj = {\r\n        kpi1: {\r\n          title: \"\",\r\n          value: \"Total Devices Installed\",\r\n         src:icon1\r\n        },\r\n        kpi2: { title: \"\", value: \"Total Machines Digitized\", src:icon2},\r\n        kpi3: { title: \"\", value: \"Total Faults Identified\", src:icon3 },\r\n        kpi4: { title: \"\", value: \"Reports Closed\", src:icon4},\r\n        kpi5: { title: \"\", value: \"Downtime Saved (Hrs)\" , src:icon5},\r\n        kpi6: { title: \"\", value: \"Disconnected\",src:test },\r\n       \r\n\r\n      };\r\n      useEffect(() => {\r\n        const fetchDataz = async () => {\r\n          try {\r\n            const response = await Image();\r\n            if (response.length > 0) {\r\n              // console.log(\"imageurl\", response);\r\n              setImageUrl(response);\r\n            }\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        };\r\n    \r\n        fetchDataz();\r\n      }, []);\r\n      let kpimonitorsnew=0;\r\n      let kpimachinesnew=0;\r\n      let kpidisconnected=0;\r\n      prop.plantsData.forEach(element => {\r\n       // console.log(element.length);\r\n        kpimachinesnew=kpimachinesnew+ element.length;\r\n        element.forEach(ele=>{\r\n          ele.monitors.forEach((emoni)=>{\r\n            if(emoni.status==5){\r\n              kpidisconnected++;\r\n            }\r\n            })\r\n            kpimonitorsnew= kpimonitorsnew+ele.monitors.length;\r\n           // console.log( ele.monitors.length);\r\n        })\r\n        \r\n      });\r\n     // console.log(\"km\"+kpimonitorsnew);\r\n      const [kipobj, setKipobj] = useState(initialKipobj);\r\n      useEffect(() => {\r\n        const fetchPlantDetails = async () => {\r\n          try {\r\n            let token=await LoginCredentialsAndQueries();\r\n            const requests = prop.plantsData.map(plant =>\r\n            //  let newplantid = plant[0].plantid;\r\n        fetch('https://api.infinite-uptime.com/api/3.0/idap-api/service-requests/analytics?plantIds=' + plant[0].plantid, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': 'Bearer ' + token,\r\n            'accept': \"*/*\",\r\n          },\r\n        })\r\n        \r\n      );\r\n      const responses = await Promise.all(requests);\r\n      const kpidataList = await Promise.all(responses.map((response) => response.json()));\r\n      //console.log(kpidataList);\r\n      let newcompletedCount='';\r\n      let newdowntime='';\r\n      let newnewCount='';\r\n      \r\n      if(kpidataList){\r\n        kpidataList.map(kpi=>{\r\n          //console.log(kpi);\r\n            if(kpi.data.length>0){\r\n               // console.log(newcompletedCount);\r\n           newcompletedCount=Number(newcompletedCount)+ kpi.data[0].completedCount;\r\n           //console.log(kpi.data[0].completedCount);\r\n           newdowntime=Number(newdowntime)+kpi.data[0].downtime;\r\n           newnewCount=Number(newnewCount)+kpi.data[0].newCount+kpi.data[0].completedCount;\r\n           //console.log(newcompletedCount);\r\n       } \r\n       else{\r\n        newcompletedCount=Number(newcompletedCount)+ 0;\r\n        //console.log(kpi.data[0].completedCount);\r\n        newdowntime=Number(newdowntime)+0;\r\n        newnewCount=Number(newnewCount)+0;\r\n       }\r\n      })\r\n       const updatedKipobj = {\r\n        ...kipobj,\r\n        kpi4: {\r\n          ...kipobj.kpi4,\r\n          title: JSON.stringify(newcompletedCount),\r\n        },\r\n        kpi5: {\r\n          ...kipobj.kpi5,\r\n          title:JSON.stringify(newdowntime),\r\n        },\r\n        kpi2:{\r\n          ...kipobj.kpi2,\r\n          title:\r\n          JSON.stringify(kpimachinesnew)\r\n        },\r\n        kpi3: {\r\n          ...kipobj.kpi3,\r\n          title:\r\n          JSON.stringify(newnewCount)\r\n        },\r\n       //totaldevicesinstalled\r\n       kpi6: {\r\n        ...kipobj.kpi6,\r\n        title:\r\n        JSON.stringify(kpidisconnected)\r\n      },\r\n        kpi1: {\r\n          ...kipobj.kpi1,\r\n          title:\r\n          JSON.stringify(kpimonitorsnew)\r\n        }\r\n      };\r\n      setKipobj(updatedKipobj);\r\n      }\r\n          else{\r\n\r\n            const updatedKipobj = {\r\n        ...kipobj,\r\n        \r\n        kpi2:{\r\n          ...kipobj.kpi2,\r\n          title:\r\n          JSON.stringify(kpimachinesnew)\r\n        },\r\n        kpi6:{\r\n          ...kipobj.kpi6,\r\n          title:\r\n          JSON.stringify(kpidisconnected)\r\n        },\r\n       \r\n       //totaldevicesinstalled\r\n        kpi1: {\r\n          ...kipobj.kpi1,\r\n          title:\r\n          JSON.stringify(kpimonitorsnew)\r\n        }\r\n      };\r\n      setKipobj(updatedKipobj); \r\n          }\r\n            \r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        };\r\n    \r\n        fetchPlantDetails();\r\n      }, [prop]);    \r\n\r\n      const result = imageUrl.includes(\"no image available\") ||imageUrl==\"\";\r\n    return(\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-2 col-sm-4 mb-2\">\r\n         \r\n          { !result&& <div className=\"brand-logo text-center\"><img src={imageUrl} alt=\"Brand Logo\" className=\"img-fluid\"/></div>} \r\n          </div> \r\n          <div class=\"col-lg-10\">\r\n            <div class=\"row\">\r\n            {Object.keys(kipobj).map(function (ele) {\r\n        return <KPI data={kipobj[ele]} />;\r\n      })}\r\n            </div>\r\n          </div>\r\n      \r\n      \r\n    </div>\r\n    )\r\n}\r\nexport default TotalPlants;","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Services\\image.js",[],[],"C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Header\\KPIofPlant.js",[],[],"C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\PatternStorage.js",["159","160","161","162","163","164","165","166"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst PatternStorage = (props) => {\r\n    const [pattern, setPattern] = useState([]);\r\n    const curPlId=props.cp[0].plantid;\r\n    //console.log(props.cp[0].plantid,props.cp[0].plantName);\r\n\r\n    useEffect(() => {\r\n       // console.log(\"PatternStorage Working\");\r\n        const newPattern = [];\r\n        props.plantsData.forEach((item) => {\r\n            if (item !== undefined) {\r\n                const newItems = item[0].plantid;\r\n                newPattern.push(newItems);\r\n            }\r\n        });\r\n\r\n        // Reorder the pattern if cp changes\r\n        const currentIndex = newPattern.indexOf(props.cp[0].plantid);\r\n        if (currentIndex !== -1) {\r\n            newPattern.splice(currentIndex, 1);\r\n            newPattern.unshift(props.cp[0].plantid);\r\n        }\r\n\r\n        setPattern(newPattern);\r\n        // Store the pattern in sessionStorage\r\n        sessionStorage.setItem('plantPattern', JSON.stringify(newPattern));\r\n        const loginResponse =  window.ZOHO.CREATOR.init().then(function (data) {\r\n            let accessTokenz = \"\";\r\n            let userid = window.ZOHO.CREATOR.UTIL.getQueryParams().user;\r\n      \r\n            var config = {\r\n              appName: \"infinite-control-room\",\r\n              reportName: \"My_Profile_Data\",\r\n              criteria: \"Username == \\\"\" + userid + \"\\\"\",\r\n              page: \"1\",\r\n              pageSize: \"100\"\r\n            };\r\n      \r\n            const access = window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n            const idx=response.data[0].ID;\r\n            console.log(idx);\r\n            const formData={\r\n                \"data\": {\r\n                  \"PlantPattern\": JSON.stringify(newPattern)\r\n                }\r\n            }\r\n           const  config = {\r\n                appName : \"infinite-control-room\",\r\n                reportName  : \"My_Profile_Data\",\r\n                id: idx,\r\n                data : formData\r\n              };\r\n              const acce=window.ZOHO.CREATOR.API.updateRecord(config).then(function(response){\r\n               \r\n            console.log(response);\r\n\r\n                if(response.code == 3000 && response.message == \"Data Updated Successfully\"){\r\n                   console.log(\"working\");\r\n                }\r\n              });\r\n            });\r\n           \r\n          });\r\n          //console.log(access);\r\n    }, [props.plantsData, curPlId]);\r\n\r\n   // console.log(sessionStorage.getItem('plantPattern'));\r\n//sessionStorage.clear();\r\n    // Render your component\r\n    return <></>;\r\n};\r\n\r\nexport default PatternStorage;\r\n","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Plant\\Plant.js",[],[],"C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\MFI\\MFI.js",["167","168"],[],"C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Pagination\\Pagination.js",[],[],"C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\AA\\AA.js",["169","170"],[],"C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Header\\KPI.js",[],[],"C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Plant\\MG.js",["171"],[],"import React from \"react\";\r\nimport Machine from \"./Machine\";\r\n\r\nfunction MG(prop){\r\n    \r\n   let mgarray=()=> prop.mg.map(function(ele){\r\n   // return console.log(\"mg\"+ele.id);\r\n    \r\n   })\r\n   mgarray();\r\n    return(\r\n        \r\n           <Machine machine={prop.mg}/>\r\n        \r\n    )\r\n}\r\nexport default MG;","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Plant\\Machine.js",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Monitor from \"./Monitor\";\r\nimport './Machine.css';\r\nimport { Velocity } from '../../../Services/Velocity'\r\nimport Tablemini from \"./Tablemini\";\r\nimport icon1 from '../../../assets/imgs/cement-box-icon-1.png';\r\nimport icon2 from '../../../assets/imgs/cement-box-icon-2.png';\r\n\r\n\r\nfunction Machine(prop) {\r\n  const [showPopup, setShowPopup] = useState(false); // State variable for pop-up visibility\r\n  const [apiData, setApiData] = useState([]); // State variable for API data\r\n\r\n  let monitorStyle = {};\r\n  useEffect(() => {\r\n    // Function to fetch API data\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await Velocity();\r\n\r\n        //   setApiData(response);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    // Fetch API data initially\r\n    fetchData();\r\n\r\n    // Fetch API data every 30 seconds\r\n    const interval = setInterval(fetchData, 30000);\r\n\r\n    // Clean up the interval when the component is unmounted\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getVelocity = async (id) => {\r\n\r\n    const response = await Velocity();\r\n    // console.log(\"velocityid\"+id);\r\n    response.filter((ele) => ele.id == id).map((ele) => {\r\n      // console.log(\"neededid\"+JSON.stringify(ele));\r\n      setApiData(ele);\r\n    });\r\n  }\r\n  const handleInfoClick = async (id) => {\r\n    try {\r\n      const velocityData = await Velocity();\r\n      // console.log(\"velocityid\" + id);\r\n      const selectedData = velocityData.filter((ele) => ele.id === id)[0];\r\n      setApiData(selectedData);\r\n      setShowPopup(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setShowPopup(false);\r\n  };\r\n\r\n  return (\r\n\r\n    \r\n       <div className=\"cement-mill-sec\">\r\n              <div className=\"cement-mill-wrapper\">\r\n                <div className=\"row\">\r\n      {prop.machine.map(function (ele) {\r\n        const stylez = {};\r\n        let grayshade=[];\r\n        let minimumValue = 0;\r\n        ele.monitors.map((data) => {\r\n           // console.log(\"statusvalue\"+data.status,minimumValue)\r\n          grayshade.push(data.status);\r\n          if(data.status!=5){\r\n          if (data.status >= minimumValue) minimumValue = data.status;\r\n          if (minimumValue == 1 || minimumValue == 2) stylez.backgroundColor = \"#64DD17\";\r\n          else if (minimumValue == 3) stylez.backgroundColor = \"#FFC107\";\r\n          else if (minimumValue == 4) stylez.backgroundColor = \"#FF5722\";\r\n          // else if (minimumValue == 5 && (grayshade%5)==0){\r\n          //  console.log(\"grayshade\"+grayshade);\r\n          //   stylez.backgroundColor = \"#9E9E9E\";\r\n          // }\r\n          } \r\n        })\r\n        const allEqual = arr => arr.every(val => {\r\n          return val === 5 ||val == undefined\r\n        });\r\n        const result=allEqual(grayshade);\r\n        if(result)stylez.backgroundColor = \"#9E9E9E\";\r\n       // console.log(grayshade,result);\r\n        return (\r\n         \r\n\r\n           \r\n\r\n                  <div className=\"col-lg col-20 mb-1\" >\r\n                    <div className=\"cement-mill-box \" style={{\"padding\":\"2px\"}}>\r\n                      <p className=\"heading text-white mb-0 fw-bold fs-14 text-center\">\r\n                      {ele.mg}\r\n                      </p>\r\n                      <p className=\"text-dark fs-14 mb-0 fw-bold text-center p-1\">\r\n                      {ele.name}\r\n                      </p>\r\n                      <div className=\"color-boxes\">\r\n                        <div className=\"box-wrapper pb-3\">\r\n                          <Monitor monitor={ele.monitors} />\r\n                        </div>\r\n                        <div className=\"box-footer d-flex justify-content-between\" style={stylez} onClick={() => handleInfoClick(ele.id)}>\r\n                          <div className=\"d-flex align-items-center\">\r\n                            <div className=\"icon mb-0\">\r\n                              <img src={icon1} alt=\"Secure Icon\" className=\"img-fluid\" />\r\n                            </div>\r\n                            <p className=\"fs-14 mt-1 text-black fw-bold mb-0\">\r\n                              {ele.healthScore}%\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"i-icon\" onClick={() => handleInfoClick(ele.id)}>\r\n                            <img src={icon2} alt=\"I icon\" className=\"img-fluid\" />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                \r\n          \r\n        );\r\n      })}\r\n       {showPopup && (\r\n        <div className=\"popup\"  id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\" id=\"exampleModalLabel\"><center>{apiData.name}</center></h4>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n            <div className=\"table-responsive custom-content-table\" style={{height:\"300px\"}}>\r\n  <table className=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">Monitor<br/>Name</th>\r\n        <th scope=\"col\">Axial</th>\r\n        <th scope=\"col\">Vertical</th>\r\n        <th scope=\"col\">Horizontal</th>\r\n        <th scope=\"col\">Temperature</th>\r\n        <th scope=\"col\">Health<br/>Score</th>\r\n        <th scope=\"col\">Vibration<br/>Trend</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n                {apiData.monitors.map((data) => {\r\n                  // console.log(\"table call\"+data.healthScore);\r\n                  const stylemon = { \"width\": \"auto\",scope:\"row\" };\r\n                  \r\n                  \r\n                  if (data.status == 1 || data.status == 2) stylemon.backgroundColor = \"#64DD17\";\r\n                  else if (data.status == 3) stylemon.backgroundColor = \"#FFC107\";\r\n                  else if (data.status == 4) stylemon.backgroundColor = \"#FF5722\";\r\n                  else {\r\n                    stylemon.backgroundColor = \"#9E9E9E\";\r\n                  }\r\n               \r\n\r\n                  return (\r\n                    <Tablemini data={data} stylz={stylemon} />\r\n                  );\r\n                })}\r\n\r\n</tbody>\r\n  </table>\r\n</div>\r\n\t    \r\n\t   \r\n\t   <div className=\"modal-bottom-content\">\r\n           \r\n            {/* <center>For Detailed Analysis Click Here!</a></center> */}\r\n            <p><strong>Observation</strong>: {apiData.observation}</p>\r\n            <p><strong>Diagnostic</strong>: {apiData.diagnostic}</p>\r\n            <p><strong>Recommendation</strong>: {apiData.recommendation}</p>\r\n            </div>\r\n            </div>\r\n            <div className=\"modal-footer\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n        <button type=\"button\" className=\"btn btn-sm btn-secondary fw-bold shadow\"  onClick={closePopup}>Close</button>\r\n       <button\r\n  type=\"button\"\r\n  className=\"btn btn-sm click-here-btn fw-bold shadow\"\r\n  onClick={() =>\r\n    window.open(\r\n      \"https://idap.infinite-uptime.com/#/dashboard/MonitoringTable\",\r\n      \"_blank\"\r\n    )\r\n  }\r\n>\r\n  For Detailed Analysis Click Here!\r\n</button>\r\n      </div>\r\n            \r\n      </div>\r\n  </div>\r\n</div>\r\n      )}\r\n     \r\n    </div>\r\n    </div>\r\n              </div>\r\n            \r\n  );\r\n}\r\n\r\nexport default Machine;\r\n","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Services\\Velocity.js",["188","189"],[],"\r\nexport async function Velocity() {\r\n    let accessToken = \"\";\r\n\r\n    const arrayOfMachines = [];\r\n\r\n\r\n\r\n    try {\r\n\r\n        const loginResponse = await window.ZOHO.CREATOR.init().then(function (data) {\r\n            let accessTokenz = \"\";\r\n            let userid=window.ZOHO.CREATOR.UTIL.getQueryParams().user;\r\n            //console.log(\"userid\"+userid)\r\n          \r\n           var config = {\r\n            appName: \"infinite-control-room\",\r\n            reportName: \"My_Profile_Data\",\r\n            criteria: \"Username ==\\\"\"+userid+\"\\\"\",\r\n            page: \"1\",\r\n            pageSize: \"100\"\r\n          }\r\n            const access = window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n                let userData = response;\r\n\r\n                accessTokenz = userData.data[0].Access_Token;\r\n                return accessTokenz;\r\n            });\r\n            return access;\r\n        });\r\n        const queryParams = await window.ZOHO.CREATOR.init().then(function (data) {\r\n            return window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n        });\r\n\r\n        const loginData = await loginResponse;\r\n        // console.log(\"loginData\"+ loginData);\r\n        accessToken = loginData;\r\n        //accessToken=\"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIyY0NxRnpxRXJrNU5GS1RjTi1YSk1IdE9NS2tWVTZXS1hIdHZFMF8xZE5ZIn0.eyJleHAiOjE2ODY5NTQ5OTEsImlhdCI6MTY4NjkxMTc5MSwianRpIjoiNDU0MGQ1MTctNjE1ZS00NDZmLTgxOTgtNTc1YzY1ZjUwZmM3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5pbmZpbml0ZS11cHRpbWUuY29tL3JlYWxtcy9pZGFwIiwic3ViIjoiZjo2MGNhNzY4Yy1iMTA0LTQ0OTktYjU4Yy05MzliOTdlNzAzM2Q6ODcxMSIsInR5cCI6IkJlYXJlciIsImF6cCI6ImlkYXAiLCJzZXNzaW9uX3N0YXRlIjoiNGQ0YjUzMDAtM2NlZC00ZTk5LTlmNDEtYmRjMDI0ZjJkMzhlIiwic2NvcGUiOiJlbWFpbCIsInNpZCI6IjRkNGI1MzAwLTNjZWQtNGU5OS05ZjQxLWJkYzAyNGYyZDM4ZSIsImlzX2FkbWluIjoiZmFsc2UiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImlkYXBfcm9sZSI6IlJPTEVfVVNFUiIsImVtYWlsIjoiUmFwYWthLmNoYW5kcmFzaGVrYXJAZ21haWwuY29tIn0.l8NL7t1Kqf77hOHo_kGSpcKzDoSjFFYmKdyn3y6-fC45B_ICvvYz_FLMfazPMOxVzMG0nb0nD88y_J45wFYTjLnfwbZbIzw--vbVKt1EMe4qK6ko4wv1jTRrjg97m7PaQL3FLcv1JSPafJ8ukPm1z4BPo0tpoHlbZX1vCGwm1ZgdJqTBM6bJrtrLyB1EcABWsXIbd7r_756vua7sOO_7ZkAppAiHTV3qqjM5N0cjHaKTkMXYAiVkl6kBpsZf7N8CCdwkZTKV3rapK_zQGJhS2VxSNkeiERF2Y16nyPxSjxyzQFBB6I0AB2xqSSWlhJ6Shk2yaaI1MB9_cdt8oOgJPg\";\r\n        //console.log(\"queryParamsvelocity\" + JSON.stringify(queryParams));\r\n\r\n        //console.log(\"accessToken\"+accessToken);\r\n        //console.log(\"check\"+ accessToken);\r\n\r\n        // let orgid=queryParams.PlantId.split(\",\")[1];\r\n        const orgidAll = queryParams.PlantId.split(\",\");\r\n        let plantsData;\r\n        let plantsResponse\r\n        plantsResponse = await Promise.all(orgidAll.map(async (orgid) => {\r\n            plantsResponse = await fetch(`https://api.infinite-uptime.com/api/2.0/md/monitoring/bymonitors?plantId=${orgid}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + accessToken,\r\n                },\r\n            });\r\n            plantsData = await plantsResponse.json();\r\n            \r\n            plantsData.machineGroups.map((mg) => {\r\n                \r\n                mg.machines.map((machine) => {\r\n                    arrayOfMachines.push(machine);\r\n                })\r\n\r\n            })\r\n\r\n        }));\r\n\r\n        // console.log(\"velocityarrayofMachines\", arrayOfMachines);\r\n\r\n        return arrayOfMachines;\r\n\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw error;\r\n    }\r\n}\r\n","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Plant\\Monitor.js",["190","191","192","193"],[],"import React from \"react\";\r\nfunction Monitor(prop) {\r\n    // const boxzz=prop.monitor;\r\n    //  console.log(\"monitors\"+JSON.stringify(prop.monitor[1]));\r\n\r\n    return (\r\n        <>\r\n            {\r\n                Object(prop.monitor).map(function (ele) {\r\n                    const style = {\"padding\":\"2%\"};\r\n                    if (ele.status == 1 ||ele.status==2)style.backgroundColor = \"#64DD17\";\r\n                    else if (ele.status==3) style.backgroundColor = \"#FFC107\";\r\n                    else if (ele.status ==4) style.backgroundColor = \"#FF5722\";\r\n                    else {\r\n                        style.backgroundColor = \"#9E9E9E\";\r\n                    }\r\n                    \r\n                    return (\r\n                        \r\n                        \r\n                            <div className=\"box\" style={style}></div>\r\n                      \r\n                        \r\n                    )\r\n\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Monitor;","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Plant\\Tablemini.js",["194","195","196","197"],[],"import React from \"react\";\r\nfunction Tablemini(prop){\r\n    const data=prop.data;\r\n    let trendz=data.trend==3?\"Significant rise\":(data.trend==2?\"Minor rise\":(data.trend==1)?\"No rise\":data.trend)\r\n    // console.log(\"tabledata\"+JSON.stringify(data));\r\n    return(\r\n      <tr key={data.id}  >\r\n      <td style={prop.stylz}>{data.name}</td><td>{Number(data.velocityX).toFixed(2)}</td><td>{Number(data.velocityY).toFixed(2)}</td><td>{Number(data.velocityZ).toFixed(2)}</td><td>{Number(data.temperature).toFixed(2)}</td><td>{(data.healthScore==0)?\"NA\":data.healthScore+\"%\"}</td><td>{trendz}</td></tr>\r\n\r\n    )\r\n}\r\nexport default Tablemini;","C:\\Users\\demo\\Desktop\\CRV\\Zoho_widget_React\\react_app\\src\\Components\\Containers\\Scrollbar\\AlertsBar.js",["198","199","200","201","202","203","204","205","206"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\r\nimport './AlertsBar.css';\r\n\r\nconst AlertsBar = ( prop) => {\r\n\r\n    const [accessToken, setAccessToken] = useState(\"\");\r\n  const [dataDisplay, setDataDisplay] = useState();\r\n  const [totalAlerts,setTotalAlerts ] = useState([]);\r\n  const [animationDuration,setAnimationDuration]=useState(30);\r\n  const [animationPaused,setAnimationPaused]=useState(false);\r\n  let contentLength = 0;\r\n\r\n\r\n  const totalPlants=prop.plantsData;\r\n  const currentPlant = prop.currentPlant;\r\n  //console.log(\"AA1\", currentPlant[0].plantid, accessToken);\r\n\r\n  useEffect(() => {\r\n    const fetchDataz = async () => {\r\n      try {\r\n        const response = await LoginCredentialsAndQueries();\r\n        if (response.length > 0) {\r\n          //console.log(\"responseAA\", response);\r\n          setAccessToken(response);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchDataz();\r\n  }, [prop.currentPlant]);\r\n\r\n  //let plantid = currentPlant[0].plantid;\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let now = new Date();\r\n      let dtTo = now.toISOString().replace(/\\.\\d+Z$/, \"Z\").replace(/:/g, \"%3A\");\r\n      let dtFrom = new Date(now.getTime() - 24 * 60 * 60 * 1000)\r\n        .toISOString()\r\n        .replace(/\\.\\d+Z$/, \"Z\")\r\n        .replace(/:/g, \"%3A\");\r\n\r\n      try {\r\n        const fetchPromises = totalPlants.map(async (element) => {\r\n          //console.log()\r\n          const plantid = element[0].plantid;\r\n          //console.log(\"id\"+plantid);\r\n          const response = await fetch(\r\n            \"https://api.infinite-uptime.com/api/3.0/idap-api/anomaly-alerts/plants?plantIds=\" +\r\n              plantid +\r\n              \"&from=\" +\r\n              dtFrom +\r\n              \"&to=\" +\r\n              dtTo,\r\n            {\r\n              method: \"GET\",\r\n              headers: {\r\n                accept: \"application/json\",\r\n                Authorization: \"Bearer \" + accessToken,\r\n              },\r\n            }\r\n          );\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            // console.log(\"datacheck1\"+data.data.length);\r\n           // console.log(\"datacheck1\"+data.data.length);\r\n            if (data && data.data.length > 0) {\r\n\r\n            const response2 = await fetch(\r\n              \"https://api.infinite-uptime.com/api/3.0/idap-api/service-requests?plantIds=\" + plantid,\r\n              {\r\n                method: \"GET\",\r\n                headers: {\r\n                  accept: \"application/json\",\r\n                  Authorization: \"Bearer \" + accessToken,\r\n                },\r\n              }\r\n            );\r\n             // console.log(response2.ok);\r\n            if (response2.ok) {\r\n              \r\n              const data2 = await response2.json();\r\n             // console.log(\"datacheck2\"+data2);\r\n              if (data2 && data.data.length>0&&Object.keys(data2).length > 0) {\r\n              let newData = [];\r\n              newData.push(data);\r\n              newData.push(data2);\r\n              return newData;\r\n            }\r\n          }\r\n        }\r\n      }\r\n        \r\n\r\n          // Handle cases where the API call is not successful (e.g., 401 Unauthorized)\r\n         // return null;\r\n          //console.log(\"data2\",data2);\r\n        \r\n        });\r\n\r\n        const alertsData = await Promise.all(fetchPromises);\r\n        //console.log(\"data\",JSON.stringify(alertsData));\r\n        let dummy =[];\r\n        alertsData.map((ele)=>{\r\n          if(ele!=undefined){\r\n          //aa\r\n          const alert1=ele[0].data.flat();\r\n          //mf\r\n          let key = Object.keys(ele[1].data);\r\n         // console.log(key);\r\n          const alert2 = ele[1].data[key].filter((ele) => ele.status === \"NEW\");\r\n          dummy.push(alert1);\r\n          const alert2v1=(alert2)=>{\r\n            \r\n            let newAlert=[];\r\n            alert2.map((ele)=>{\r\n              if(check24(ele)){\r\n                newAlert.push(ele);\r\n                //dummy.push(ele);\r\n              }\r\n            })\r\n           return newAlert;\r\n          }\r\n          \r\n          dummy.push(alert2v1(alert2));\r\n        }\r\n          \r\n        })\r\n        //console.log(\"hero\"+JSON.stringify(dummy));\r\n        // Combine all alerts from different plants into a single array\r\n        const combinedAlerts = dummy.flat();\r\n        //console.log(combinedAlerts);\r\n       // const newZ=combinedAlerts.push(\"=\");\r\n        setTotalAlerts(prevAlert=>prevAlert.length===combinedAlerts.length?prevAlert:combinedAlerts);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n     \r\n     \r\n    fetchData();\r\n    // const interval = setInterval(fetchData, 30000);\r\n\r\n    // return () => {\r\n    //   clearInterval(interval);\r\n    // };\r\n  }, [currentPlant, accessToken, totalPlants,totalAlerts]);\r\n  //console.log(\"data\"+JSON.stringify(totalAlerts),totalAlerts.length);\r\n  let lengthofDisplay = totalAlerts && totalAlerts.length == 0;\r\n  useEffect(() => {\r\n    if (totalAlerts && totalAlerts.length > 0) {\r\n      contentLength = totalAlerts.reduce((length, ele) => {\r\n        if (ele) {\r\n          const textValues = Object.values(ele).filter((value) => typeof value === \"string\");\r\n          const textLength = textValues.join('').length;\r\n          return length + textLength;\r\n        }\r\n        return length;\r\n      }, 0);\r\n\r\n      if (!isNaN(contentLength) && contentLength > 0) {\r\n        const durationFactor = 0.05;\r\n        const calculatedDuration = Math.max(30, contentLength * durationFactor);\r\n        setAnimationDuration(calculatedDuration);\r\n      } else {\r\n        console.error(\"invalid content length\", contentLength);\r\n      }\r\n    }\r\n  }, [totalAlerts]);\r\n\r\n\r\n  //  console.log(\"checking\",lengthofDisplay,dataDisplay.data.length)\r\n  \r\n    function parseCustomDate(dateString) {\r\n      const dateObject = new Date(dateString);\r\n      return dateObject;\r\n      }\r\n    const check24=(ele)=>{\r\n      \r\n      if(ele.status){\r\n        \r\n        const dateString = parseCustomDate(ele.createdDate);\r\n        const date = new Date(dateString);\r\n        const currentDate = new Date();\r\n        const timeDifference = currentDate - date;\r\n        const hoursDifference = timeDifference / (1000 * 60 * 60);\r\n       // console.log(dateString,date,hoursDifference);\r\n        if (hoursDifference <= 24) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }  \r\n      }\r\n      else{\r\n        return false;\r\n      }\r\n    }\r\n    const urlFault=(sid)=>{\r\n      return `https://drs.infinite-uptime.com/reports-doc/`+sid\r\n    }\r\n    //console.log(animationDuration);\r\n    const urlAA=(ele)=>{\r\n      console.log(\"clicked\");\r\n        window.open(\"https://idap.infinite-uptime.com/#/dashboard/MonitoringTable\");\r\n        // document.cookie = \"idap-machineName-PROD=1BE304 - 02-GEARBOX; domain=.infinite-uptime.com\"//but we tried to set cookies here-hard coded\r\n \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n      \r\n      <div className=\"alerts-bar\" style={{ background: \"#ffc0c0\",color:\"red\" }}onMouseEnter={() => setAnimationPaused(true)} onMouseLeave={() => setAnimationPaused(false)}>\r\n        <div className={`marquee ${animationPaused ? 'marquee-paused' : ''}`} style={{animation:`marquee ${animationDuration}s linear infinite`}} >\r\n         \r\n        {totalAlerts && totalAlerts.length > 0 ? ( \r\n  totalAlerts.map((ele,index) => (\r\n    <span key={index}>\r\n      { ele.status ? \r\n        (<> New Fault identified for Plants {<span className=\"fw-bold\">{ele.serviceReqMachineDetails[0]?ele.serviceReqMachineDetails[0].plantName:\"\"}</span>} : Machine : <span className=\"fw-bold\"> <a href={urlFault(ele.id)} target=\"_blank\" style={{ color:\"red\"}}>{ele.serviceReqMachineDetails[0]?ele.serviceReqMachineDetails[0].machineName:\"\"}</a></span> | </> )      : \r\n        (ele.anomalyDetected?(<> New Anomaly Alert Generated for Plants {<span className=\"fw-bold\">{ele.plantName}</span>} : Machine :<span className=\"fw-bold hover\"> <span onClick={(e)=>{urlAA(ele.machineName)}} target=\"_blank\" style={{ color:\"red\"}}>{ele.machineName}</span></span> | </>):<></>)\r\n    }\r\n      \r\n    </span>\r\n  ))\r\n) : (\r\n  lengthofDisplay ? (\r\n    <>No Anomaly Alert or New Faults Notifications in Last 24 Hours </>\r\n  ) : (\r\n    <>No Anomaly Alert or New Faults Notifications in Last 24 Hours</>\r\n  )\r\n)}\r\n\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\nexport default AlertsBar;",{"ruleId":"207","severity":1,"message":"208","line":2,"column":9,"nodeType":"209","messageId":"210","endLine":2,"endColumn":18},{"ruleId":"207","severity":1,"message":"208","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":26},{"ruleId":"207","severity":1,"message":"211","line":2,"column":8,"nodeType":"209","messageId":"210","endLine":2,"endColumn":14},{"ruleId":"207","severity":1,"message":"212","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":16},{"ruleId":"207","severity":1,"message":"213","line":9,"column":10,"nodeType":"209","messageId":"210","endLine":9,"endColumn":17},{"ruleId":"207","severity":1,"message":"214","line":9,"column":19,"nodeType":"209","messageId":"210","endLine":9,"endColumn":29},{"ruleId":"207","severity":1,"message":"215","line":10,"column":10,"nodeType":"209","messageId":"210","endLine":10,"endColumn":17},{"ruleId":"207","severity":1,"message":"216","line":11,"column":24,"nodeType":"209","messageId":"210","endLine":11,"endColumn":39},{"ruleId":"207","severity":1,"message":"217","line":15,"column":12,"nodeType":"209","messageId":"210","endLine":15,"endColumn":30},{"ruleId":"207","severity":1,"message":"218","line":1,"column":5,"nodeType":"209","messageId":"210","endLine":1,"endColumn":15},{"ruleId":"207","severity":1,"message":"219","line":38,"column":9,"nodeType":"209","messageId":"210","endLine":38,"endColumn":14},{"ruleId":"220","severity":1,"message":"221","line":58,"column":24,"nodeType":"222","messageId":"223","endLine":58,"endColumn":25},{"ruleId":"207","severity":1,"message":"224","line":16,"column":18,"nodeType":"209","messageId":"210","endLine":16,"endColumn":27},{"ruleId":"207","severity":1,"message":"225","line":19,"column":10,"nodeType":"209","messageId":"210","endLine":19,"endColumn":19},{"ruleId":"207","severity":1,"message":"226","line":19,"column":21,"nodeType":"209","messageId":"210","endLine":19,"endColumn":33},{"ruleId":"207","severity":1,"message":"227","line":26,"column":25,"nodeType":"209","messageId":"210","endLine":26,"endColumn":42},{"ruleId":"207","severity":1,"message":"228","line":86,"column":15,"nodeType":"209","messageId":"210","endLine":86,"endColumn":19},{"ruleId":"229","severity":1,"message":"230","line":108,"column":64,"nodeType":"231","messageId":"232","endLine":108,"endColumn":66},{"ruleId":"229","severity":1,"message":"230","line":117,"column":24,"nodeType":"231","messageId":"232","endLine":117,"endColumn":26},{"ruleId":"233","severity":1,"message":"234","line":152,"column":6,"nodeType":"235","endLine":152,"endColumn":66,"suggestions":"236"},{"ruleId":"207","severity":1,"message":"237","line":155,"column":11,"nodeType":"209","messageId":"210","endLine":155,"endColumn":19},{"ruleId":"207","severity":1,"message":"238","line":168,"column":13,"nodeType":"209","messageId":"210","endLine":168,"endColumn":25},{"ruleId":"229","severity":1,"message":"230","line":177,"column":24,"nodeType":"231","messageId":"232","endLine":177,"endColumn":26},{"ruleId":"239","severity":1,"message":"240","line":329,"column":11,"nodeType":"241","messageId":"242","endLine":329,"endColumn":78,"fix":"243"},{"ruleId":"207","severity":1,"message":"244","line":3,"column":10,"nodeType":"209","messageId":"210","endLine":3,"endColumn":15},{"ruleId":"229","severity":1,"message":"245","line":55,"column":25,"nodeType":"231","messageId":"232","endLine":55,"endColumn":27},{"ruleId":"233","severity":1,"message":"246","line":107,"column":6,"nodeType":"235","endLine":107,"endColumn":81,"suggestions":"247"},{"ruleId":"207","severity":1,"message":"248","line":40,"column":15,"nodeType":"209","messageId":"210","endLine":40,"endColumn":18},{"ruleId":"229","severity":1,"message":"230","line":53,"column":28,"nodeType":"231","messageId":"232","endLine":53,"endColumn":30},{"ruleId":"249","severity":1,"message":"250","line":87,"column":28,"nodeType":"251","messageId":"252","endLine":87,"endColumn":30},{"ruleId":"233","severity":1,"message":"253","line":170,"column":10,"nodeType":"235","endLine":170,"endColumn":16,"suggestions":"254"},{"ruleId":"229","severity":1,"message":"230","line":172,"column":72,"nodeType":"231","messageId":"232","endLine":172,"endColumn":74},{"ruleId":"207","severity":1,"message":"255","line":4,"column":12,"nodeType":"209","messageId":"210","endLine":4,"endColumn":19},{"ruleId":"207","severity":1,"message":"256","line":28,"column":15,"nodeType":"209","messageId":"210","endLine":28,"endColumn":28},{"ruleId":"207","severity":1,"message":"257","line":29,"column":17,"nodeType":"209","messageId":"210","endLine":29,"endColumn":29},{"ruleId":"207","severity":1,"message":"258","line":40,"column":19,"nodeType":"209","messageId":"210","endLine":40,"endColumn":25},{"ruleId":"207","severity":1,"message":"259","line":54,"column":21,"nodeType":"209","messageId":"210","endLine":54,"endColumn":25},{"ruleId":"229","severity":1,"message":"230","line":58,"column":34,"nodeType":"231","messageId":"232","endLine":58,"endColumn":36},{"ruleId":"229","severity":1,"message":"230","line":58,"column":62,"nodeType":"231","messageId":"232","endLine":58,"endColumn":64},{"ruleId":"233","severity":1,"message":"260","line":66,"column":8,"nodeType":"235","endLine":66,"endColumn":35,"suggestions":"261"},{"ruleId":"207","severity":1,"message":"262","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":20},{"ruleId":"249","severity":1,"message":"263","line":84,"column":33,"nodeType":"251","messageId":"264","endLine":84,"endColumn":35},{"ruleId":"233","severity":1,"message":"265","line":69,"column":6,"nodeType":"235","endLine":69,"endColumn":33,"suggestions":"266"},{"ruleId":"229","severity":1,"message":"230","line":71,"column":64,"nodeType":"231","messageId":"232","endLine":71,"endColumn":66},{"ruleId":"249","severity":1,"message":"267","line":6,"column":33,"nodeType":"268","messageId":"252","endLine":6,"endColumn":41},{"ruleId":"207","severity":1,"message":"269","line":14,"column":7,"nodeType":"209","messageId":"210","endLine":14,"endColumn":19},{"ruleId":"207","severity":1,"message":"270","line":19,"column":15,"nodeType":"209","messageId":"210","endLine":19,"endColumn":23},{"ruleId":"207","severity":1,"message":"271","line":37,"column":9,"nodeType":"209","messageId":"210","endLine":37,"endColumn":20},{"ruleId":"229","severity":1,"message":"230","line":41,"column":37,"nodeType":"231","messageId":"232","endLine":41,"endColumn":39},{"ruleId":"249","severity":1,"message":"250","line":41,"column":54,"nodeType":"251","messageId":"252","endLine":41,"endColumn":56},{"ruleId":"249","severity":1,"message":"250","line":72,"column":33,"nodeType":"251","messageId":"252","endLine":72,"endColumn":35},{"ruleId":"229","severity":1,"message":"245","line":75,"column":25,"nodeType":"231","messageId":"232","endLine":75,"endColumn":27},{"ruleId":"229","severity":1,"message":"230","line":77,"column":28,"nodeType":"231","messageId":"232","endLine":77,"endColumn":30},{"ruleId":"229","severity":1,"message":"230","line":77,"column":49,"nodeType":"231","messageId":"232","endLine":77,"endColumn":51},{"ruleId":"229","severity":1,"message":"230","line":78,"column":33,"nodeType":"231","messageId":"232","endLine":78,"endColumn":35},{"ruleId":"229","severity":1,"message":"230","line":79,"column":33,"nodeType":"231","messageId":"232","endLine":79,"endColumn":35},{"ruleId":"229","severity":1,"message":"230","line":87,"column":34,"nodeType":"231","messageId":"232","endLine":87,"endColumn":36},{"ruleId":"229","severity":1,"message":"230","line":156,"column":35,"nodeType":"231","messageId":"232","endLine":156,"endColumn":37},{"ruleId":"229","severity":1,"message":"230","line":156,"column":55,"nodeType":"231","messageId":"232","endLine":156,"endColumn":57},{"ruleId":"229","severity":1,"message":"230","line":157,"column":40,"nodeType":"231","messageId":"232","endLine":157,"endColumn":42},{"ruleId":"229","severity":1,"message":"230","line":158,"column":40,"nodeType":"231","messageId":"232","endLine":158,"endColumn":42},{"ruleId":"249","severity":1,"message":"250","line":58,"column":47,"nodeType":"251","messageId":"252","endLine":58,"endColumn":49},{"ruleId":"249","severity":1,"message":"250","line":60,"column":43,"nodeType":"251","messageId":"252","endLine":60,"endColumn":45},{"ruleId":"229","severity":1,"message":"230","line":11,"column":36,"nodeType":"231","messageId":"232","endLine":11,"endColumn":38},{"ruleId":"229","severity":1,"message":"230","line":11,"column":53,"nodeType":"231","messageId":"232","endLine":11,"endColumn":55},{"ruleId":"229","severity":1,"message":"230","line":12,"column":40,"nodeType":"231","messageId":"232","endLine":12,"endColumn":42},{"ruleId":"229","severity":1,"message":"230","line":13,"column":41,"nodeType":"231","messageId":"232","endLine":13,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":4,"column":26,"nodeType":"231","messageId":"232","endLine":4,"endColumn":28},{"ruleId":"229","severity":1,"message":"230","line":4,"column":60,"nodeType":"231","messageId":"232","endLine":4,"endColumn":62},{"ruleId":"229","severity":1,"message":"230","line":4,"column":88,"nodeType":"231","messageId":"232","endLine":4,"endColumn":90},{"ruleId":"229","severity":1,"message":"230","line":8,"column":246,"nodeType":"231","messageId":"232","endLine":8,"endColumn":248},{"ruleId":"207","severity":1,"message":"272","line":8,"column":10,"nodeType":"209","messageId":"210","endLine":8,"endColumn":21},{"ruleId":"207","severity":1,"message":"273","line":8,"column":23,"nodeType":"209","messageId":"210","endLine":8,"endColumn":37},{"ruleId":"249","severity":1,"message":"250","line":106,"column":29,"nodeType":"251","messageId":"252","endLine":106,"endColumn":31},{"ruleId":"229","severity":1,"message":"245","line":107,"column":17,"nodeType":"231","messageId":"232","endLine":107,"endColumn":19},{"ruleId":"249","severity":1,"message":"250","line":118,"column":29,"nodeType":"251","messageId":"252","endLine":118,"endColumn":31},{"ruleId":"233","severity":1,"message":"274","line":150,"column":6,"nodeType":"235","endLine":150,"endColumn":58,"suggestions":"275"},{"ruleId":"229","severity":1,"message":"230","line":152,"column":59,"nodeType":"231","messageId":"232","endLine":152,"endColumn":61},{"ruleId":"233","severity":1,"message":"276","line":155,"column":23,"nodeType":"277","endLine":162,"endColumn":12},{"ruleId":"239","severity":1,"message":"240","line":226,"column":198,"nodeType":"241","messageId":"242","endLine":226,"endColumn":264,"fix":"278"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Plants' is defined but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'plantID' is assigned a value but never used.","'setPlantDetails' is assigned a value but never used.","'handleSelectChange' is defined but never used.","'intervalId' is defined but never used.","'orgid' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'setTimeIn' is assigned a value but never used.","'zoomLevel' is assigned a value but never used.","'setZoomLevel' is assigned a value but never used.","'setPlantSelection' is assigned a value but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'PlantSelection' and 'timeIn'. Either include them or remove the dependency array.","ArrayExpression",["279"],"'nextPage' is assigned a value but never used.","'currentPlant' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"280","text":"281"},"'Image' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'initialKipobj' and 'kipobj'. Either include them or remove the dependency array.",["282"],"'lqp' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'kipobj', 'kpidisconnected', 'kpimachinesnew', and 'kpimonitorsnew'. Either include them or remove the dependency array.",["283"],"'pattern' is assigned a value but never used.","'loginResponse' is assigned a value but never used.","'accessTokenz' is assigned a value but never used.","'access' is assigned a value but never used.","'acce' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.cp'. Either include it or remove the dependency array.",["284"],"'nocomments' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'plantid'. Either include it or remove the dependency array.",["285"],"Array.prototype.map() expects a return value from function.","FunctionExpression","'monitorStyle' is assigned a value but never used.","'response' is assigned a value but never used.","'getVelocity' is assigned a value but never used.","'dataDisplay' is assigned a value but never used.","'setDataDisplay' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'check24'. Either include it or remove the dependency array.",["286"],"Assignments to the 'contentLength' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",{"range":"287","text":"281"},{"desc":"288","fix":"289"},[12936,12936]," rel=\"noreferrer\"",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},[7783,7783],"Update the dependencies array to be: [currentPage, currentPlantIndex, plantsData, autoPagination, PlantSelection, timeIn]",{"range":"300","text":"301"},"Update the dependencies array to be: [prop.currentPlant, prop.kpimachines, prop.kpimonitors, prop.kpidisconnected, kipobj, initialKipobj]",{"range":"302","text":"303"},"Update the dependencies array to be: [kipobj, kpidisconnected, kpimachinesnew, kpimonitorsnew, prop]",{"range":"304","text":"305"},"Update the dependencies array to be: [props.plantsData, curPlId, props.cp]",{"range":"306","text":"307"},"Update the dependencies array to be: [currentPlant, accessToken, plantid]",{"range":"308","text":"309"},"Update the dependencies array to be: [currentPlant, accessToken, totalPlants, totalAlerts, check24]",{"range":"310","text":"311"},[5238,5298],"[currentPage, currentPlantIndex, plantsData, autoPagination, PlantSelection, timeIn]",[3434,3509],"[prop.currentPlant, prop.kpimachines, prop.kpimonitors, prop.kpidisconnected, kipobj, initialKipobj]",[5262,5268],"[kipobj, kpidisconnected, kpimachinesnew, kpimonitorsnew, prop]",[2403,2430],"[props.plantsData, curPlId, props.cp]",[2020,2047],"[currentPlant, accessToken, plantid]",[4862,4914],"[currentPlant, accessToken, totalPlants, totalAlerts, check24]"]