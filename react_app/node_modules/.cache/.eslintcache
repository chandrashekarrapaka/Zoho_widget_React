[{"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\MiniBox.js":"4","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\TinySignal.js":"5","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Services\\Json.js":"6","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Header\\Header.js":"7","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Header\\KPI.js":"8","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Container.js":"9","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\AA\\AA.js":"10","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\MFI\\MFI.js":"11","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Pagination\\Pagination.js":"12","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Plant\\Plant.js":"13","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Plant\\MG.js":"14","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Plant\\Monitor.js":"15","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Plant\\Machine.js":"16","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Services\\Velocity.js":"17","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Box.js":"18","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Plant\\Tablemini.js":"19","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Services\\LoginCredentialsAndQueries.js":"20","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Services\\loginCredentialsAndQueries.js":"21","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Services\\image.js":"22"},{"size":1428,"mtime":1686908412531,"results":"23","hashOfConfig":"24"},{"size":1164,"mtime":1687857639447,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1684831844304,"results":"26","hashOfConfig":"24"},{"size":468,"mtime":1686817848136,"results":"27","hashOfConfig":"24"},{"size":430,"mtime":1684854834510,"results":"28","hashOfConfig":"24"},{"size":5136,"mtime":1688114359443,"results":"29","hashOfConfig":"24"},{"size":3772,"mtime":1688237628781,"results":"30","hashOfConfig":"24"},{"size":328,"mtime":1687066388414,"results":"31","hashOfConfig":"24"},{"size":8090,"mtime":1688158452877,"results":"32","hashOfConfig":"24"},{"size":2964,"mtime":1688159286720,"results":"33","hashOfConfig":"24"},{"size":2933,"mtime":1688234172418,"results":"34","hashOfConfig":"24"},{"size":1008,"mtime":1687593755540,"results":"35","hashOfConfig":"24"},{"size":528,"mtime":1687587307701,"results":"36","hashOfConfig":"24"},{"size":758,"mtime":1687467035328,"results":"37","hashOfConfig":"24"},{"size":1030,"mtime":1687581820408,"results":"38","hashOfConfig":"24"},{"size":4751,"mtime":1688115759491,"results":"39","hashOfConfig":"24"},{"size":3525,"mtime":1688114366223,"results":"40","hashOfConfig":"24"},{"size":259,"mtime":1687458936445,"results":"41","hashOfConfig":"24"},{"size":418,"mtime":1688115582352,"results":"42","hashOfConfig":"24"},{"size":1668,"mtime":1687939324591,"results":"43","hashOfConfig":"24"},{"size":1754,"mtime":1688114347516,"results":"44","hashOfConfig":"24"},{"size":1228,"mtime":1688114666761,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"1m70nhp",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\index.js",["123"],[],"import React from 'react';\r\nimport {useEffect} from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// const handleScriptLoad = async() => {\r\n//   console.log(\"hero\")\r\n//   await window.ZOHO.CREATOR.init().then(function(data) {\r\n//    // var queryParams = window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n//    const email=\"rapaka.chandrashekar@gmail.com\";//Stage == \\\"Open\\\"\r\n//      var config = {\r\n//       appName: \"infinite-control-room\",\r\n//       reportName: \"All_Users\",\r\n//       criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\r\n//       page: \"1\",\r\n//       pageSize: \"100\"\r\n//     }\r\n\r\n//     //get all records API\r\n//     window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n//       //callback block\r\n//       let userData = response;\r\n//       console.log(\"userData\"+JSON.stringify(userData));\r\n      \r\n//     });\r\n//   });\r\n//  // console.log(window.ZC);\r\n \r\n// };\r\n// handleScriptLoad();\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n\r\n\r\n",[],"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\App.js",["124","125","126","127","128","129","130","131"],[],"import React, { useEffect, useState } from 'react';\r\nimport Header from './Components/Header/Header';\r\nimport Container from './Components/Containers/Container';\r\nimport { Plants } from './Services/Json';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [options, setOptions] = useState([]);\r\n  const [plantID, setPlantID] = useState();\r\n  const [plantDetails, setPlantDetails] = useState({});\r\n\r\n  const boxes = {};\r\n  \r\n  function handleSelectChange(e) {\r\n    setPlantID(e.target.value);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await Plants();\r\n  //       setPlantDetails(response);\r\n  //       // const plantNames = response.map((ele) => ele.plantName);\r\n  //       // setOptions(plantNames);\r\n  //       // console.log(\"options\"+options);\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  \r\n\r\n  return (\r\n    <div className='App'>\r\n      {/* <Header options={options} handleSelectChange={handleSelectChange} /> */}\r\n      <Container plantDetails={plantDetails} boxes={boxes} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\reportWebVitals.js",[],[],"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\MiniBox.js",[],[],"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\TinySignal.js",[],[],"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Services\\Json.js",["132","133","134","135"],[],"\r\nexport async function Plants() {\r\n  let accessToken=\"\";\r\n  const arrayOfPlants=[];\r\n  const arrayOfMachines=[];\r\n//   const handleScriptLoad = async() => {\r\n    \r\n//     console.log(\"hero\")\r\n//     // await window.ZOHO.CREATOR.init().then(function(data) {\r\n      \r\n//     //  // var queryParams = window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n//     //  const email=\"rapaka.chandrashekar@gmail.com\";//Stage == \\\"Open\\\"\r\n//     //    var config = {\r\n//     //     appName: \"infinite-control-room\",\r\n//     //     reportName: \"All_Users\",\r\n//     //     criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\r\n//     //     page: \"1\",\r\n//     //     pageSize: \"100\"\r\n//     //   }\r\n  \r\n//     //   //get all records API\r\n//     //   window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n//     //     //callback block\r\n//     //     let userData = response;\r\n        \r\n//     //     accessToken=JSON.stringify(userData.data[0].Access_Token);\r\n//     //     console.log(\"userData\"+JSON.stringify(userData.data[0].Access_Token));\r\n//     //    // console.log(\"check\"+accessToken);\r\n//     //    // return accessToken;\r\n//     //   });\r\n      \r\n      \r\n//     // });\r\n   \r\n   \r\n//   };\r\n//  await handleScriptLoad();\r\n  \r\n\r\n\r\n    try {\r\n       \r\n      const loginResponse =  await window.ZOHO.CREATOR.init().then(function(data) {\r\n        let accessTokenz=\"\";\r\n      let userid=window.ZOHO.CREATOR.UTIL.getQueryParams().user;\r\n        console.log(\"userid\"+userid)\r\n      \r\n       var config = {\r\n        appName: \"infinite-control-room\",\r\n        reportName: \"My_Profile_Data\",\r\n        criteria: \"Username ==\\\"\"+userid+\"\\\"\",\r\n        page: \"1\",\r\n        pageSize: \"100\"\r\n      }\r\n      const access=window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n        let userData = response;\r\n        \r\n        accessTokenz=userData.data[0].Access_Token;\r\n        console.log(\"userData\"+JSON.stringify(userData.data[0].Access_Token));\r\n       // console.log(\"check\"+accessToken);\r\n       // return accessToken;\r\n      return accessTokenz;\r\n      });\r\n      return access;\r\n    });\r\n    const queryParams =  await window.ZOHO.CREATOR.init().then(function(data) { \r\n      return window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n    });\r\n  \r\n      const loginData = await loginResponse;\r\n      // console.log(\"loginData\"+ loginData);\r\n     accessToken = loginData;\r\n      //accessToken=\"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIyY0NxRnpxRXJrNU5GS1RjTi1YSk1IdE9NS2tWVTZXS1hIdHZFMF8xZE5ZIn0.eyJleHAiOjE2ODY5NTQ5OTEsImlhdCI6MTY4NjkxMTc5MSwianRpIjoiNDU0MGQ1MTctNjE1ZS00NDZmLTgxOTgtNTc1YzY1ZjUwZmM3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5pbmZpbml0ZS11cHRpbWUuY29tL3JlYWxtcy9pZGFwIiwic3ViIjoiZjo2MGNhNzY4Yy1iMTA0LTQ0OTktYjU4Yy05MzliOTdlNzAzM2Q6ODcxMSIsInR5cCI6IkJlYXJlciIsImF6cCI6ImlkYXAiLCJzZXNzaW9uX3N0YXRlIjoiNGQ0YjUzMDAtM2NlZC00ZTk5LTlmNDEtYmRjMDI0ZjJkMzhlIiwic2NvcGUiOiJlbWFpbCIsInNpZCI6IjRkNGI1MzAwLTNjZWQtNGU5OS05ZjQxLWJkYzAyNGYyZDM4ZSIsImlzX2FkbWluIjoiZmFsc2UiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImlkYXBfcm9sZSI6IlJPTEVfVVNFUiIsImVtYWlsIjoiUmFwYWthLmNoYW5kcmFzaGVrYXJAZ21haWwuY29tIn0.l8NL7t1Kqf77hOHo_kGSpcKzDoSjFFYmKdyn3y6-fC45B_ICvvYz_FLMfazPMOxVzMG0nb0nD88y_J45wFYTjLnfwbZbIzw--vbVKt1EMe4qK6ko4wv1jTRrjg97m7PaQL3FLcv1JSPafJ8ukPm1z4BPo0tpoHlbZX1vCGwm1ZgdJqTBM6bJrtrLyB1EcABWsXIbd7r_756vua7sOO_7ZkAppAiHTV3qqjM5N0cjHaKTkMXYAiVkl6kBpsZf7N8CCdwkZTKV3rapK_zQGJhS2VxSNkeiERF2Y16nyPxSjxyzQFBB6I0AB2xqSSWlhJ6Shk2yaaI1MB9_cdt8oOgJPg\";\r\n       console.log(\"queryParams\"+JSON.stringify(queryParams));\r\n       \r\n      //console.log(\"accessToken\"+accessToken);\r\n      //console.log(\"check\"+ accessToken);\r\n      \r\n      let orgid=queryParams.PlantId.split(\",\")[1];\r\n      const orgidAll=queryParams.PlantId.split(\",\");\r\n    let plantsData;\r\n    let plantsResponse\r\n    plantsResponse=await Promise.all(orgidAll.map(async(orgid)=>{\r\n       plantsResponse = await fetch(`https://api-idap.infinite-uptime.com/api/3.0/idap-api/plants/${orgid}/machine-group-stats`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'accept': 'application/json',\r\n          'Authorization': 'Bearer '+accessToken,\r\n        },\r\n      });\r\n      plantsData = await plantsResponse.json();\r\n      const plantsArray=[];\r\n      // console.log(\"plantsdata\",  plantsData.data.machineGroups);\r\n      plantsData.data.machineGroups.map((mg)=>{\r\n        //console.log(\"plantsdata\", mg.machines);\r\n        mg.machines.map((machine)=>{\r\n          machine.mg=mg.name;\r\n          machine.plantName=plantsData.data.name;\r\n          machine.plantid=plantsData.data.id;\r\n          plantsArray.push(machine);\r\n        })\r\n        \r\n      })\r\n      arrayOfMachines.push(plantsArray);\r\n      arrayOfPlants.push(plantsData.data);\r\n    }));\r\n      //console.log(\"check\"+ headers);\r\n      \r\n      arrayOfPlants.map((ele)=>{\r\n        console.log(\"arrayOfPlants\",ele);\r\n      })\r\n      console.log(\"arrayofMachines\",arrayOfMachines);\r\n      \r\n       return arrayOfMachines;\r\n      // console.log(\"newMachines\"+JSON.stringify(newMachines));\r\n      // return newMachines;\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error;\r\n    }\r\n  }\r\n  ","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Header\\Header.js",["136","137"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Header.css\";\r\nimport KPI from \"./KPI\";\r\nimport { Image } from \"../../Services/image\";\r\nimport { LoginCredentialsAndQueries } from \"../../Services/loginCredentialsAndQueries\";\r\n\r\n\r\n  \r\nfunction Header(prop) {\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n   // Initialize with the initial kipobj value\r\n  //console.log(\"kpimachines\"+prop.kpimachines)\r\n  const initialKipobj = {\r\n    // kpi1: {\r\n    //   title: \"\",\r\n    //   value: \"Total Devices Installed\",\r\n    // },\r\n    // kpi2: { title: \"\", value: \"Total Machines Digitized\" },\r\n    kpi3: { title: \"3\", value: \"Total Faults Identified\" },\r\n    kpi4: { title: \"4\", value: \"Reports Closed\" },\r\n    kpi5: { title: \"5\", value: \"Downtime Saved (Hrs)\" },\r\n  };\r\n  const newobj={\r\n  kpi1: {\r\n      title: \"\",\r\n      value: \"Total Devices Installed\",\r\n    },\r\n    kpi2: { title: \"\", value: \"Total Machines Digitized\" }\r\n  }\r\n  //console.log(\"kpimonitors\"+prop.kpimonitors,initialKipobj.kpi1.title)\r\n  const [kipobj, setKipobj] = useState(initialKipobj);\r\n  const [kipobjnew,setKipobjNew]=useState(newobj)\r\n  useEffect(()=>{\r\n    const new12={...kipobjnew,\r\n    kpi1: {\r\n      ...kipobjnew.kpi1,\r\n      title: JSON.stringify(prop.kpimonitors),\r\n    },\r\n    kpi2: {\r\n      ...kipobjnew.kpi2,\r\n      title: JSON.stringify(prop.kpimachines),\r\n    }\r\n  }\r\n    setKipobjNew(new12)\r\n  },[prop.kpimachines,prop.kpimonitors])\r\n\r\n  useEffect(() => {\r\n    const fetchDataz = async () => {\r\n      try {\r\n        const response = await Image();\r\n        if (response.length > 0) {\r\n          console.log(\"imageurl\", response);\r\n          setImageUrl(response);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchDataz();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchPlantDetails = async () => {\r\n      try {\r\n        let plantid = prop.currentPlant[0].plantid;\r\n        let token=await LoginCredentialsAndQueries();\r\n        \r\n         const kpidatafinal= await fetch('https://api-idap.infinite-uptime.com/api/3.0/idap-api/service-requests/analytics?plantIds='+plantid,{\r\n            method: 'GET',\r\n            headers:{\r\n              'Authorization':'Bearer '+ token,\r\n              'accept': \"*/*\",\r\n            },\r\n\r\n          });\r\n        let  kpidata = await kpidatafinal.json();\r\n        console.log(\"downtime\"+JSON.stringify(kpidata.data[0]));\r\n        \r\n        \r\n\r\n        const updatedKipobj = {\r\n          ...kipobj,\r\n          kpi4: {\r\n            ...kipobj.kpi4,\r\n            title: JSON.stringify(kpidata.data[0].completedCount),\r\n          },\r\n          kpi5: {\r\n            ...kipobj.kpi5,\r\n            title:JSON.stringify(kpidata.data[0].downtime),\r\n          },\r\n          // kpi2:{\r\n          //   ...kipobj.kpi2,\r\n          //   title:\r\n          //   JSON.stringify(prop.kpimachines)\r\n          // },\r\n          kpi3: {\r\n            ...kipobj.kpi3,\r\n            title:\r\n            JSON.stringify(kpidata.data[0].newCount)\r\n          },\r\n         //totaldevicesinstalled\r\n          // kpi1: {\r\n          //   ...kipobj.kpi1,\r\n          //   title:\r\n          //   JSON.stringify(prop.kpimonitors)\r\n          // }\r\n        };\r\n        \r\n       setKipobj(updatedKipobj);\r\n        \r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchPlantDetails();\r\n  }, [prop.currentPlant,prop.kpimachines,prop.kpimonitors ]);\r\n\r\n  return (\r\n    <div className=\"kpis\">\r\n      <img src={imageUrl} alt=\"Plant\" />\r\n      {Object.keys(kipobjnew).map(function (ele) {\r\n        return <KPI data={kipobjnew[ele]} />;\r\n      })}\r\n      {Object.keys(kipobj).map(function (ele) {\r\n        return <KPI data={kipobj[ele]} />;\r\n      })}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Header\\KPI.js",[],[],"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Container.js",["138","139","140","141"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Box from \"./Box\";\r\nimport \"./Container.css\";\r\nimport AA from \"./AA/AA\";\r\nimport MFI from \"./MFI/MFI\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport Plant from \"./Plant/Plant\";\r\nimport { Plants } from \"../../Services/Json\";\r\nimport Header from \"../Header/Header\";\r\nlet kpimachines;\r\nlet kpimonitors=0;\r\nfunction Container() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 10;\r\n  const [timeIn, setTimeIn] = useState(30000);\r\n  const [plantsData, setPlantsData] = useState([]);\r\n  const [currentPlantIndex, setCurrentPlantIndex] = useState(0);\r\n  const [zoomLevel, setZoomLevel] = useState(0);\r\n  \r\n  \r\n  //screen things\r\n  \r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n\r\n  const handleFullScreen = () => {\r\n    if (!isFullScreen) {\r\n      enterFullScreen();\r\n    } else {\r\n      exitFullScreen();\r\n    }\r\n  };\r\n\r\n  const enterFullScreen = () => {\r\n    // const element = document.documentElement.getElementById(\"zppagesLive\");\r\n     // Get the root element of the document\r\n    \r\n    //  const rootElement = document.getElementById('root');\r\n     const iframes = document.documentElement;\r\n     console.log('idiframe'+JSON.stringify(iframes));\r\n  const element = document.getElementById(iframes);//requestFullscreen();\r\n    console.log(\"fullscreen\"+element);//documentElement\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen(); // Standard\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen(); // Firefox\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen(); // Chrome, Safari, and Opera\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen(); // Internet Explorer/Edge\r\n    }\r\n\r\n    setIsFullScreen(true);\r\n  };\r\n\r\n  const exitFullScreen = () => {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen(); // Standard\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen(); // Firefox\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen(); // Chrome, Safari, and Opera\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen(); // Internet Explorer/Edge\r\n    }\r\n\r\n    setIsFullScreen(false);\r\n  };\r\n  //screen things end\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await Plants();\r\n        if (response.length > 0) {\r\n          //kpimonitors=response.length;\r\n          setPlantsData(response);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleZoom = () => {\r\n    setZoomLevel((prevZoomLevel) => (prevZoomLevel === 0 ? 50 : 0));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timeout;\r\n\r\n    if (plantsData.length > 0) {\r\n      const currentPlant = plantsData[currentPlantIndex];\r\n      kpimachines=plantsData[currentPlantIndex].length;\r\n      //console.log(\"kpimachines\"+kpimachines)\r\n      kpimonitors=0;\r\n      plantsData[currentPlantIndex].map((mon)=>{\r\n        console.log(\"kpimonitorsinside\"+mon.monitors.length)\r\n        kpimonitors= kpimonitors+mon.monitors.length;\r\n      // return kpimonitors;\r\n      })\r\n\r\n      //console.log(kpimonitors);\r\n      const totalPages = Math.ceil(currentPlant?.length / itemsPerPage);\r\n\r\n      if (currentPage === totalPages + 1) {\r\n        if (currentPlantIndex === plantsData.length - 1) {\r\n          // Reached the last plant, reset to the first page and first plant\r\n          timeout = setTimeout(() => {\r\n            setCurrentPage(1);\r\n            setCurrentPlantIndex(0);\r\n          }, timeIn);\r\n        } else {\r\n          // Move to the next plant\r\n          timeout = setTimeout(() => {\r\n            setCurrentPage(1);\r\n            setCurrentPlantIndex((prevIndex) => prevIndex + 1);\r\n          }, timeIn);\r\n        }\r\n      } else {\r\n        timeout = setTimeout(() => {\r\n          setCurrentPage((prevPage) => prevPage + 1);\r\n        }, timeIn);\r\n      }\r\n    }\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [currentPage, currentPlantIndex, plantsData, timeIn]);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n\r\n    if (pageNumber === Math.ceil(plantsData[currentPlantIndex]?.length / itemsPerPage)) {\r\n      setCurrentPlantIndex((prevIndex) => (prevIndex + 1) % plantsData.length);\r\n    }\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    if (timeIn === 30000) setTimeIn(1000000000);\r\n    else setTimeIn(30000);\r\n  };\r\n\r\n  const currentPlant = plantsData[currentPlantIndex];\r\n  const totalPages = Math.ceil(currentPlant?.length / itemsPerPage);\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = currentPlant ? currentPlant.slice(indexOfFirstItem, indexOfLastItem) : [];\r\n  //  style={{ transform: `scale(${1 + zoomLevel / 100})` }}\r\n  return (\r\n    <div>\r\n      {currentPlant ? (\r\n        <div className=\"wrapper\">\r\n          <div  className=\"PlantName\">{currentPlant[0]?.plantName || \"\"}</div>\r\n          <Header kpimachines={kpimachines} kpimonitors={kpimonitors} currentPlant={currentPlant}/>\r\n          <div className=\"wholeContainer\">\r\n            <div className=\"container\" >\r\n              <Plant currentItems={currentItems} NextPlant={plantsData[currentPlantIndex + 1] !== undefined ? plantsData[currentPlantIndex + 1][0].plantName : plantsData[0][0].plantName} />\r\n            </div>\r\n            <div className=\"seccon\">\r\n              <div className=\"AA\" >\r\n                <AA currentPlant={currentPlant}/>\r\n              </div>\r\n              <div className=\"MFI\">\r\n                <MFI currentPlant={currentPlant} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer1\">\r\n            <div className=\"Pagination\">\r\n              <div className=\"Footer1-item zoomButton\" onClick={handleZoom}>\r\n                Zoom in/out\r\n              </div>\r\n             \r\n              <div className=\"Footer1-item\">\r\n                <Pagination\r\n                  items={currentItems}\r\n                  currentPage={currentPage}\r\n                  totalPages={totalPages}\r\n                  onPageChange={handlePageChange}\r\n                />\r\n              </div>\r\n              <div className=\"Footer1-item\" style={{ textAlign: \"center\" }}>\r\n                <input onClick={handleCheck} type=\"checkbox\" />\r\n                <label>Stop AutoPagination</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer2\">\r\n            <div className=\"indicator1\">\r\n              <div className=\"circle1\" style={{ background: \"rgb(100, 221, 23)\" }}></div>\r\n              <div className=\"author1\">\r\n                <p> Health Score &gt; 80%</p>\r\n              </div>\r\n              <div className=\"circle1\" style={{ background: \"rgb(255, 193, 7)\" }}></div>\r\n              <div className=\"author1\">\r\n                <p> Health Score &gt; 50% &lt; 80%</p>\r\n              </div>\r\n              <div className=\"circle1\" style={{ background: \"rgb(255, 87, 34)\" }}></div>\r\n              <div className=\"author1\">\r\n                <p> Health Score &lt; 50%</p>\r\n              </div>\r\n              <div className=\"circle1\" style={{ border: \"solid 1px black\" }}></div>\r\n              <div className=\"author1\">\r\n                <p> Health Score Not Available</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n           <div>\r\n               <button className=\"Hidden\" onClick={handleFullScreen}>\r\n                  {isFullScreen ? \"Exit Full Screen\" : \"Enter Full Screen\"}\r\n                </button>\r\n              </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"login-again\">\r\n          <p>For Login </p>\r\n          <a href=\"https://crv.infinite-uptime.com/#Profile\" target=\"_blank\">Please click here</a>\r\n          <p>For Selecting Plants scroll down</p>\r\n        </div>\r\n        \r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\AA\\AA.js",["142"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AA.css\";\r\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\r\n\r\nfunction AA(prop) {\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [dataDisplay, setDataDisplay] = useState();\r\n\r\n  const currentPlant = prop.currentPlant;\r\n  console.log(\"AA1\", currentPlant[0].plantid, accessToken);\r\n\r\n  useEffect(() => {\r\n    const fetchDataz = async () => {\r\n      try {\r\n        const response = await LoginCredentialsAndQueries();\r\n        if (response.length > 0) {\r\n          console.log(\"responseAA\", response);\r\n          setAccessToken(response);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchDataz();\r\n  }, []);\r\n\r\n  let plantid = currentPlant[0].plantid;\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let now = new Date();\r\n      let dtTo = now.toISOString().replace(/\\.\\d+Z$/, \"Z\").replace(/:/g, \"%3A\");\r\n      let dtFrom = new Date(now.getTime() - 48 * 60 * 60 * 1000)\r\n        .toISOString()\r\n        .replace(/\\.\\d+Z$/, \"Z\")\r\n        .replace(/:/g, \"%3A\");\r\n\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api-idap.infinite-uptime.com/api/3.0/idap-api/anomaly-alerts?plantIds=\" +\r\n            plantid +\r\n            \"&from=\" +\r\n            dtFrom +\r\n            \"&to=\" +\r\n            dtTo,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              accept: \"application/json\",\r\n              Authorization: \"Bearer \" + accessToken,\r\n            },\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n        setDataDisplay(data);\r\n        console.log(\"alerts\", JSON.stringify(data));\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    const interval = setInterval(fetchData, 30000); // Fetch data every 30 seconds\r\n\r\n    return () => {\r\n      clearInterval(interval); // Clean up the interval on component unmount\r\n    };\r\n  }, [currentPlant, accessToken]);\r\n\r\n  return (\r\n    <div className=\"content-box\">\r\n      <div className=\"head\">Anomaly Alert</div>\r\n      <div className=\"content-container\">\r\n        {dataDisplay && dataDisplay.data.length>0 ? (\r\n          dataDisplay.data.map((ele) => (\r\n            <div className=\"content-item\">\r\n              <div className=\"machine-name\">Machine Name: {ele.machineName}</div>\r\n              <div className=\"monitor-name\">Monitor Name: {ele.monitorName}</div>\r\n              <div className=\"anomaly-magnitude\">Anomaly Magnitude: {ele.anomalyMagnitude}</div>\r\n              <div className=\"alert-timestamp\">Alert Timestamp: {ele.alertTimestamp}</div>\r\n              <div className=\"anomaly-detected\">Anomaly Detected: {ele.anomalyDetected}</div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <>No Anomaly Alert in Last 48 Hours </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AA;\r\n","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\MFI\\MFI.js",["143","144","145","146","147"],[],"import React, { useState, useEffect } from \"react\";\r\nimport './MFI.css';\r\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\r\n\r\nfunction MFI(prop) {\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [dataDisplay, setDataDisplay] = useState();\r\n\r\n  const currentPlant = prop.currentPlant;\r\n  console.log(\"MFI1\", currentPlant[0].plantid, accessToken);\r\n\r\n  useEffect(() => {\r\n    const fetchDataz = async () => {\r\n      try {\r\n        const response = await LoginCredentialsAndQueries();\r\n        if (response.length > 0) {\r\n          console.log(\"responseMFI\", response);\r\n          setAccessToken(response);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchDataz();\r\n  }, []);\r\n\r\n  let plantid = currentPlant[0].plantid;\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api-idap.infinite-uptime.com/api/3.0/idap-api/service-requests?plantIds=\" + plantid,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              accept: \"application/json\",\r\n              Authorization: \"Bearer \" + accessToken,\r\n            },\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n\r\n        let key = Object.keys(data.data);\r\n        setDataDisplay(data.data[key]);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    const interval = setInterval(fetchData, 30000); // Fetch data every 30 seconds\r\n\r\n    return () => {\r\n      clearInterval(interval); // Clean up the interval on component unmount\r\n    };\r\n  }, [currentPlant, accessToken]);\r\n  let i = 1;\r\n  //const check=(new Date().getTime()-new Date(ele.serviceReqMachineDetails[0].createdDate).getTime()/3600000)<=48;\r\n  // if(ele.status==\"NEW\")i++;\r\n  // \r\n  return (\r\n    <div className=\"content-box\">\r\n      <div className=\"head\">Machine with Faults</div>\r\n      <div className=\"content-container\">\r\n        {dataDisplay ? (\r\n          dataDisplay.map((ele) => {\r\n            {if(ele.status==\"NEW\")\r\n            return(\r\n            ele.serviceReqMachineDetails.map((srmd) => {\r\n              \r\n              return(\r\n              <div className=\"machine-name\">\r\n                \r\n                {srmd.machineName ?i+++\".\"+\" \"+ srmd.machineName + \" \" + srmd.createdDate : ''}\r\n                {srmd.machineServiceDetails.map((msd,index) => {\r\n                  return (\r\n                    <ol className=\"monitor-name\">\r\n                      {String.fromCharCode(97+index)+\". \"+msd.serviceName}\r\n                    </ol>\r\n                  );\r\n\r\n                })}\r\n              </div>\r\n              \r\n              )\r\n            })\r\n          )\r\n            }\r\n\r\n          })\r\n        ) : (\r\n          <>No Faults observed in machines </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MFI;\r\n","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Pagination\\Pagination.js",[],[],"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Plant\\Plant.js",[],[],"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Plant\\MG.js",[],[],"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Plant\\Monitor.js",[],[],"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Plant\\Machine.js",["148","149","150","151","152","153"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Monitor from \"./Monitor\";\r\nimport './Machine.css';\r\nimport { Velocity } from '../../../Services/Velocity'\r\nimport Tablemini from \"./Tablemini\";\r\n\r\nfunction Machine(prop) {\r\n  const [showPopup, setShowPopup] = useState(false); // State variable for pop-up visibility\r\n  const [apiData, setApiData] = useState([]); // State variable for API data\r\n\r\n  let monitorStyle={};\r\n  useEffect(() => {\r\n    // Function to fetch API data\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await Velocity();\r\n\r\n        //   setApiData(response);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    // Fetch API data initially\r\n    fetchData();\r\n\r\n    // Fetch API data every 30 seconds\r\n    const interval = setInterval(fetchData, 30000);\r\n\r\n    // Clean up the interval when the component is unmounted\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getVelocity = async (id) => {\r\n\r\n    const response = await Velocity();\r\n    // console.log(\"velocityid\"+id);\r\n    response.filter((ele) => ele.id == id).map((ele) => {\r\n      // console.log(\"neededid\"+JSON.stringify(ele));\r\n      setApiData(ele);\r\n    });\r\n  }\r\n  const handleInfoClick = async (id) => {\r\n    try {\r\n      const velocityData = await Velocity();\r\n      // console.log(\"velocityid\" + id);\r\n      const selectedData = velocityData.filter((ele) => ele.id === id)[0];\r\n      setApiData(selectedData);\r\n      setShowPopup(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setShowPopup(false);\r\n  };\r\n \r\n  return (\r\n    <div className=\"machines\">\r\n      {prop.machine.map(function (ele) {\r\n        const stylez={};\r\n        let minimumValue = 100;\r\n        ele.monitors.map((elemon) => {\r\n          \r\n        //  console.log(\"monitor\"+elemon.healthScore)\r\n        if(elemon.healthScore<minimumValue)minimumValue=elemon.healthScore;\r\n        if (minimumValue > 80) stylez.backgroundColor = \"rgb(100, 221, 23)\";\r\n        else if (minimumValue > 50 && minimumValue < 80) stylez.backgroundColor = \"rgb(255, 193, 7)\";\r\n        else if (minimumValue > 0 && minimumValue < 50) stylez.backgroundColor = \"rgb(255, 87, 34)\";\r\n        // else {\r\n        //   stylez.backgroundColor = \"white\";\r\n        //   stylez.border = \"solid 1px\";\r\n        // }\r\n          // console.log(\"stylez\"+JSON.stringify(stylez));\r\n        })\r\n        return (\r\n          <div className=\"machine\" key={ele.id}>\r\n            <div >\r\n              <div className=\"textEllipsis\" style={{ color: \"black\" }} >{ele.mg}</div>\r\n              <h4 style={ stylez }>{ele.name}</h4>\r\n              <div className=\"signals\">\r\n                <Monitor monitor={ele.monitors} />\r\n                <h4>{ele.healthScore}%</h4>\r\n                <div className=\"info-icon\" onClick={() => handleInfoClick(ele.id)}>\r\n                  &#x1F6C8;\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {showPopup && (\r\n        <div className=\"popup\">\r\n          <div className=\"popup-content\">\r\n            <h2>{apiData.name}</h2>\r\n            <div className=\"tableWrapper\">\r\n              <table>\r\n                <tr><th>Monitor Name</th><th>Axi</th><th>Ver</th><th>Hor</th><th>tem</th><th>HS</th><th>Vibration Trend</th>\r\n                </tr>\r\n                \r\n                {apiData.monitors.map((data) => {\r\n                  // console.log(\"table call\"+data.healthScore);\r\n                  const stylemon={\"width\":\"100%\"};\r\n                  if (data.healthScore > 80)  {stylemon.backgroundColor=\"rgb(100, 221, 23)\"}\r\n                  else if(data.healthScore > 50 && data.healthScore < 80){stylemon.backgroundColor= \"rgb(255, 193, 7)\"}\r\n                  else if(data.healthScore > 0 && data.healthScore < 50){stylemon.backgroundColor=\"rgb(255, 87, 34)\"}\r\n                  else {stylemon.backgroundColor=\"white\";stylemon.border=\"solid 1px\"}\r\n               \r\n                  return(\r\n                    <Tablemini data={data} stylz={stylemon}/>\r\n                  );\r\n  })}\r\n\r\n              </table>\r\n            </div>\r\n            <center><a href=\"https://idap.infinite-uptime.com/#/dashboard/MonitoringTable\" target=\"_blank\" rel=\"noopener noreferrer\">For Detailed Analysis Click Here!</a></center>\r\n            <b>Observation</b> :{apiData.observation}<br></br><br></br>\r\n            <b>Diagnostic</b> :{apiData.diagnostic}<br></br><br></br>\r\n            <b>Recommendation</b> :{apiData.recommendation}<br></br><br></br>\r\n\r\n            <button className=\"close-btn\" onClick={closePopup}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Machine;\r\n","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Services\\Velocity.js",["154","155"],[],"\r\nexport async function Velocity() {\r\n    let accessToken = \"\";\r\n\r\n    const arrayOfMachines = [];\r\n\r\n\r\n\r\n    try {\r\n\r\n        const loginResponse = await window.ZOHO.CREATOR.init().then(function (data) {\r\n            let accessTokenz = \"\";\r\n            let userid=window.ZOHO.CREATOR.UTIL.getQueryParams().user;\r\n            console.log(\"userid\"+userid)\r\n          \r\n           var config = {\r\n            appName: \"infinite-control-room\",\r\n            reportName: \"My_Profile_Data\",\r\n            criteria: \"Username ==\\\"\"+userid+\"\\\"\",\r\n            page: \"1\",\r\n            pageSize: \"100\"\r\n          }\r\n            const access = window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n                let userData = response;\r\n\r\n                accessTokenz = userData.data[0].Access_Token;\r\n                return accessTokenz;\r\n            });\r\n            return access;\r\n        });\r\n        const queryParams = await window.ZOHO.CREATOR.init().then(function (data) {\r\n            return window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n        });\r\n\r\n        const loginData = await loginResponse;\r\n        // console.log(\"loginData\"+ loginData);\r\n        accessToken = loginData;\r\n        //accessToken=\"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIyY0NxRnpxRXJrNU5GS1RjTi1YSk1IdE9NS2tWVTZXS1hIdHZFMF8xZE5ZIn0.eyJleHAiOjE2ODY5NTQ5OTEsImlhdCI6MTY4NjkxMTc5MSwianRpIjoiNDU0MGQ1MTctNjE1ZS00NDZmLTgxOTgtNTc1YzY1ZjUwZmM3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5pbmZpbml0ZS11cHRpbWUuY29tL3JlYWxtcy9pZGFwIiwic3ViIjoiZjo2MGNhNzY4Yy1iMTA0LTQ0OTktYjU4Yy05MzliOTdlNzAzM2Q6ODcxMSIsInR5cCI6IkJlYXJlciIsImF6cCI6ImlkYXAiLCJzZXNzaW9uX3N0YXRlIjoiNGQ0YjUzMDAtM2NlZC00ZTk5LTlmNDEtYmRjMDI0ZjJkMzhlIiwic2NvcGUiOiJlbWFpbCIsInNpZCI6IjRkNGI1MzAwLTNjZWQtNGU5OS05ZjQxLWJkYzAyNGYyZDM4ZSIsImlzX2FkbWluIjoiZmFsc2UiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImlkYXBfcm9sZSI6IlJPTEVfVVNFUiIsImVtYWlsIjoiUmFwYWthLmNoYW5kcmFzaGVrYXJAZ21haWwuY29tIn0.l8NL7t1Kqf77hOHo_kGSpcKzDoSjFFYmKdyn3y6-fC45B_ICvvYz_FLMfazPMOxVzMG0nb0nD88y_J45wFYTjLnfwbZbIzw--vbVKt1EMe4qK6ko4wv1jTRrjg97m7PaQL3FLcv1JSPafJ8ukPm1z4BPo0tpoHlbZX1vCGwm1ZgdJqTBM6bJrtrLyB1EcABWsXIbd7r_756vua7sOO_7ZkAppAiHTV3qqjM5N0cjHaKTkMXYAiVkl6kBpsZf7N8CCdwkZTKV3rapK_zQGJhS2VxSNkeiERF2Y16nyPxSjxyzQFBB6I0AB2xqSSWlhJ6Shk2yaaI1MB9_cdt8oOgJPg\";\r\n        console.log(\"queryParamsvelocity\" + JSON.stringify(queryParams));\r\n\r\n        //console.log(\"accessToken\"+accessToken);\r\n        //console.log(\"check\"+ accessToken);\r\n\r\n        // let orgid=queryParams.PlantId.split(\",\")[1];\r\n        const orgidAll = queryParams.PlantId.split(\",\");\r\n        let plantsData;\r\n        let plantsResponse\r\n        plantsResponse = await Promise.all(orgidAll.map(async (orgid) => {\r\n            plantsResponse = await fetch(`https://api-idap.infinite-uptime.com/api/2.0/md/monitoring/bymonitors?plantId=${orgid}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + accessToken,\r\n                },\r\n            });\r\n            plantsData = await plantsResponse.json();\r\n            \r\n            plantsData.machineGroups.map((mg) => {\r\n                \r\n                mg.machines.map((machine) => {\r\n                    arrayOfMachines.push(machine);\r\n                })\r\n\r\n            })\r\n\r\n        }));\r\n\r\n        // console.log(\"velocityarrayofMachines\", arrayOfMachines);\r\n\r\n        return arrayOfMachines;\r\n\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw error;\r\n    }\r\n}\r\n","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Box.js",[],[],"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Components\\Containers\\Plant\\Tablemini.js",[],[],"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Services\\LoginCredentialsAndQueries.js",["156","157"],[],"C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Services\\loginCredentialsAndQueries.js",["158"],[],"\r\nexport async function LoginCredentialsAndQueries() {\r\n    let accessToken=\"\";\r\n    \r\n      try {\r\n         \r\n        const loginResponse =  await window.ZOHO.CREATOR.init().then(function(data) {\r\n          let accessTokenz=\"\";\r\n          let userid=window.ZOHO.CREATOR.UTIL.getQueryParams().user;\r\n          console.log(\"userid\"+userid)\r\n        \r\n         var config = {\r\n          appName: \"infinite-control-room\",\r\n          reportName: \"My_Profile_Data\",\r\n          criteria: \"Username ==\\\"\"+userid+\"\\\"\",\r\n          page: \"1\",\r\n          pageSize: \"100\"\r\n        }\r\n        const access=window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n          let userData = response;\r\n          \r\n          accessTokenz=userData.data[0].Access_Token;\r\n          console.log(\"userData\"+JSON.stringify(userData.data[0].Access_Token));\r\n         // console.log(\"check\"+accessToken);\r\n         // return accessToken;\r\n        return accessTokenz;\r\n        });\r\n        return access;\r\n      });\r\n      const queryParams =  await window.ZOHO.CREATOR.init().then(function(data) { \r\n        return window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n      });\r\n    \r\n        const loginData = await loginResponse;\r\n\r\n       accessToken = loginData;\r\n         console.log(\"queryParamsLOGIN\"+JSON.stringify(queryParams));\r\n         console.log(\"dataused\"+JSON.stringify(accessToken),queryParams)\r\n        \r\n        const lqp={accessToken,queryParams};\r\n        // let orgid=queryParams.PlantId.split(\",\")[1];\r\n        // const orgidAll=queryParams.PlantId.split(\",\");\r\n      //console.log(\"dataused\"+accessToken,queryParams)\r\n        return accessToken;\r\n      } catch (error) {\r\n        console.error(error);\r\n        throw error;\r\n      }\r\n    }\r\n    ","C:\\Users\\DELL\\Desktop\\zoho-creator-widget-starter-template-reactJS\\react_app\\src\\Services\\image.js",[],[],{"ruleId":"159","severity":1,"message":"160","line":2,"column":9,"nodeType":"161","messageId":"162","endLine":2,"endColumn":18},{"ruleId":"159","severity":1,"message":"160","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"163","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":14},{"ruleId":"159","severity":1,"message":"164","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":16},{"ruleId":"159","severity":1,"message":"165","line":9,"column":10,"nodeType":"161","messageId":"162","endLine":9,"endColumn":17},{"ruleId":"159","severity":1,"message":"166","line":9,"column":19,"nodeType":"161","messageId":"162","endLine":9,"endColumn":29},{"ruleId":"159","severity":1,"message":"167","line":10,"column":10,"nodeType":"161","messageId":"162","endLine":10,"endColumn":17},{"ruleId":"159","severity":1,"message":"168","line":11,"column":24,"nodeType":"161","messageId":"162","endLine":11,"endColumn":39},{"ruleId":"159","severity":1,"message":"169","line":15,"column":12,"nodeType":"161","messageId":"162","endLine":15,"endColumn":30},{"ruleId":"159","severity":1,"message":"170","line":79,"column":11,"nodeType":"161","messageId":"162","endLine":79,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":94,"column":45,"nodeType":"173","messageId":"174","endLine":94,"endColumn":47},{"ruleId":"171","severity":1,"message":"172","line":96,"column":34,"nodeType":"173","messageId":"174","endLine":96,"endColumn":36},{"ruleId":"171","severity":1,"message":"172","line":109,"column":30,"nodeType":"173","messageId":"174","endLine":109,"endColumn":32},{"ruleId":"175","severity":1,"message":"176","line":45,"column":5,"nodeType":"177","endLine":45,"endColumn":40,"suggestions":"178"},{"ruleId":"175","severity":1,"message":"179","line":118,"column":6,"nodeType":"177","endLine":118,"endColumn":60,"suggestions":"180"},{"ruleId":"159","severity":1,"message":"181","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":11},{"ruleId":"159","severity":1,"message":"182","line":18,"column":10,"nodeType":"161","messageId":"162","endLine":18,"endColumn":19},{"ruleId":"171","severity":1,"message":"172","line":98,"column":46,"nodeType":"173","messageId":"174","endLine":98,"endColumn":48},{"ruleId":"183","severity":1,"message":"184","line":218,"column":11,"nodeType":"185","messageId":"186","endLine":218,"endColumn":78,"fix":"187"},{"ruleId":"175","severity":1,"message":"188","line":70,"column":6,"nodeType":"177","endLine":70,"endColumn":33,"suggestions":"189"},{"ruleId":"175","severity":1,"message":"188","line":59,"column":6,"nodeType":"177","endLine":59,"endColumn":33,"suggestions":"190"},{"ruleId":"171","severity":1,"message":"191","line":69,"column":33,"nodeType":"173","messageId":"192","endLine":69,"endColumn":35},{"ruleId":"193","severity":1,"message":"194","line":70,"column":13,"nodeType":"195","messageId":"196","endLine":91,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":70,"column":27,"nodeType":"199","messageId":"200","endLine":70,"endColumn":29},{"ruleId":"201","severity":1,"message":"202","line":77,"column":43,"nodeType":"199","messageId":"203","endLine":77,"endColumn":44},{"ruleId":"159","severity":1,"message":"204","line":11,"column":7,"nodeType":"161","messageId":"162","endLine":11,"endColumn":19},{"ruleId":"159","severity":1,"message":"205","line":16,"column":15,"nodeType":"161","messageId":"162","endLine":16,"endColumn":23},{"ruleId":"159","severity":1,"message":"206","line":34,"column":9,"nodeType":"161","messageId":"162","endLine":34,"endColumn":20},{"ruleId":"197","severity":1,"message":"198","line":38,"column":37,"nodeType":"199","messageId":"200","endLine":38,"endColumn":39},{"ruleId":"171","severity":1,"message":"172","line":38,"column":54,"nodeType":"173","messageId":"174","endLine":38,"endColumn":56},{"ruleId":"171","severity":1,"message":"172","line":64,"column":35,"nodeType":"173","messageId":"174","endLine":64,"endColumn":37},{"ruleId":"171","severity":1,"message":"172","line":58,"column":47,"nodeType":"173","messageId":"174","endLine":58,"endColumn":49},{"ruleId":"171","severity":1,"message":"172","line":60,"column":43,"nodeType":"173","messageId":"174","endLine":60,"endColumn":45},{"ruleId":"159","severity":1,"message":"170","line":40,"column":13,"nodeType":"161","messageId":"162","endLine":40,"endColumn":18},{"ruleId":"159","severity":1,"message":"207","line":41,"column":15,"nodeType":"161","messageId":"162","endLine":41,"endColumn":23},{"ruleId":"159","severity":1,"message":"208","line":40,"column":15,"nodeType":"161","messageId":"162","endLine":40,"endColumn":18},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Plants' is defined but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'plantID' is assigned a value but never used.","'setPlantDetails' is assigned a value but never used.","'handleSelectChange' is defined but never used.","'orgid' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'kipobjnew'. Either include it or remove the dependency array.","ArrayExpression",["209"],"React Hook useEffect has a missing dependency: 'kipobj'. Either include it or remove the dependency array.",["210"],"'Box' is defined but never used.","'zoomLevel' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"211","text":"212"},"React Hook useEffect has a missing dependency: 'plantid'. Either include it or remove the dependency array.",["213"],["214"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'monitorStyle' is assigned a value but never used.","'response' is assigned a value but never used.","'getVelocity' is assigned a value but never used.","'orgidAll' is assigned a value but never used.","'lqp' is assigned a value but never used.",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},[7929,7929]," rel=\"noreferrer\"",{"desc":"219","fix":"220"},{"desc":"219","fix":"221"},"Update the dependencies array to be: [kipobjnew, prop.kpimachines, prop.kpimonitors]",{"range":"222","text":"223"},"Update the dependencies array to be: [kipobj, prop.currentPlant, prop.kpimachines, prop.kpimonitors]",{"range":"224","text":"225"},"Update the dependencies array to be: [currentPlant, accessToken, plantid]",{"range":"226","text":"227"},{"range":"228","text":"227"},[1394,1429],"[kipobjnew, prop.kpimachines, prop.kpimonitors]",[3361,3415],"[kipobj, prop.currentPlant, prop.kpimachines, prop.kpimonitors]",[2030,2057],"[currentPlant, accessToken, plantid]",[1667,1694]]