{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\zoho-creator-widget-starter-template-reactJS\\\\react_app\\\\src\\\\Components\\\\Header\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Header.css\";\nimport KPI from \"./KPI\";\nimport { Image } from \"../../Services/image\";\nimport { LoginCredentialsAndQueries } from \"../../Services/loginCredentialsAndQueries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header(prop) {\n  _s();\n  const [imageUrl, setImageUrl] = useState(\"\");\n  // Initialize with the initial kipobj value\n  //console.log(\"kpimachines\"+prop.kpimachines)\n  const initialKipobj = {\n    kpi1: {\n      title: JSON.stringify(prop.kpimonitors),\n      value: \"Total Devices Installed\"\n    },\n    kpi2: {\n      title: JSON.stringify(prop.kpimachines),\n      value: \"Total Machines Digitized\"\n    },\n    kpi3: {\n      title: \"3\",\n      value: \"Total Faults Identified\"\n    },\n    kpi4: {\n      title: \"4\",\n      value: \"Reports Closed\"\n    },\n    kpi5: {\n      title: \"5\",\n      value: \"Downtime Saved (Hrs)\"\n    }\n  };\n  console.log(\"kpimonitors\" + prop.kpimonitors, initialKipobj.kpi1.title);\n  const [kipobj, setKipobj] = useState(initialKipobj);\n  useEffect(() => {\n    const newobj = {\n      kpi1: {\n        ...kipobj.kpi1,\n        title: JSON.stringify(prop.kpimonitors)\n      },\n      kpi2: {\n        ...kipobj.kpi2,\n        title: JSON.stringify(prop.kpimachines)\n      }\n    };\n    setKipobj(newobj);\n  }, [prop]);\n  useEffect(() => {\n    const fetchDataz = async () => {\n      try {\n        const response = await Image();\n        if (response.length > 0) {\n          console.log(\"imageurl\", response);\n          setImageUrl(response);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchDataz();\n  }, []);\n  useEffect(() => {\n    const fetchPlantDetails = async () => {\n      try {\n        let plantid = prop.currentPlant[0].plantid;\n        let token = await LoginCredentialsAndQueries();\n        const kpidatafinal = await fetch('https://api-idap.infinite-uptime.com/api/3.0/idap-api/service-requests/analytics?plantIds=' + plantid, {\n          method: 'GET',\n          headers: {\n            'Authorization': 'Bearer ' + token,\n            'accept': \"*/*\"\n          }\n        });\n        let kpidata = await kpidatafinal.json();\n        console.log(\"downtime\" + JSON.stringify(kpidata.data[0]));\n        const updatedKipobj = {\n          ...kipobj,\n          kpi4: {\n            ...kipobj.kpi4,\n            title: JSON.stringify(kpidata.data[0].completedCount)\n          },\n          kpi5: {\n            ...kipobj.kpi5,\n            title: JSON.stringify(kpidata.data[0].downtime)\n          },\n          // kpi2:{\n          //   ...kipobj.kpi2,\n          //   title:\n          //   JSON.stringify(prop.kpimachines)\n          // },\n          kpi3: {\n            ...kipobj.kpi3,\n            title: JSON.stringify(kpidata.data[0].newCount)\n          }\n          //totaldevicesinstalled\n          // kpi1: {\n          //   ...kipobj.kpi1,\n          //   title:\n          //   JSON.stringify(prop.kpimonitors)\n          // }\n        };\n\n        // setKipobj(updatedKipobj);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchPlantDetails();\n  }, [prop.currentPlant, prop.kpimonitors, prop.kpimachines]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kpis\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Plant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), Object.keys(kipobj).map(function (ele) {\n      return /*#__PURE__*/_jsxDEV(KPI, {\n        data: kipobj[ele]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"6GYncatOqj8eR1NIfzaiTLqqTE8=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","KPI","Image","LoginCredentialsAndQueries","jsxDEV","_jsxDEV","Header","prop","_s","imageUrl","setImageUrl","initialKipobj","kpi1","title","JSON","stringify","kpimonitors","value","kpi2","kpimachines","kpi3","kpi4","kpi5","console","log","kipobj","setKipobj","newobj","fetchDataz","response","length","error","fetchPlantDetails","plantid","currentPlant","token","kpidatafinal","fetch","method","headers","kpidata","json","data","updatedKipobj","completedCount","downtime","newCount","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","ele","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Components/Header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Header.css\";\r\nimport KPI from \"./KPI\";\r\nimport { Image } from \"../../Services/image\";\r\nimport { LoginCredentialsAndQueries } from \"../../Services/loginCredentialsAndQueries\";\r\n\r\n\r\n  \r\nfunction Header(prop) {\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n   // Initialize with the initial kipobj value\r\n  //console.log(\"kpimachines\"+prop.kpimachines)\r\n  const initialKipobj = {\r\n    kpi1: {\r\n      title: JSON.stringify(prop.kpimonitors),\r\n      value: \"Total Devices Installed\",\r\n    },\r\n    kpi2: { title: JSON.stringify(prop.kpimachines), value: \"Total Machines Digitized\" },\r\n    kpi3: { title: \"3\", value: \"Total Faults Identified\" },\r\n    kpi4: { title: \"4\", value: \"Reports Closed\" },\r\n    kpi5: { title: \"5\", value: \"Downtime Saved (Hrs)\" },\r\n  };\r\n  console.log(\"kpimonitors\"+prop.kpimonitors,initialKipobj.kpi1.title)\r\n  const [kipobj, setKipobj] = useState(initialKipobj);\r\n  useEffect(()=>{\r\n   const newobj={ kpi1: {\r\n        ...kipobj.kpi1,\r\n        title:\r\n        JSON.stringify(prop.kpimonitors)\r\n      }, kpi2:{\r\n          ...kipobj.kpi2,\r\n          title:\r\n          JSON.stringify(prop.kpimachines)\r\n        },\r\n    }\r\n    setKipobj(newobj);\r\n  },[prop])\r\n  useEffect(() => {\r\n    const fetchDataz = async () => {\r\n      try {\r\n        const response = await Image();\r\n        if (response.length > 0) {\r\n          console.log(\"imageurl\", response);\r\n          setImageUrl(response);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchDataz();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchPlantDetails = async () => {\r\n      try {\r\n        let plantid = prop.currentPlant[0].plantid;\r\n        let token=await LoginCredentialsAndQueries();\r\n        \r\n         const kpidatafinal= await fetch('https://api-idap.infinite-uptime.com/api/3.0/idap-api/service-requests/analytics?plantIds='+plantid,{\r\n            method: 'GET',\r\n            headers:{\r\n              'Authorization':'Bearer '+ token,\r\n              'accept': \"*/*\",\r\n            },\r\n\r\n          });\r\n        let  kpidata = await kpidatafinal.json();\r\n        console.log(\"downtime\"+JSON.stringify(kpidata.data[0]));\r\n        \r\n        \r\n\r\n        const updatedKipobj = {\r\n          ...kipobj,\r\n          kpi4: {\r\n            ...kipobj.kpi4,\r\n            title: JSON.stringify(kpidata.data[0].completedCount),\r\n          },\r\n          kpi5: {\r\n            ...kipobj.kpi5,\r\n            title:JSON.stringify(kpidata.data[0].downtime),\r\n          },\r\n          // kpi2:{\r\n          //   ...kipobj.kpi2,\r\n          //   title:\r\n          //   JSON.stringify(prop.kpimachines)\r\n          // },\r\n          kpi3: {\r\n            ...kipobj.kpi3,\r\n            title:\r\n            JSON.stringify(kpidata.data[0].newCount)\r\n          },\r\n         //totaldevicesinstalled\r\n          // kpi1: {\r\n          //   ...kipobj.kpi1,\r\n          //   title:\r\n          //   JSON.stringify(prop.kpimonitors)\r\n          // }\r\n        };\r\n\r\n       // setKipobj(updatedKipobj);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchPlantDetails();\r\n  }, [prop.currentPlant,prop.kpimonitors,prop.kpimachines]);\r\n\r\n  return (\r\n    <div className=\"kpis\">\r\n      <img src={imageUrl} alt=\"Plant\" />\r\n      {/* <div className=\"PlantName\"></div> */}\r\n      {/* 5kpi boxes with plant data */}\r\n      {Object.keys(kipobj).map(function (ele) {\r\n        return <KPI data={kipobj[ele]} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}