{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chandrashekar.rapaka\\\\Desktop\\\\git\\\\Zoho_widget_React\\\\react_app\\\\src\\\\Components\\\\Containers\\\\Plant\\\\Plant.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Plant(prop) {\n  _s();\n  const [board, setBoard] = useState(true);\n  useEffect(() => {\n    console.log(\"chandu\");\n    setBoard(!board);\n  }, [prop.board]);\n  const getChartData = plants => {\n    const healthScores = plants.map(machine => machine.status).filter(healthScore => healthScore !== undefined);\n    const healthScorePercentages = [healthScores.filter(score => score === 5).length, healthScores.filter(score => score === 4).length, healthScores.filter(score => score === 3).length, healthScores.filter(score => score === 2 || score === 1).length];\n    return {\n      labels: [\"Healthy\", \"Warning\", \"Critical\", \"Undefined\"],\n      datasets: [{\n        data: healthScorePercentages,\n        backgroundColor: [\"#64DD17\", \"#FFC107\", \"#FF5722\", \"#9E9E9E\"]\n      }],\n      options: {\n        legend: {\n          display: false\n        },\n        plugins: {\n          datalabels: {\n            color: \"white\",\n            font: {\n              weight: \"bold\"\n            },\n            formatter: (value, context) => {\n              return context.chart.data.labels[context.dataIndex] + \": \" + value;\n            }\n          }\n        }\n      }\n    };\n  };\n  const getChartData2 = plants => {\n    const healthScores = plants.map(machine => machine.healthScore).filter(healthScore => healthScore !== undefined);\n    const healthScorePercentages = [healthScores.filter(score => score <= 100 && score > 80).length, healthScores.filter(score => score <= 80 && score > 50).length, healthScores.filter(score => score <= 50 && score > 0).length, healthScores.filter(score => score === 0).length];\n    return {\n      labels: [\"Healthy\", \"Warning\", \"Critical\", \"Undefined\"],\n      datasets: [{\n        data: healthScorePercentages,\n        backgroundColor: [\"#64DD17\", \"#FFC107\", \"#FF5722\", \"#9E9E9E\"]\n      }],\n      options: {\n        legend: {\n          display: false\n        },\n        plugins: {\n          datalabels: {\n            color: \"white\",\n            font: {\n              weight: \"bold\"\n            },\n            formatter: (value, context) => {\n              return context.chart.data.labels[context.dataIndex] + \": \" + value;\n            }\n          }\n        }\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cement-mill-sec\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cement-mill-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: prop.currentItems.map((plants, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg col-20 mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: plants[0].plantName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), board ? /*#__PURE__*/_jsxDEV(Pie, {\n            data: getChartData(plants),\n            width: 200,\n            height: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Pie, {\n            data: getChartData2(plants),\n            width: 200,\n            height: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Corrective Action Pending: \" + plants.healthScore, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), \"Downtime Saved: \" + plants.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), \"Breakdown Avoided : \" + plants.mg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(Plant, \"hmlxKPc1AYvyUN1q4Cd3DcXFIRM=\");\n_c = Plant;\nexport default Plant;\nvar _c;\n$RefreshReg$(_c, \"Plant\");","map":{"version":3,"names":["React","useState","useEffect","Pie","ChartDataLabels","jsxDEV","_jsxDEV","Plant","prop","_s","board","setBoard","console","log","getChartData","plants","healthScores","map","machine","status","filter","healthScore","undefined","healthScorePercentages","score","length","labels","datasets","data","backgroundColor","options","legend","display","plugins","datalabels","color","font","weight","formatter","value","context","chart","dataIndex","getChartData2","className","children","currentItems","index","style","fontWeight","plantName","fileName","_jsxFileName","lineNumber","columnNumber","width","height","mg","_c","$RefreshReg$"],"sources":["C:/Users/chandrashekar.rapaka/Desktop/git/Zoho_widget_React/react_app/src/Components/Containers/Plant/Plant.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\nfunction Plant(prop) {\r\n  const [board, setBoard] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(\"chandu\");\r\n    setBoard(!board);\r\n  }, [prop.board]);\r\n\r\n  const getChartData = (plants) => {\r\n    const healthScores = plants\r\n      .map((machine) => machine.status)\r\n      .filter((healthScore) => healthScore !== undefined);\r\n\r\n    const healthScorePercentages = [\r\n      healthScores.filter((score) => score === 5).length,\r\n      healthScores.filter((score) => score === 4).length,\r\n      healthScores.filter((score) => score === 3).length,\r\n      healthScores.filter((score) => score === 2 || score === 1).length,\r\n    ];\r\n\r\n    return {\r\n      labels: [\"Healthy\", \"Warning\", \"Critical\", \"Undefined\"],\r\n      datasets: [\r\n        {\r\n          data: healthScorePercentages,\r\n          backgroundColor: [\"#64DD17\", \"#FFC107\", \"#FF5722\", \"#9E9E9E\"],\r\n        },\r\n      ],\r\n      options: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n        plugins: {\r\n          datalabels: {\r\n            color: \"white\",\r\n            font: {\r\n              weight: \"bold\",\r\n            },\r\n            formatter: (value, context) => {\r\n              return context.chart.data.labels[context.dataIndex] + \": \" + value;\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n  };\r\n\r\n  const getChartData2 = (plants) => {\r\n    const healthScores = plants\r\n      .map((machine) => machine.healthScore)\r\n      .filter((healthScore) => healthScore !== undefined);\r\n\r\n    const healthScorePercentages = [\r\n      healthScores.filter((score) => score <= 100 && score > 80).length,\r\n      healthScores.filter((score) => score <= 80 && score > 50).length,\r\n      healthScores.filter((score) => score <= 50 && score > 0).length,\r\n      healthScores.filter((score) => score === 0).length,\r\n    ];\r\n\r\n    return {\r\n      labels: [\"Healthy\", \"Warning\", \"Critical\", \"Undefined\"],\r\n      datasets: [\r\n        {\r\n          data: healthScorePercentages,\r\n          backgroundColor: [\"#64DD17\", \"#FFC107\", \"#FF5722\", \"#9E9E9E\"],\r\n        },\r\n      ],\r\n      options: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n        plugins: {\r\n          datalabels: {\r\n            color: \"white\",\r\n            font: {\r\n              weight: \"bold\",\r\n            },\r\n            formatter: (value, context) => {\r\n              return context.chart.data.labels[context.dataIndex] + \": \" + value;\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"cement-mill-sec\">\r\n      <div className=\"cement-mill-wrapper\">\r\n        <div className=\"row\">\r\n          {prop.currentItems.map((plants, index) => (\r\n            <div key={index} className=\"col-lg col-20 mb-1\">\r\n              <div style={{ fontWeight: \"bold\" }}>{plants[0].plantName}</div>\r\n              {board ? (\r\n                <Pie data={getChartData(plants)} width={200} height={200} />\r\n              ) : (\r\n                <Pie data={getChartData2(plants)} width={200} height={200} />\r\n              )}\r\n              <div>\r\n                {\"Corrective Action Pending: \" + plants.healthScore}\r\n                <br />\r\n                {\"Downtime Saved: \" + plants.status}\r\n                <br />\r\n                {\"Breakdown Avoided : \" + plants.mg}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Plant;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}