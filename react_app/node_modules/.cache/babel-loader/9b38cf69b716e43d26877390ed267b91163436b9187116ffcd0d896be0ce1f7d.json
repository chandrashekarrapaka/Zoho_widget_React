{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\demo\\\\Desktop\\\\CRV\\\\Zoho_widget_React\\\\react_app\\\\src\\\\Components\\\\Containers\\\\AA\\\\AA.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AA(prop) {\n  _s();\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [dataDisplay, setDataDisplay] = useState();\n  const currentPlant = prop.currentPlant;\n  //console.log(\"AA1\", currentPlant[0].plantid, accessToken);\n\n  useEffect(() => {\n    const fetchDataz = async () => {\n      try {\n        const response = await LoginCredentialsAndQueries();\n        if (response.length > 0) {\n          //console.log(\"responseAA\", response);\n          setAccessToken(response);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchDataz();\n  }, []);\n  let plantid = currentPlant[0].plantid;\n  useEffect(() => {\n    const fetchData = async () => {\n      let now = new Date();\n      let dtTo = now.toISOString().replace(/\\.\\d+Z$/, \"Z\").replace(/:/g, \"%3A\");\n      let dtFrom = new Date(now.getTime() - 48 * 60 * 60 * 1000).toISOString().replace(/\\.\\d+Z$/, \"Z\").replace(/:/g, \"%3A\");\n      try {\n        const response = await fetch(\"https://api.infinite-uptime.com/api/3.0/idap-api/anomaly-alerts/plants?plantIds=\" + plantid + \"&from=\" + dtFrom + \"&to=\" + dtTo, {\n          method: \"GET\",\n          headers: {\n            accept: \"application/json\",\n            Authorization: \"Bearer \" + accessToken\n          }\n        });\n        const data = await response.json();\n        setDataDisplay(data);\n        //console.log(\"alerts\", JSON.stringify(data.data.length));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 30000); // Fetch data every 30 seconds\n\n    return () => {\n      clearInterval(interval); // Clean up the interval on component unmount\n    };\n  }, [currentPlant, accessToken]);\n  //console.log(\"data\"+JSON.stringify(dataDisplay));\n  let lengthofDisplay = dataDisplay && dataDisplay.data.length == 0;\n  // console.log(\"checking\",lengthofDisplay,dataDisplay.data.length)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anomaly-alert\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"heading\",\n      children: \"Anomaly Alert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"data mb-2\",\n        children: dataDisplay && dataDisplay.data.length > 0 ? dataDisplay.data.map(ele => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-itemz\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fs-14 mb-0 text-dark\",\n            children: [\"Machine Name:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-bold\",\n              children: [\" \", ele.machineName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-badge fs-12 mb-0\",\n            children: [\"Monitor Name: \", ele.monitorName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"anomaly-magnitude\",\n            children: [\"Anomaly Magnitude: \", ele.anomalyMagnitude]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert-timestamp\",\n            children: [\"Alert Timestamp: \", ele.alertTimestamp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"anomaly-detected\",\n            children: [\"Anomaly Detected: \", ele.anomalyDetected]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)) : {\n          lengthofDisplay\n        } ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"No Anomaly Alert in Last 48 Hours\"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"No Anomaly Alert in Last 48 Hours\"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(AA, \"pGVATS9a8mwHYNXZrJrxb9m2Sa0=\");\n_c = AA;\nexport default AA;\nvar _c;\n$RefreshReg$(_c, \"AA\");","map":{"version":3,"names":["React","useState","useEffect","LoginCredentialsAndQueries","jsxDEV","_jsxDEV","Fragment","_Fragment","AA","prop","_s","accessToken","setAccessToken","dataDisplay","setDataDisplay","currentPlant","fetchDataz","response","length","error","console","plantid","fetchData","now","Date","dtTo","toISOString","replace","dtFrom","getTime","fetch","method","headers","accept","Authorization","data","json","interval","setInterval","clearInterval","lengthofDisplay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","map","ele","machineName","monitorName","anomalyMagnitude","alertTimestamp","anomalyDetected","_c","$RefreshReg$"],"sources":["C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/src/Components/Containers/AA/AA.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\r\n\r\nfunction AA(prop) {\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [dataDisplay, setDataDisplay] = useState();\r\n\r\n  const currentPlant = prop.currentPlant;\r\n  //console.log(\"AA1\", currentPlant[0].plantid, accessToken);\r\n\r\n  useEffect(() => {\r\n    const fetchDataz = async () => {\r\n      try {\r\n        const response = await LoginCredentialsAndQueries();\r\n        if (response.length > 0) {\r\n          //console.log(\"responseAA\", response);\r\n          setAccessToken(response);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchDataz();\r\n  }, []);\r\n\r\n  let plantid = currentPlant[0].plantid;\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let now = new Date();\r\n      let dtTo = now.toISOString().replace(/\\.\\d+Z$/, \"Z\").replace(/:/g, \"%3A\");\r\n      let dtFrom = new Date(now.getTime() - 48 * 60 * 60 * 1000)\r\n        .toISOString()\r\n        .replace(/\\.\\d+Z$/, \"Z\")\r\n        .replace(/:/g, \"%3A\");\r\n\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api.infinite-uptime.com/api/3.0/idap-api/anomaly-alerts/plants?plantIds=\" +\r\n          plantid +\r\n          \"&from=\" +\r\n          dtFrom +\r\n          \"&to=\" +\r\n          dtTo,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              accept: \"application/json\",\r\n              Authorization: \"Bearer \" + accessToken,\r\n            },\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n        setDataDisplay(data);\r\n        //console.log(\"alerts\", JSON.stringify(data.data.length));\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    const interval = setInterval(fetchData, 30000); // Fetch data every 30 seconds\r\n\r\n    return () => {\r\n      clearInterval(interval); // Clean up the interval on component unmount\r\n    };\r\n  }, [currentPlant, accessToken]);\r\n  //console.log(\"data\"+JSON.stringify(dataDisplay));\r\n  let lengthofDisplay = dataDisplay && dataDisplay.data.length == 0;\r\n  // console.log(\"checking\",lengthofDisplay,dataDisplay.data.length)\r\n  return (\r\n    <div className=\"anomaly-alert\">\r\n      <p className=\"heading\">Anomaly Alert</p>\r\n      <div className=\"data-box\">\r\n      <div class=\"data mb-2\">\r\n        {dataDisplay && dataDisplay.data.length > 0 ? (\r\n          dataDisplay.data.map((ele) => (\r\n            <div className=\"content-itemz\">\r\n              <div className=\"fs-14 mb-0 text-dark\">Machine Name: \r\n             <span className=\"fw-bold\"> {ele.machineName}</span>\r\n              </div>\r\n              <div className=\"data-badge fs-12 mb-0\">Monitor Name: {ele.monitorName}</div>\r\n              <div className=\"anomaly-magnitude\">Anomaly Magnitude: {ele.anomalyMagnitude}</div>\r\n              <div className=\"alert-timestamp\">Alert Timestamp: {ele.alertTimestamp}</div>\r\n              <div className=\"anomaly-detected\">Anomaly Detected: {ele.anomalyDetected}</div>\r\n            </div>\r\n          ))\r\n        ) :\r\n          ({ lengthofDisplay } ? (<>No Anomaly Alert in Last 48 Hours</>) : (<>No Anomaly Alert in Last 48 Hours</>))}\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AA;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}