{"ast":null,"code":"export async function Plants() {\n  let accessToken = \"\";\n  //   const handleScriptLoad = async() => {\n\n  //     console.log(\"hero\")\n  //     // await window.ZOHO.CREATOR.init().then(function(data) {\n\n  //     //  // var queryParams = window.ZOHO.CREATOR.UTIL.getQueryParams();\n  //     //  const email=\"rapaka.chandrashekar@gmail.com\";//Stage == \\\"Open\\\"\n  //     //    var config = {\n  //     //     appName: \"infinite-control-room\",\n  //     //     reportName: \"All_Users\",\n  //     //     criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\n  //     //     page: \"1\",\n  //     //     pageSize: \"100\"\n  //     //   }\n\n  //     //   //get all records API\n  //     //   window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\n  //     //     //callback block\n  //     //     let userData = response;\n\n  //     //     accessToken=JSON.stringify(userData.data[0].Access_Token);\n  //     //     console.log(\"userData\"+JSON.stringify(userData.data[0].Access_Token));\n  //     //    // console.log(\"check\"+accessToken);\n  //     //    // return accessToken;\n  //     //   });\n\n  //     // });\n\n  //   };\n  //  await handleScriptLoad();\n\n  try {\n    const loginResponse = await window.ZOHO.CREATOR.init().then(function (data) {\n      let accessTokenz = \"\";\n      var config = {\n        appName: \"infinite-control-room\",\n        reportName: \"All_Users\",\n        criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\n        page: \"1\",\n        pageSize: \"100\"\n      };\n      const access = window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\n        let userData = response;\n        accessTokenz = userData.data[0].Access_Token;\n        console.log(\"userData\" + JSON.stringify(userData.data[0].Access_Token));\n        // console.log(\"check\"+accessToken);\n        // return accessToken;\n        return accessTokenz;\n      });\n      return access;\n    });\n    const queryParams = await window.ZOHO.CREATOR.init().then(function (data) {\n      return window.ZOHO.CREATOR.UTIL.getQueryParams();\n    });\n    const loginData = await loginResponse;\n    //console.log(\"loginData\"+ loginData);\n    accessToken = loginData;\n    //accessToken=\"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIyY0NxRnpxRXJrNU5GS1RjTi1YSk1IdE9NS2tWVTZXS1hIdHZFMF8xZE5ZIn0.eyJleHAiOjE2ODY5NTQ5OTEsImlhdCI6MTY4NjkxMTc5MSwianRpIjoiNDU0MGQ1MTctNjE1ZS00NDZmLTgxOTgtNTc1YzY1ZjUwZmM3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5pbmZpbml0ZS11cHRpbWUuY29tL3JlYWxtcy9pZGFwIiwic3ViIjoiZjo2MGNhNzY4Yy1iMTA0LTQ0OTktYjU4Yy05MzliOTdlNzAzM2Q6ODcxMSIsInR5cCI6IkJlYXJlciIsImF6cCI6ImlkYXAiLCJzZXNzaW9uX3N0YXRlIjoiNGQ0YjUzMDAtM2NlZC00ZTk5LTlmNDEtYmRjMDI0ZjJkMzhlIiwic2NvcGUiOiJlbWFpbCIsInNpZCI6IjRkNGI1MzAwLTNjZWQtNGU5OS05ZjQxLWJkYzAyNGYyZDM4ZSIsImlzX2FkbWluIjoiZmFsc2UiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImlkYXBfcm9sZSI6IlJPTEVfVVNFUiIsImVtYWlsIjoiUmFwYWthLmNoYW5kcmFzaGVrYXJAZ21haWwuY29tIn0.l8NL7t1Kqf77hOHo_kGSpcKzDoSjFFYmKdyn3y6-fC45B_ICvvYz_FLMfazPMOxVzMG0nb0nD88y_J45wFYTjLnfwbZbIzw--vbVKt1EMe4qK6ko4wv1jTRrjg97m7PaQL3FLcv1JSPafJ8ukPm1z4BPo0tpoHlbZX1vCGwm1ZgdJqTBM6bJrtrLyB1EcABWsXIbd7r_756vua7sOO_7ZkAppAiHTV3qqjM5N0cjHaKTkMXYAiVkl6kBpsZf7N8CCdwkZTKV3rapK_zQGJhS2VxSNkeiERF2Y16nyPxSjxyzQFBB6I0AB2xqSSWlhJ6Shk2yaaI1MB9_cdt8oOgJPg\";\n    console.log(\"queryParams\" + JSON.stringify(queryParams));\n    //console.log(\"accessToken\"+accessToken);\n    //console.log(\"check\"+ accessToken);\n\n    let orgid = queryParams.PlantId;\n    const plantsResponse = await fetch(`https://api-idap.infinite-uptime.com/api/3.0/idap-api/plants/${orgid}/machine-group-stats`, {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json',\n        'Authorization': 'Bearer ' + accessToken\n      }\n    });\n    if (JSON.stringify(plantsResponse.status) == \"401\") {\n      // console.log(\"check\");call logindata\n      const apiUrl = 'https://api-idap.infinite-uptime.com/api/3.0/idap-api/login';\n      fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: 'rapaka.chandrashekar@gmail.com',\n          password: 'chanduR00002@'\n        })\n      }).then(response => response.json()).then(data => {\n        // Handle the response here\n        console.log(\"newaccessToken\" + JSON.stringify(data.data.accessToken));\n        newaccessToken = JSON.stringify(data.data.accessToken);\n        let orgid = queryParams.PlantId;\n        const plantsResponse = fetch(`https://api-idap.infinite-uptime.com/api/3.0/idap-api/plants/${orgid}/machine-group-stats`, {\n          method: 'GET',\n          headers: {\n            'accept': 'application/json',\n            'Authorization': 'Bearer ' + newaccessToken\n          }\n        });\n      }).catch(error => {\n        // Handle any error that occurred\n        console.error(error);\n      });\n    }\n    const plantsData = await plantsResponse.json();\n    const newMachines = [];\n    console.log(\"plantsdata\", plantsData);\n    plantsData.data.machineGroups.forEach(element => {\n      element.machines.forEach(ele => {\n        newMachines.push(ele);\n      });\n    });\n    return plantsData.data;\n    // console.log(\"newMachines\"+JSON.stringify(newMachines));\n    // return newMachines;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n_c = Plants;\nvar _c;\n$RefreshReg$(_c, \"Plants\");","map":{"version":3,"names":["Plants","accessToken","loginResponse","window","ZOHO","CREATOR","init","then","data","accessTokenz","config","appName","reportName","criteria","page","pageSize","access","API","getAllRecords","response","userData","Access_Token","console","log","JSON","stringify","queryParams","UTIL","getQueryParams","loginData","orgid","PlantId","plantsResponse","fetch","method","headers","status","apiUrl","body","username","password","json","newaccessToken","catch","error","plantsData","newMachines","machineGroups","forEach","element","machines","ele","push","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Services/Json.js"],"sourcesContent":["\r\nexport async function Plants() {\r\n  let accessToken=\"\";\r\n//   const handleScriptLoad = async() => {\r\n    \r\n//     console.log(\"hero\")\r\n//     // await window.ZOHO.CREATOR.init().then(function(data) {\r\n      \r\n//     //  // var queryParams = window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n//     //  const email=\"rapaka.chandrashekar@gmail.com\";//Stage == \\\"Open\\\"\r\n//     //    var config = {\r\n//     //     appName: \"infinite-control-room\",\r\n//     //     reportName: \"All_Users\",\r\n//     //     criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\r\n//     //     page: \"1\",\r\n//     //     pageSize: \"100\"\r\n//     //   }\r\n  \r\n//     //   //get all records API\r\n//     //   window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n//     //     //callback block\r\n//     //     let userData = response;\r\n        \r\n//     //     accessToken=JSON.stringify(userData.data[0].Access_Token);\r\n//     //     console.log(\"userData\"+JSON.stringify(userData.data[0].Access_Token));\r\n//     //    // console.log(\"check\"+accessToken);\r\n//     //    // return accessToken;\r\n//     //   });\r\n      \r\n      \r\n//     // });\r\n   \r\n   \r\n//   };\r\n//  await handleScriptLoad();\r\n  \r\n\r\n\r\n    try {\r\n       \r\n      const loginResponse =  await window.ZOHO.CREATOR.init().then(function(data) {\r\n        let accessTokenz=\"\";\r\n      \r\n      \r\n       var config = {\r\n        appName: \"infinite-control-room\",\r\n        reportName: \"All_Users\",\r\n        criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\r\n        page: \"1\",\r\n        pageSize: \"100\"\r\n      }\r\n      const access=window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n        let userData = response;\r\n        \r\n        accessTokenz=userData.data[0].Access_Token;\r\n        console.log(\"userData\"+JSON.stringify(userData.data[0].Access_Token));\r\n       // console.log(\"check\"+accessToken);\r\n       // return accessToken;\r\n      return accessTokenz;\r\n      });\r\n      return access;\r\n    });\r\n    const queryParams =  await window.ZOHO.CREATOR.init().then(function(data) { \r\n      return window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n    });\r\n  \r\n      const loginData = await loginResponse;\r\n      //console.log(\"loginData\"+ loginData);\r\n     accessToken = loginData;\r\n      //accessToken=\"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIyY0NxRnpxRXJrNU5GS1RjTi1YSk1IdE9NS2tWVTZXS1hIdHZFMF8xZE5ZIn0.eyJleHAiOjE2ODY5NTQ5OTEsImlhdCI6MTY4NjkxMTc5MSwianRpIjoiNDU0MGQ1MTctNjE1ZS00NDZmLTgxOTgtNTc1YzY1ZjUwZmM3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5pbmZpbml0ZS11cHRpbWUuY29tL3JlYWxtcy9pZGFwIiwic3ViIjoiZjo2MGNhNzY4Yy1iMTA0LTQ0OTktYjU4Yy05MzliOTdlNzAzM2Q6ODcxMSIsInR5cCI6IkJlYXJlciIsImF6cCI6ImlkYXAiLCJzZXNzaW9uX3N0YXRlIjoiNGQ0YjUzMDAtM2NlZC00ZTk5LTlmNDEtYmRjMDI0ZjJkMzhlIiwic2NvcGUiOiJlbWFpbCIsInNpZCI6IjRkNGI1MzAwLTNjZWQtNGU5OS05ZjQxLWJkYzAyNGYyZDM4ZSIsImlzX2FkbWluIjoiZmFsc2UiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImlkYXBfcm9sZSI6IlJPTEVfVVNFUiIsImVtYWlsIjoiUmFwYWthLmNoYW5kcmFzaGVrYXJAZ21haWwuY29tIn0.l8NL7t1Kqf77hOHo_kGSpcKzDoSjFFYmKdyn3y6-fC45B_ICvvYz_FLMfazPMOxVzMG0nb0nD88y_J45wFYTjLnfwbZbIzw--vbVKt1EMe4qK6ko4wv1jTRrjg97m7PaQL3FLcv1JSPafJ8ukPm1z4BPo0tpoHlbZX1vCGwm1ZgdJqTBM6bJrtrLyB1EcABWsXIbd7r_756vua7sOO_7ZkAppAiHTV3qqjM5N0cjHaKTkMXYAiVkl6kBpsZf7N8CCdwkZTKV3rapK_zQGJhS2VxSNkeiERF2Y16nyPxSjxyzQFBB6I0AB2xqSSWlhJ6Shk2yaaI1MB9_cdt8oOgJPg\";\r\n       console.log(\"queryParams\"+JSON.stringify(queryParams));\r\n      //console.log(\"accessToken\"+accessToken);\r\n      //console.log(\"check\"+ accessToken);\r\n      \r\n      let orgid=queryParams.PlantId;\r\n      const plantsResponse = await fetch(`https://api-idap.infinite-uptime.com/api/3.0/idap-api/plants/${orgid}/machine-group-stats`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'accept': 'application/json',\r\n          'Authorization': 'Bearer '+accessToken,\r\n        },\r\n      });\r\n      if(JSON.stringify(plantsResponse.status)==\"401\"){\r\n        // console.log(\"check\");call logindata\r\n        const apiUrl = 'https://api-idap.infinite-uptime.com/api/3.0/idap-api/login';\r\n\r\nfetch(apiUrl, {\r\n  method: 'POST',\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json'\r\n  },\r\n  body: JSON.stringify({\r\n    username: 'rapaka.chandrashekar@gmail.com',\r\n    password: 'chanduR00002@'\r\n  })\r\n})\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    // Handle the response here\r\n    console.log(\"newaccessToken\"+JSON.stringify(data.data.accessToken));\r\n    newaccessToken=JSON.stringify(data.data.accessToken);\r\n    let orgid=queryParams.PlantId;\r\n    const plantsResponse = fetch(`https://api-idap.infinite-uptime.com/api/3.0/idap-api/plants/${orgid}/machine-group-stats`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'accept': 'application/json',\r\n        'Authorization': 'Bearer '+newaccessToken,\r\n      },\r\n    });\r\n  })\r\n  .catch(error => {\r\n    // Handle any error that occurred\r\n    console.error(error);\r\n  });\r\n\r\n      }\r\n     \r\n      \r\n      const plantsData = await plantsResponse.json();\r\n      const newMachines=[];\r\n       console.log(\"plantsdata\",  plantsData);\r\n       plantsData.data.machineGroups.forEach(element => {\r\n        element.machines.forEach(ele=>{\r\n          newMachines.push(ele);\r\n        })\r\n       });\r\n  \r\n       return plantsData.data;\r\n      // console.log(\"newMachines\"+JSON.stringify(newMachines));\r\n      // return newMachines;\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error;\r\n    }\r\n  }\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}