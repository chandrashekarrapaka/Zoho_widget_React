{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chandrashekar.rapaka\\\\Desktop\\\\git\\\\Zoho_widget_React\\\\react_app\\\\src\\\\Components\\\\Containers\\\\Plant\\\\Plant.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Plant(prop) {\n  _s();\n  //console.log(prop.currentItems);\n  const [board, setBoard] = useState(true);\n  useEffect(() => {\n    console.log(\"chandu\");\n    setBoard(!board);\n  }, [prop.board]);\n  const getChartData = plants => {\n    // const monitors = machine.monitors.length;\n    //console.log(machine.monitors);\n\n    const healthScores = plants.map(machine => machine.status).filter(healthScore => healthScore !== undefined);\n    const healthScorePercentages = [healthScores.filter(score => score == 5).length, healthScores.filter(score => score == 4).length, healthScores.filter(score => score == 3).length, healthScores.filter(score => score == 2 || score == 1).length];\n    return {\n      // labels: ['Healthy', 'Warning', 'Critical', 'Undefined'],\n      datasets: [{\n        data: healthScorePercentages,\n        backgroundColor: ['#64DD17', '#FFC107', '#FF5722', '#9E9E9E']\n      }],\n      options: {\n        legend: {\n          display: false\n        }\n      }\n    };\n  };\n  const getChartData2 = plants => {\n    // const monitors = machine.monitors.length;\n\n    //console.log(machine.monitors);\n    const healthScores = plants.map(machine => machine.healthScore).filter(healthScore => healthScore !== undefined);\n    const healthScorePercentages = [healthScores.filter(score => score <= 100 && score > 80).length, healthScores.filter(score => score <= 80 && score > 50).length, healthScores.filter(score => score <= 50 && score > 0).length, healthScores.filter(score => score == 0).length];\n    return {\n      // labels: ['Healthy', 'Warning', 'Critical', 'Undefined'],\n      datasets: [{\n        data: healthScorePercentages,\n        backgroundColor: [\"#64DD17\", \"#FFC107\", \"#FF5722\", \"#9E9E9E\"],\n        datalabels: {\n          display: true,\n          color: \"white\",\n          font: {\n            weight: \"bold\"\n          },\n          formatter: (value, context) => {\n            const label = context.chart.data.labels[context.dataIndex];\n            return `${label}: ${value} plants`;\n          }\n        }\n      }],\n      options: {\n        legend: {\n          display: false\n        }\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cement-mill-sec\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cement-mill-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: prop.currentItems.map((plants, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg col-20 mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: plants[0].plantName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), board ? /*#__PURE__*/_jsxDEV(Pie, {\n            data: getChartData(plants),\n            width: 200,\n            height: 200,\n            options: {\n              maintainAspectRatio: false,\n              responsive: false\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(Pie, {\n            data: getChartData2(plants),\n            width: 200,\n            height: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Corrective Action Pending: \" + plants.healthScore, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 72\n            }, this), \"Downtime Saved: \" + plants.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 111\n            }, this), \"Breakdown Avoided : \" + plants.mg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(Plant, \"EdGyLTuTZezQDyzn474i6U1fvw8=\");\n_c = Plant;\nexport default Plant;\nvar _c;\n$RefreshReg$(_c, \"Plant\");","map":{"version":3,"names":["React","useState","useEffect","Pie","ChartDataLabels","jsxDEV","_jsxDEV","Plant","prop","_s","board","setBoard","console","log","getChartData","plants","healthScores","map","machine","status","filter","healthScore","undefined","healthScorePercentages","score","length","datasets","data","backgroundColor","options","legend","display","getChartData2","datalabels","color","font","weight","formatter","value","context","label","chart","labels","dataIndex","className","children","currentItems","index","style","fontWeight","plantName","fileName","_jsxFileName","lineNumber","columnNumber","width","height","maintainAspectRatio","responsive","mg","_c","$RefreshReg$"],"sources":["C:/Users/chandrashekar.rapaka/Desktop/git/Zoho_widget_React/react_app/src/Components/Containers/Plant/Plant.js"],"sourcesContent":["import React,{ useState, useEffect } from \"react\";\r\n\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\n\r\nfunction Plant(prop){\r\n   \r\n   //console.log(prop.currentItems);\r\n    const [board,setBoard]=useState(true);\r\n    useEffect(() => {\r\n        console.log(\"chandu\");\r\n       \r\n        setBoard(!board);\r\n      }, [prop.board]);\r\n    const getChartData = (plants) => {\r\n        // const monitors = machine.monitors.length;\r\n        //console.log(machine.monitors);\r\n        \r\n        const healthScores = plants.map((machine) => machine.status)\r\n        .filter((healthScore) => healthScore !== undefined);\r\n    \r\n        const healthScorePercentages = [\r\n          healthScores.filter((score) => score == 5 ).length,\r\n          healthScores.filter((score) => score == 4).length,\r\n          healthScores.filter((score) => score == 3).length,\r\n          healthScores.filter((score) => score == 2 ||score == 1).length,\r\n        ];\r\n       \r\n    \r\n        return {\r\n          // labels: ['Healthy', 'Warning', 'Critical', 'Undefined'],\r\n          datasets: [\r\n            {\r\n              data: healthScorePercentages,\r\n              backgroundColor: ['#64DD17', '#FFC107', '#FF5722', '#9E9E9E'],\r\n            },\r\n          ],\r\n          options: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n          },\r\n        };\r\n      };\r\n      const getChartData2 = (plants) => {\r\n        // const monitors = machine.monitors.length;\r\n    \r\n        //console.log(machine.monitors);\r\n          const healthScores = plants\r\n          .map((machine) => machine.healthScore)\r\n          .filter((healthScore) => healthScore !== undefined);\r\n    \r\n        const healthScorePercentages = [\r\n          healthScores.filter((score) => score <= 100 &&score > 80).length,\r\n          healthScores.filter((score) => score <=80  &&score > 50).length,\r\n          healthScores.filter((score) => score <=50  &&score > 0).length,\r\n          healthScores.filter((score) => score == 0).length,\r\n        ];\r\n    \r\n        return {\r\n          // labels: ['Healthy', 'Warning', 'Critical', 'Undefined'],\r\n          datasets: [\r\n            {\r\n              data: healthScorePercentages,\r\n          backgroundColor: [\"#64DD17\", \"#FFC107\", \"#FF5722\", \"#9E9E9E\"],\r\n          datalabels: {\r\n            display: true,\r\n            color: \"white\",\r\n            font: {\r\n              weight: \"bold\",\r\n            },\r\n            formatter: (value, context) => {\r\n              const label = context.chart.data.labels[context.dataIndex];\r\n              return `${label}: ${value} plants`;\r\n            },\r\n          },\r\n            },\r\n            \r\n          ],\r\n          options: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n          },\r\n        };\r\n      };\r\n    \r\n    \r\n    return(\r\n        <div className=\"cement-mill-sec\" >\r\n        <div className=\"cement-mill-wrapper\">\r\n          <div className=\"row\">\r\n            {prop.currentItems.map((plants, index) => (\r\n              \r\n              <div key={index} className=\"col-lg col-20 mb-1\">\r\n                <div style={{fontWeight:\"bold\"}}>{plants[0].plantName}</div>\r\n                \r\n               {board? <Pie data={getChartData(plants)} width={200}   height={200} options={{\r\n                  maintainAspectRatio: false,\r\n                  responsive: false,\r\n                  \r\n                  \r\n                }} />:<Pie data={getChartData2(plants)} width={200}   height={200}  />}\r\n                <div>{\"Corrective Action Pending: \"+plants.healthScore}<br/>{\"Downtime Saved: \"+plants.status}<br/>{\"Breakdown Avoided : \"+plants.mg}</div>\r\n                \r\n              </div>\r\n            ))}\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\nexport default Plant;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}