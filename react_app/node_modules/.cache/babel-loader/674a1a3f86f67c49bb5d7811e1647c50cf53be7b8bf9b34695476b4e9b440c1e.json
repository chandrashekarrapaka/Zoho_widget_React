{"ast":null,"code":"import _objectSpread from \"C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _assertThisInitialized from \"C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\r\n * Chart.js v3.9.1\r\n * https://www.chartjs.org\r\n * (c) 2022 Chart.js Contributors\r\n * Released under the MIT License\r\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as _getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n      if (this._request) {\n        return;\n      }\n      this._running = true;\n      this._request = requestAnimFrame.call(window, function () {\n        _this._update();\n        _this._request = null;\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          _this2._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          _this2._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      this._lastDate = date;\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n  return Animator;\n}();\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n    var c1 = c0.valid && _color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n      if (!this._active) {\n        this._target[prop] = to;\n        this._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n  return Animation;\n}();\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        var resolved = {};\n        for (var _i = 0, _animationOptions = animationOptions; _i < _animationOptions.length; _i++) {\n          var option = _animationOptions[_i];\n          resolved[option] = cfg[option];\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n  return Animations;\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var meta = _step.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator2 = _createForOfIteratorHelper(items),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var parsed = _step2.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          var meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n      this._dataCheck();\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n      this._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      this._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n        data = this._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = this._getOtherScale(scale);\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, parsed;\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n      var context = function context() {\n        return _this3.getContext(index, active);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"_getSharedOptions\",\n    value: function _getSharedOptions(start, mode) {\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var previouslySharedOptions = this._sharedOptions;\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions: sharedOptions,\n        includeOptions: includeOptions\n      };\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n      var _iterator3 = _createForOfIteratorHelper(this._syncList),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 3),\n            method = _step3$value[0],\n            arg1 = _step3$value[1],\n            arg2 = _step3$value[2];\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        this.parse(0, count);\n      }\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n      this.parse(start, count);\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n          method = _args2[0],\n          arg1 = _args2[1],\n          arg2 = _args2[2];\n        this[method](arg1, arg2);\n      }\n      this.chart._dataChanges.push([this.index].concat(_toConsumableArray(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n      var newCount = arguments.length - 2;\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n  return DatasetController;\n}();\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n  var _borderProps = borderProps(properties),\n    start = _borderProps.start,\n    end = _borderProps.end,\n    reverse = _borderProps.reverse,\n    top = _borderProps.top,\n    bottom = _borderProps.bottom;\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n  var _super = _createSuper(BarController);\n  function BarController() {\n    _classCallCheck(this, BarController);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n        vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = this._getRuler();\n      var _this$_getSharedOptio = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio.sharedOptions,\n        includeOptions = _this$_getSharedOptio.includeOptions;\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var iScale = this._cachedMeta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type).filter(function (meta) {\n        return meta.controller.options.grouped;\n      });\n      var stacked = iScale.options.stacked;\n      var stacks = [];\n      var skipNull = function skipNull(meta) {\n        var parsed = meta.controller.getParsed(dataIndex);\n        var val = parsed && parsed[meta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          return true;\n        }\n      };\n      var _iterator4 = _createForOfIteratorHelper(metasets),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var meta = _step4.value;\n          if (dataIndex !== undefined && skipNull(meta)) {\n            continue;\n          }\n          if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n            stacks.push(meta.stack);\n          }\n          if (meta.index === last) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n        vScale = _this$_cachedMeta.vScale,\n        _stacked = _this$_cachedMeta._stacked,\n        _this$options = this.options,\n        baseValue = _this$options.base,\n        minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n  return BarController;\n}(DatasetController);\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n  var _super2 = _createSuper(BubbleController);\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parsePrimitiveData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseArrayData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseObjectData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n        iScale = _this$_cachedMeta2.iScale,\n        vScale = _this$_cachedMeta2.vScale;\n      var _this$_getSharedOptio2 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio2.sharedOptions,\n        includeOptions = _this$_getSharedOptio2.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n  return BubbleController;\n}(DatasetController);\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n  var _super3 = _createSuper(DoughnutController);\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n    _classCallCheck(this, DoughnutController);\n    _this4 = _super3.call(this, chart, datasetIndex);\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n        if (isObject(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n            key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n          getter = function getter(i) {\n            return +resolveObjectKey(data[i], key);\n          };\n        }\n        var i, ilen;\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n      var chartWeight = this._getRingWeight(this.index);\n      var _this$_getRotationExt = this._getRotationExtents(),\n        circumference = _this$_getRotationExt.circumference,\n        rotation = _this$_getRotationExt.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var circumference = this._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n      var _this$_getSharedOptio3 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio3.sharedOptions,\n        includeOptions = _this$_getSharedOptio3.includeOptions;\n      var startAngle = this._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n  return DoughnutController;\n}(DatasetController);\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n  var _super4 = _createSuper(LineController);\n  function LineController() {\n    _classCallCheck(this, LineController);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n        iScale = _this$_cachedMeta3.iScale,\n        vScale = _this$_cachedMeta3.vScale,\n        _stacked = _this$_cachedMeta3._stacked,\n        _dataset = _this$_cachedMeta3._dataset;\n      var _this$_getSharedOptio4 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio4.sharedOptions,\n        includeOptions = _this$_getSharedOptio4.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n        spanGaps = _this$options2.spanGaps,\n        segment = _this$options2.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n  return LineController;\n}(DatasetController);\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n  var _super5 = _createSuper(PolarAreaController);\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n    _classCallCheck(this, PolarAreaController);\n    _this5 = _super5.call(this, chart, datasetIndex);\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n  return PolarAreaController;\n}(DatasetController);\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n  var _super6 = _createSuper(PieController);\n  function PieController() {\n    _classCallCheck(this, PieController);\n    return _super6.apply(this, arguments);\n  }\n  return _createClass(PieController);\n}(DoughnutController);\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n  var _super7 = _createSuper(RadarController);\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n  return RadarController;\n}(DatasetController);\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this8 = this;\n      var anims = this.$animations;\n      if (!final || !anims) {\n        return this;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n  return Element;\n}();\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'backdropPadding' && name !== 'callback';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'backdropPadding';\n  }\n});\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = _factorize(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right,\n    chart = scale.chart;\n  var chartArea = chart.chartArea,\n    scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n  var _super8 = _createSuper(Scale);\n  function Scale(cfg) {\n    var _this9;\n    _classCallCheck(this, Scale);\n    _this9 = _super8.call(this);\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n        min = _this$getUserBounds.min,\n        max = _this$getUserBounds.max,\n        minDefined = _this$getUserBounds.minDefined,\n        maxDefined = _this$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = this.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options3 = this.options,\n        beginAtZero = _this$options3.beginAtZero,\n        grace = _this$options3.grace,\n        tickOpts = _this$options3.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = this.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = this._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n        _this$options4 = this.options,\n        tickOpts = _this$options4.ticks,\n        titleOpts = _this$options4.title,\n        gridOpts = _this$options4.grid;\n      var display = this._isVisible();\n      var isHorizontal = this.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n            first = _this$_getLabelSizes.first,\n            last = _this$_getLabelSizes.last,\n            widest = _this$_getLabelSizes.widest,\n            highest = _this$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n      this._handleMargins();\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options5 = this.options,\n        _this$options5$ticks = _this$options5.ticks,\n        align = _this$options5$ticks.align,\n        padding = _this$options5$ticks.padding,\n        position = _this$options5.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options6 = this.options,\n        axis = _this$options6.axis,\n        position = _this$options6.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = toRadians(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = this._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n        position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        var optsAtIndex = grid.setContext(this.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = optsAtIndex.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = this._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n        if (isHorizontal) {\n          x = pixel;\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: tickTextAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options7 = this.options,\n        position = _this$options7.position,\n        ticks = _this$options7.ticks;\n      var rotation = -toRadians(this.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options8 = this.options,\n        position = _this$options8.position,\n        _this$options8$ticks = _this$options8.ticks,\n        crossAlign = _this$options8$ticks.crossAlign,\n        mirror = _this$options8$ticks.mirror,\n        padding = _this$options8$ticks.padding;\n      var labelSizes = this._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n      var chart = this.chart;\n      var position = this.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n        ctx = this.ctx,\n        grid = this.options.grid;\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = this.ctx;\n      var area = this._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n      var i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options9 = this.options,\n        position = _this$options9.position,\n        title = _this$options9.title,\n        reverse = _this$options9.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this10 = this;\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this10.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this10.drawBackground();\n          _this10.drawGrid(chartArea);\n          _this10.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          _this10.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this10.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n  return Scale;\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n  return TypedRegistry;\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this11 = this;\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || _this11._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === _this11.plugins && arg.id) {\n          _this11._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || _this11._getRegistryForType(item);\n            _this11._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n  return Registry;\n}();\nvar registry = new Registry();\nvar ScatterController = /*#__PURE__*/function (_DatasetController7) {\n  _inherits(ScatterController, _DatasetController7);\n  var _super9 = _createSuper(ScatterController);\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(ScatterController, [{\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var _meta$data2 = meta.data,\n        points = _meta$data2 === void 0 ? [] : _meta$data2;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi2 = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      if (this.options.showLine) {\n        var line = meta.dataset,\n          _dataset = meta._dataset;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        var options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options: options\n        }, mode);\n      }\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var showLine = this.options.showLine;\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = registry.getElement('line');\n      }\n      _get(_getPrototypeOf(ScatterController.prototype), \"addElements\", this).call(this);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta4 = this._cachedMeta,\n        iScale = _this$_cachedMeta4.iScale,\n        vScale = _this$_cachedMeta4.vScale,\n        _stacked = _this$_cachedMeta4._stacked,\n        _dataset = _this$_cachedMeta4._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options10 = this.options,\n        spanGaps = _this$options10.spanGaps,\n        segment = _this$options10.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var data = meta.data || [];\n      if (!this.options.showLine) {\n        var max = 0;\n        for (var i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n      }\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }]);\n  return ScatterController;\n}(DatasetController);\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n    this.options = options || {};\n  }\n  _createClass(DateAdapter, [{\n    key: \"init\",\n    value: function init(chartOptions) {}\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n  return DateAdapter;\n}();\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n      _index2 = _metasets$i.index,\n      data = _metasets$i.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n      startAngle = _element$getProps.startAngle,\n      endAngle = _element$getProps.endAngle;\n    var _getAngleFromPoint = getAngleFromPoint(element, {\n        x: position.x,\n        y: position.y\n      }),\n      angle = _getAngleFromPoint.angle;\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iterator5 = _createForOfIteratorHelper(layouts),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var wrap = _step5.value;\n      var stack = wrap.stack,\n        pos = wrap.pos,\n        stackWeight = wrap.stackWeight;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n    hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n    box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n    y = chartArea.y;\n  var _iterator6 = _createForOfIteratorHelper(boxes),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var layout = _step6.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n        var _width = stack.size || box.width;\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n  return BasePlatform;\n}();\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n  var _super10 = _createSuper(BasicPlatform);\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n    return _super10.apply(this, arguments);\n  }\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n  return BasicPlatform;\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition = getRelativePosition(event, chart),\n    x = _getRelativePosition.x,\n    y = _getRelativePosition.y;\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator7 = _createForOfIteratorHelper(nodeList),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var node = _step7.value;\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator8 = _createForOfIteratorHelper(entries),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var entry = _step8.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator9 = _createForOfIteratorHelper(entries),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n  var _super11 = _createSuper(DomPlatform);\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n    return _super11.apply(this, arguments);\n  }\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n      return !!(container && container.isConnected);\n    }\n  }]);\n  return DomPlatform;\n}(BasePlatform);\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n    this._init = [];\n  }\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n        this._notify(this._init, chart, 'install');\n      }\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n      var result = this._notify(descriptors, chart, hook, args);\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n        this._notify(this._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator10 = _createForOfIteratorHelper(descriptors),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var descriptor = _step10.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n  return PluginService;\n}();\nfunction allPlugins(config) {\n  var localIds = {};\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var _i2 = 0; _i2 < local.length; _i2++) {\n    var plugin = local[_i2];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {\n    plugins: plugins,\n    localIds: localIds\n  };\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, _ref2, options, all) {\n  var plugins = _ref2.plugins,\n    localIds = _ref2.localIds;\n  var result = [];\n  var context = chart.getContext();\n  var _iterator11 = _createForOfIteratorHelper(plugins),\n    _step11;\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var plugin = _step11.value;\n      var id = plugin.id;\n      var opts = getOpts(options[id], all);\n      if (opts === null) {\n        continue;\n      }\n      result.push({\n        plugin: plugin,\n        options: pluginOpts(chart.config, {\n          plugin: plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n  return result;\n}\nfunction pluginOpts(config, _ref3, opts, context) {\n  var plugin = _ref3.plugin,\n    local = _ref3.local;\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  _createClass(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      var _iterator12 = _createForOfIteratorHelper(names),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var prop = _step12.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n  return Config;\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nvar hasFunction = function hasFunction(value) {\n  return isObject(value) && Object.getOwnPropertyNames(value).reduce(function (acc, key) {\n    return acc || isFunction(value[key]);\n  }, false);\n};\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator13 = _createForOfIteratorHelper(names),\n    _step13;\n  try {\n    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n      var prop = _step13.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator13.e(err);\n  } finally {\n    _iterator13.f();\n  }\n  return false;\n}\nvar version = \"3.9.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n  for (var _i3 = 0, _keys = keys; _i3 < _keys.length; _i3++) {\n    var key = _keys[_i3];\n    var intKey = +key;\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this12 = this;\n    _classCallCheck(this, Chart);\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function (mode) {\n      return _this12.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options11 = this.options,\n        aspectRatio = _this$options11.aspectRatio,\n        maintainAspectRatio = _this$options11.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this13 = this;\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this13.ctx,\n            chart: _this13\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(_this13, scale, scale.options);\n        layouts.addBox(_this13, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this14 = this;\n      var metasets = this._metasets,\n        datasets = this.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this14._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n      this._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n          meta = this.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      this._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this15 = this;\n      each(this.data.datasets, function (dataset, datasetIndex) {\n        _this15.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n      this._updateScales();\n      this._checkEventBindings();\n      this._updateHiddenIndices();\n      this._plugins.invalidate();\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n          controller = _this$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n      this._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      this._updateDatasets(mode);\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      this._layers.sort(compare2Level('z', '_idx'));\n      var _active = this._active,\n        _lastEvent = this._lastEvent;\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this16 = this;\n      each(this.scales, function (scale) {\n        layouts.removeBox(_this16, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n      var _iterator14 = _createForOfIteratorHelper(changes),\n        _step14;\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var _step14$value = _step14.value,\n            method = _step14$value.method,\n            start = _step14$value.start,\n            count = _step14$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n      var changeSet = makeSet(0);\n      for (var i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this17 = this;\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, function (box) {\n        var _this17$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_this17$_layers = _this17._layers).push.apply(_this17$_layers, _toConsumableArray(box._layers()));\n      }, this);\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n      for (var _i4 = 0, _ilen = this.data.datasets.length; _i4 < _ilen; ++_i4) {\n        this._updateDataset(_i4, isFunction(mode) ? mode({\n          datasetIndex: _i4\n        }) : mode);\n      }\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n          width = _this$_resizeBeforeDr.width,\n          height = _this$_resizeBeforeDr.height;\n        this._resize(width, height);\n        this._resizeBeforeDraw = null;\n      }\n      this.clear();\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = this._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = this.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = this.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n        ctx = this.ctx;\n      this._stop();\n      this.config.clearCache();\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this18 = this;\n      var listeners = this._listeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        _this18._eventHandler(e);\n      };\n      each(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this19 = this;\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this19, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this19, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (_this19.canvas) {\n          _this19.resize(width, height);\n        }\n      };\n      var detached;\n      var attached = function attached() {\n        _remove('attach', attached);\n        _this19.attached = true;\n        _this19.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        _this19.attached = false;\n        _remove('resize', listener);\n        _this19._stop();\n        _this19._resize(0, 0);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this20 = this;\n      each(this._listeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this21 = this;\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref4) {\n        var datasetIndex = _ref4.datasetIndex,\n          index = _ref4.index;\n        var meta = _this21.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this22 = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this22.options.events).includes(e.native.type);\n      };\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        this.render();\n      }\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n        lastActive = _this$_active === void 0 ? [] : _this$_active,\n        options = this.options;\n      var useFinalPosition = replay;\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n      var isClick = _isClickEvent(e);\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        this._active = active;\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }]);\n  return Chart;\n}();\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n  if (spacing) {\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n    if (innerStart > 0) {\n      var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    var outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    var outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    var outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    var outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n    y = element.y,\n    startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  var options = element.options;\n  var borderWidth = options.borderWidth,\n    borderJoinStyle = options.borderJoinStyle;\n  var inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n  var _super12 = _createSuper(ArcElement);\n  function ArcElement(cfg) {\n    var _this23;\n    _classCallCheck(this, ArcElement);\n    _this23 = _super12.call(this);\n    _this23.options = undefined;\n    _this23.circumference = undefined;\n    _this23.startAngle = undefined;\n    _this23.endAngle = undefined;\n    _this23.innerRadius = undefined;\n    _this23.outerRadius = undefined;\n    _this23.pixelMargin = 0;\n    _this23.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this23), cfg);\n    }\n    return _this23;\n  }\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint2 = getAngleFromPoint(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint2.angle,\n        distance = _getAngleFromPoint2.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var rAdjust = this.options.spacing / 2;\n      var _circumference = valueOrDefault(circumference, endAngle - startAngle);\n      var betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      var withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var _this$options12 = this.options,\n        offset = _this$options12.offset,\n        spacing = _this$options12.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n        circumference = this.circumference;\n      var offset = (options.offset || 0) / 2;\n      var spacing = (options.spacing || 0) / 2;\n      var circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n      ctx.restore();\n    }\n  }]);\n  return ArcElement;\n}(Element);\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref5 = params || {},\n    _ref5$move = _ref5.move,\n    move = _ref5$move === void 0 ? true : _ref5$move,\n    reverse = _ref5.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref6 = params || {},\n    _ref6$move = _ref6.move,\n    move = _ref6$move === void 0 ? true : _ref6$move,\n    reverse = _ref6.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator15 = _createForOfIteratorHelper(segments),\n    _step15;\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var segment = _step15.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n  var _super13 = _createSuper(LineElement);\n  function LineElement(cfg) {\n    var _this24;\n    _classCallCheck(this, LineElement);\n    _this24 = _super13.call(this);\n    _this24.animated = true;\n    _this24.options = undefined;\n    _this24._chart = undefined;\n    _this24._loop = undefined;\n    _this24._fullLoop = undefined;\n    _this24._path = undefined;\n    _this24._points = undefined;\n    _this24._segments = undefined;\n    _this24._decimated = false;\n    _this24._pointsUpdated = false;\n    _this24._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this24), cfg);\n    }\n    return _this24;\n  }\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n      var segments = _boundSegments(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n      var segmentMethod = _getSegmentMethod(this);\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      var _iterator16 = _createForOfIteratorHelper(segments),\n        _step16;\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var segment = _step16.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        _draw(ctx, this, start, count);\n        ctx.restore();\n      }\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }]);\n  return LineElement;\n}(Element);\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n  var _super14 = _createSuper(PointElement);\n  function PointElement(cfg) {\n    var _this25;\n    _classCallCheck(this, PointElement);\n    _this25 = _super14.call(this);\n    _this25.options = undefined;\n    _this25.parsed = undefined;\n    _this25.skip = undefined;\n    _this25.stop = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this25), cfg);\n    }\n    return _this25;\n  }\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n  return PointElement;\n}(Element);\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n  var _super15 = _createSuper(BarElement);\n  function BarElement(cfg) {\n    var _this26;\n    _classCallCheck(this, BarElement);\n    _this26 = _super15.call(this);\n    _this26.options = undefined;\n    _this26.horizontal = undefined;\n    _this26.base = undefined;\n    _this26.width = undefined;\n    _this26.height = undefined;\n    _this26.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this26), cfg);\n    }\n    return _this26;\n  }\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n        _this$options13 = this.options,\n        borderColor = _this$options13.borderColor,\n        backgroundColor = _this$options13.backgroundColor;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n  return BarElement;\n}(Element);\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds = iScale.getUserBounds(),\n    min = _iScale$getUserBounds.min,\n    max = _iScale$getUserBounds.max,\n    minDefined = _iScale$getUserBounds.minDefined,\n    maxDefined = _iScale$getUserBounds.maxDefined;\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi3 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi3.start,\n        count = _getStartAndCountOfVi3.count;\n      var threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator17 = _createForOfIteratorHelper(segments),\n    _step17;\n  try {\n    for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n      var segment = _step17.value;\n      var start = segment.start,\n        end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      var targetSegments = _boundSegments(target, bounds);\n      var _iterator18 = _createForOfIteratorHelper(targetSegments),\n        _step18;\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var tgt = _step18.value;\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = _boundSegment(segment, points, subBounds);\n          var _iterator19 = _createForOfIteratorHelper(fillSources),\n            _step19;\n          try {\n            for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n              var fillSource = _step19.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator19.e(err);\n          } finally {\n            _iterator19.f();\n          }\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n    }\n  } catch (err) {\n    _iterator17.e(err);\n  } finally {\n    _iterator17.f();\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _pointsFromSegments(boundary, line) {\n  var _ref7 = boundary || {},\n    _ref7$x = _ref7.x,\n    x = _ref7$x === void 0 ? null : _ref7$x,\n    _ref7$y = _ref7.y,\n    y = _ref7$y === void 0 ? null : _ref7$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref8) {\n    var start = _ref8.start,\n      end = _ref8.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n  return simpleArc;\n}();\nfunction _getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n  var value = _getTargetValue(fill, scale, start);\n  var target = [];\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n  var line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref9 = fillOption || {},\n    _ref9$above = _ref9.above,\n    above = _ref9$above === void 0 ? color : _ref9$above,\n    _ref9$below = _ref9.below,\n    below = _ref9$below === void 0 ? color : _ref9$below;\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n    points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n  var _iterator20 = _createForOfIteratorHelper(segments),\n    _step20;\n  try {\n    for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n      var segment = _step20.value;\n      var start = segment.start,\n        end = segment.end;\n      var firstPoint = points[start];\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _iterator20.e(err);\n  } finally {\n    _iterator20.f();\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale;\n  var segments = _segments(line, target, property);\n  var _iterator21 = _createForOfIteratorHelper(segments),\n    _step21;\n  try {\n    for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n      var _step21$value = _step21.value,\n        src = _step21$value.source,\n        tgt = _step21$value.target,\n        start = _step21$value.start,\n        end = _step21$value.end;\n      var _src$style = src.style,\n        _src$style2 = _src$style === void 0 ? {} : _src$style,\n        _src$style2$backgroun = _src$style2.backgroundColor,\n        backgroundColor = _src$style2$backgroun === void 0 ? color : _src$style2$backgroun;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator21.e(err);\n  } finally {\n    _iterator21.f();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n    top = _scale$chart$chartAre.top,\n    bottom = _scale$chart$chartAre.bottom;\n  var _ref10 = bounds || {},\n    property = _ref10.property,\n    start = _ref10.start,\n    end = _ref10.end;\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n  var _super16 = _createSuper(Legend);\n  function Legend(config) {\n    var _this27;\n    _classCallCheck(this, Legend);\n    _this27 = _super16.call(this);\n    _this27._added = false;\n    _this27.legendHitBoxes = [];\n    _this27._hoveredItem = null;\n    _this27.doughnutMode = false;\n    _this27.chart = config.chart;\n    _this27.options = config.options;\n    _this27.ctx = config.ctx;\n    _this27.legendItems = undefined;\n    _this27.columnSizes = undefined;\n    _this27.lineWidths = undefined;\n    _this27.maxHeight = undefined;\n    _this27.maxWidth = undefined;\n    _this27.top = undefined;\n    _this27.bottom = undefined;\n    _this27.left = undefined;\n    _this27.right = undefined;\n    _this27.height = undefined;\n    _this27.width = undefined;\n    _this27._margins = undefined;\n    _this27.position = undefined;\n    _this27.weight = undefined;\n    _this27.fullSize = undefined;\n    return _this27;\n  }\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this28 = this;\n      var labelOpts = this.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this28.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this28.chart.data);\n        });\n      }\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n        ctx = this.ctx;\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = this._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxWidth = this.maxWidth,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxHeight = this.maxHeight,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n      var titleHeight = this._computeTitleHeight();\n      var hitboxes = this.legendHitBoxes,\n        _this$options14 = this.options,\n        align = _this$options14.align,\n        padding = _this$options14.labels.padding,\n        rtl = _this$options14.rtl;\n      var rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        var _iterator22 = _createForOfIteratorHelper(hitboxes),\n          _step22;\n        try {\n          for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n            var hitbox = _step22.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator22.e(err);\n        } finally {\n          _iterator22.f();\n        }\n      } else {\n        var col = 0;\n        var top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        var _iterator23 = _createForOfIteratorHelper(hitboxes),\n          _step23;\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var _hitbox = _step23.value;\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        clipArea(ctx, this);\n        this._draw();\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this29 = this;\n      var opts = this.options,\n        columnSizes = this.columnSizes,\n        lineWidths = this.lineWidths,\n        ctx = this.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n        padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      var isHorizontal = this.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this29.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this29.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, _this29.left + padding, _this29.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this29.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, _this29.top + titleHeight + padding, _this29.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this29.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n      var x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n        this._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n  return Legend;\n}(Element);\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n  var _super17 = _createSuper(Title);\n  function Title(config) {\n    var _this30;\n    _classCallCheck(this, Title);\n    _this30 = _super17.call(this);\n    _this30.chart = config.chart;\n    _this30.options = config.options;\n    _this30.ctx = config.ctx;\n    _this30._padding = undefined;\n    _this30.top = undefined;\n    _this30.bottom = undefined;\n    _this30.left = undefined;\n    _this30.right = undefined;\n    _this30.width = undefined;\n    _this30.height = undefined;\n    _this30.position = undefined;\n    _this30.weight = undefined;\n    _this30.fullSize = undefined;\n    return _this30;\n  }\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n      var textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n      var _this$_drawArgs = this._drawArgs(offset),\n        titleX = _this$_drawArgs.titleX,\n        titleY = _this$_drawArgs.titleY,\n        maxWidth = _this$_drawArgs.maxWidth,\n        rotation = _this$_drawArgs.rotation;\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n  return Title;\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var _toTRBLCorners = toTRBLCorners(cornerRadius),\n    topLeft = _toTRBLCorners.topLeft,\n    topRight = _toTRBLCorners.topRight,\n    bottomLeft = _toTRBLCorners.bottomLeft,\n    bottomRight = _toTRBLCorners.bottomRight;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n  var _super18 = _createSuper(Tooltip);\n  function Tooltip(config) {\n    var _this31;\n    _classCallCheck(this, Tooltip);\n    _this31 = _super18.call(this);\n    _this31.opacity = 0;\n    _this31._active = [];\n    _this31._eventPosition = undefined;\n    _this31._size = undefined;\n    _this31._cachedAnimations = undefined;\n    _this31._tooltipItems = [];\n    _this31.$animations = undefined;\n    _this31.$context = undefined;\n    _this31.chart = config.chart || config._chart;\n    _this31._chart = _this31.chart;\n    _this31.options = config.options;\n    _this31.dataPoints = undefined;\n    _this31.title = undefined;\n    _this31.beforeBody = undefined;\n    _this31.body = undefined;\n    _this31.afterBody = undefined;\n    _this31.footer = undefined;\n    _this31.xAlign = undefined;\n    _this31.yAlign = undefined;\n    _this31.x = undefined;\n    _this31.y = undefined;\n    _this31.height = undefined;\n    _this31.width = undefined;\n    _this31.caretX = undefined;\n    _this31.caretY = undefined;\n    _this31.labelColors = undefined;\n    _this31.labelPointStyles = undefined;\n    _this31.labelTextColors = undefined;\n    return _this31;\n  }\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      var title = callbacks.title.apply(this, [context]);\n      var afterTitle = callbacks.afterTitle.apply(this, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this32 = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(_this32, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(_this32, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(_this32, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      var footer = callbacks.footer.apply(this, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this33 = this;\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(_this33, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(_this33, context));\n        labelTextColors.push(scoped.labelTextColor.call(_this33, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n        cornerRadius = options.cornerRadius;\n      var _toTRBLCorners2 = toTRBLCorners(cornerRadius),\n        topLeft = _toTRBLCorners2.topLeft,\n        topRight = _toTRBLCorners2.topRight,\n        bottomLeft = _toTRBLCorners2.bottomLeft,\n        bottomRight = _toTRBLCorners2.bottomRight;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColors = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max.apply(Math, _toConsumableArray(Object.values(labelColors.borderWidth))) : labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var _toTRBLCorners3 = toTRBLCorners(options.cornerRadius),\n        topLeft = _toTRBLCorners3.topLeft,\n        topRight = _toTRBLCorners3.topRight,\n        bottomLeft = _toTRBLCorners3.bottomLeft,\n        bottomRight = _toTRBLCorners3.bottomRight;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n      if (!opacity) {\n        return;\n      }\n      this._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this34 = this;\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref11) {\n        var datasetIndex = _ref11.datasetIndex,\n          index = _ref11.index;\n        var meta = _this34.chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n      var positionChanged = this._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n      var positionChanged = this._positionChanged(active, e);\n      var changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        this._active = active;\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var options = this.options;\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n  return Tooltip;\n}(Element);\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        var label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        var value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n  var _super19 = _createSuper(CategoryScale);\n  function CategoryScale(cfg) {\n    var _this35;\n    _classCallCheck(this, CategoryScale);\n    _this35 = _super19.call(this, cfg);\n    _this35._startValue = undefined;\n    _this35._valueRange = 0;\n    _this35._addedLabels = [];\n    return _this35;\n  }\n  _createClass(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n      if (added.length) {\n        var labels = this.getLabels();\n        var _iterator24 = _createForOfIteratorHelper(added),\n          _step24;\n        try {\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var _step24$value = _step24.value,\n              _index3 = _step24$value.index,\n              label = _step24$value.label;\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n        this._addedLabels = [];\n      }\n      _get(_getPrototypeOf(CategoryScale.prototype), \"init\", this).call(this, scaleOptions);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n        minDefined = _this$getUserBounds2.minDefined,\n        maxDefined = _this$getUserBounds2.maxDefined;\n      var _this$getMinMax = this.getMinMax(true),\n        min = _this$getMinMax.min,\n        max = _this$getMinMax.max;\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var labels = this.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n  return CategoryScale;\n}(Scale);\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref12) {\n  var horizontal = _ref12.horizontal,\n    minRotation = _ref12.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n  var _super20 = _createSuper(LinearScaleBase);\n  function LinearScaleBase(cfg) {\n    var _this36;\n    _classCallCheck(this, LinearScaleBase);\n    _this36 = _super20.call(this, cfg);\n    _this36.start = undefined;\n    _this36.end = undefined;\n    _this36._startValue = undefined;\n    _this36._endValue = undefined;\n    _this36._valueRange = 0;\n    return _this36;\n  }\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n      var _this$getUserBounds3 = this.getUserBounds(),\n        minDefined = _this$getUserBounds3.minDefined,\n        maxDefined = _this$getUserBounds3.maxDefined;\n      var min = this.min,\n        max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        var offset = 1;\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n  return LinearScaleBase;\n}(Scale);\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n  var _super21 = _createSuper(LinearScale);\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n    return _super21.apply(this, arguments);\n  }\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n        min = _this$getMinMax2.min,\n        max = _this$getMinMax2.max;\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = toRadians(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = this._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n  return LinearScale;\n}(LinearScaleBase);\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n  var _super22 = _createSuper(LogarithmicScale);\n  function LogarithmicScale(cfg) {\n    var _this37;\n    _classCallCheck(this, LogarithmicScale);\n    _this37 = _super22.call(this, cfg);\n    _this37.start = undefined;\n    _this37.end = undefined;\n    _this37._startValue = undefined;\n    _this37._valueRange = 0;\n    return _this37;\n  }\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n        min = _this$getMinMax3.min,\n        max = _this$getMinMax3.max;\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n        minDefined = _this$getUserBounds4.minDefined,\n        maxDefined = _this$getUserBounds4.maxDefined;\n      var min = this.min;\n      var max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n  return LogarithmicScale;\n}(Scale);\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    var angle = Math.round(toDegrees(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var extra = getTickBackdropHeight(opts) / 2;\n  var outerDistance = scale.drawingArea;\n  var additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    var angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n      x = _scale$_pointLabelIte.x,\n      y = _scale$_pointLabelIte.y,\n      textAlign = _scale$_pointLabelIte.textAlign,\n      left = _scale$_pointLabelIte.left,\n      top = _scale$_pointLabelIte.top,\n      right = _scale$_pointLabelIte.right,\n      bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n    if (!isNullOrUndef(backdropColor)) {\n      var borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      var backdropLeft = left - padding.left;\n      var backdropTop = top - padding.top;\n      var backdropWidth = right - left + padding.width;\n      var backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(function (v) {\n        return v !== 0;\n      })) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n  var _super23 = _createSuper(RadialLinearScale);\n  function RadialLinearScale(cfg) {\n    var _this38;\n    _classCallCheck(this, RadialLinearScale);\n    _this38 = _super23.call(this, cfg);\n    _this38.xCenter = undefined;\n    _this38.yCenter = undefined;\n    _this38.drawingArea = undefined;\n    _this38._pointLabels = [];\n    _this38._pointLabelItems = [];\n    return _this38;\n  }\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n        min = _this$getMinMax4.min,\n        max = _this$getMinMax4.max;\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this39 = this;\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = callback(_this39.options.pointLabels.callback, [value, index], _this39);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this39.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options15 = this.options,\n        backgroundColor = _this$options15.backgroundColor,\n        circular = _this$options15.grid.circular;\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this40 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = _this40.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(_this40.getContext(index - 1));\n            drawRadiusLine(_this40, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this41 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(_this41.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = _this41.getDistanceFromCenterForValue(_this41.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n  return RadialLinearScale;\n}(LinearScaleBase);\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n  var _super24 = _createSuper(TimeScale);\n  function TimeScale(props) {\n    var _this42;\n    _classCallCheck(this, TimeScale);\n    _this42 = _super24.call(this, props);\n    _this42._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this42._unit = 'day';\n    _this42._majorUnit = undefined;\n    _this42._offsets = {};\n    _this42._normalized = false;\n    _this42._parseOpts = undefined;\n    return _this42;\n  }\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n      var _this$getUserBounds5 = this.getUserBounds(),\n        min = _this$getUserBounds5.min,\n        max = _this$getUserBounds5.max,\n        minDefined = _this$getUserBounds5.minDefined,\n        maxDefined = _this$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = this.min;\n      var max = this.max;\n      var ticks = _filterBetween(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      var label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n      var size = this._getLabelSize(exampleLabel);\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = this.getMatchingVisibleMetas();\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = this.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n  return TimeScale;\n}(Scale);\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n  var _super25 = _createSuper(TimeSeriesScale);\n  function TimeSeriesScale(props) {\n    var _this43;\n    _classCallCheck(this, TimeSeriesScale);\n    _this43 = _super25.call(this, props);\n    _this43._table = [];\n    _this43._minPos = undefined;\n    _this43._tableRange = undefined;\n    return _this43;\n  }\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n        max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n  return TimeSeriesScale;\n}(TimeScale);\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","_getStartAndCountOfVisiblePoints","w","_scaleRangesChanged","x","isNumber","y","_parseObjectDataRadialScale","z","log10","A","_factorize","B","finiteOrDefault","C","callback","D","_addGrace","E","_limitValue","F","toDegrees","G","_measureText","I","_int16Range","J","_alignPixel","K","toPadding","L","clipArea","M","renderText","N","unclipArea","O","toFont","Q","each","R","_toLeftRightCenter","S","_alignStartEnd","U","overrides","V","merge","W","_capitalize","X","getRelativePosition","Y","_rlookupByKey","Z","_lookupByKey","$","_isPointInArea","a0","getAngleFromPoint","a1","getMaximumSize","a2","_getParentNode","a3","readUsedSize","a4","throttled","a5","supportsEventListenerOptions","a6","_isDomSupported","a7","descriptors","a8","isFunction","a9","_attachContext","aa","_createResolver","ab","_descriptors","ac","mergeIf","ad","uid","ae","debounce","af","retinaScale","ag","clearCanvas","ah","setsEqual","ai","_elementsEqual","aj","_isClickEvent","ak","_isBetween","al","_readValueToProps","am","_updateBezierControlPoints","an","_computeSegments","ao","_boundSegments","ap","_steppedInterpolation","aq","_bezierInterpolation","ar","_pointInLine","as","_steppedLineTo","at","_bezierCurveTo","au","drawPoint","av","addRoundedRectPath","aw","toTRBL","ax","toTRBLCorners","ay","_boundSegment","az","_normalizeAngle","aA","getRtlAdapter","aB","overrideTextDirection","aC","_textX","aD","restoreTextDirection","aE","drawPointLegend","aF","noop","aG","distanceBetweenPoints","aH","_setMinAndMaxByKey","aI","niceNum","aJ","almostWhole","aK","almostEquals","aL","_decimalPlaces","aM","_longestText","aN","_filterBetween","aO","_lookup","Animator","_classCallCheck","_request","_charts","Map","_running","_lastDate","undefined","_createClass","key","value","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","_this","call","window","_update","_this2","arguments","length","Date","now","remaining","running","items","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","_this$_getAnims$items","apply","_toConsumableArray","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","_i","_animationOptions","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","concat","id","getUserBounds","_scale$getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","_iterator","_createForOfIteratorHelper","getMatchingVisibleMetas","_step","done","err","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","_iterator2","_step2","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","_parsed$i","_defineProperty","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","_getUserBounds","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","_this3","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","_iterator3","_step3","_step3$value","_slicedToArray","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_args2","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","visibleMetas","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","_borderProps","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","_ref","inflateAmount","BarController","_DatasetController","_inherits","_super","_createSuper","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","iAxisKey","vAxisKey","obj","_get","_getPrototypeOf","bars","getBasePixel","_getRuler","_this$_getSharedOptio","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","_iterator4","_step4","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","_this$_cachedMeta","_this$options","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","_DatasetController2","_super2","radius","points","_this$_cachedMeta2","_this$_getSharedOptio2","point","iPixel","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","_DatasetController3","_super3","_this4","innerRadius","outerRadius","getter","_this$_parsing$key","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_this$_getRotationExt","_getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_this$_getSharedOptio3","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","_DatasetController4","_super4","line","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","_datasetIndex","_decimated","showLine","segment","animated","_this$_cachedMeta3","_this$_getSharedOptio4","_this$options2","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_DatasetController5","_super5","_this5","bind","_updateRadius","_this6","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this7","angleLines","display","circular","pointLabels","PieController","_DoughnutController","_super6","RadarController","_DatasetController6","_super7","_fullLoop","pointPosition","getPointPositionForValue","fill","Element","tooltipPosition","useFinalPosition","_this$getProps","getProps","hasValue","final","_this8","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","format","logarithmic","pow","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","position","titleArgs","titleX","titleY","positionAxisID","Scale","_Element","_super8","_this9","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","_this$getUserBounds","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","margins","_this$options3","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","sqrt","asin","_this$options4","titleOpts","gridOpts","titleHeight","_this$_getLabelSizes","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","_this$options5","_this$options5$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options6","isFullSize","fullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","translation","_this$options7","_this$options8","_this$options8$ticks","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","_this$options9","_titleArgs","_layers","_this10","tz","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","Error","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","_this11","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","ScatterController","_DatasetController7","_super9","_meta$data2","_getStartAndCountOfVi2","_this$_cachedMeta4","_this$options10","interaction","__proto__","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","el","getRange","lo","hi","evaluateInteractionItems","handler","_metasets$i","_binarySearch","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","getIntersectItems","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","_element$getProps","_getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","_box","_box$options","_box$options$stackWei","buildStacks","layouts","_iterator5","_step5","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","_updateDims","setBoxDims","placeBoxes","userPadding","_iterator6","_step6","autoPadding","addBox","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","updateConfig","BasicPlatform","_BasePlatform","_super10","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","_getRelativePosition","native","nodeListContains","nodeList","_iterator7","_step7","contains","createAttachObserver","observer","MutationObserver","entries","trigger","_iterator8","_step8","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","_iterator9","_step9","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","_BasePlatform2","_super11","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","PluginService","_init","notify","hook","_createDescriptors","_iterator10","_step10","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","_ref2","_iterator11","_step11","pluginOpts","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","_getResolver","getResolver","resolver","subPrefixes","needContext","subResolver","_iterator12","_step12","descriptorDefaults","_getResolver2","resolverCache","hasFunction","_descriptors2","isScriptable","isIndexable","_iterator13","_step13","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","_i3","_keys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","_this12","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","_this$options11","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","_this13","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_this14","buildOrUpdateControllers","newControllers","order","ControllerClass","_defaults$datasets$ty","_resetElements","_this15","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_this$getDatasetMeta","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","_this16","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","_iterator14","_step14","_step14$value","datasetCount","makeSet","changeSet","_this17","noArea","_this17$_layers","_idx","_updateDataset","_this$_resizeBeforeDr","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_this18","_add","_this19","_remove","detached","_this20","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","_this21","lastActive","_ref4","replay","hoverOptions","hover","deactivated","activated","_this22","eventFilter","_handleEvent","_this$_active","_getActiveElements","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","_Element2","_super12","_this23","_assertThisInitialized","chartX","chartY","_getAngleFromPoint2","_this$getProps2","rAdjust","betweenAngles","withinRadius","_this$getProps3","_this$options12","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","_pathVars","lineMethod","_ref5","_ref5$move","fastPathSegment","_pathVars2","_ref6","_ref6$move","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","_iterator15","_step15","usePath2D","LineElement","_Element3","_super13","_this24","_points","_segments","_pointsUpdated","interpolate","_interpolate","_segments$i","interpolated","_iterator16","_step16","capBezierPoints","inRange$1","_el$getProps","hitRadius","PointElement","_Element4","_super14","_this25","mouseX","mouseY","_this$getProps4","inXRange","inYRange","_this$getProps5","hoverRadius","getBarBounds","bar","_bar$getProps","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","_bar$getProps2","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","_Element5","_super15","_this26","_this$options13","_boundingRects","addRectPath","_this$getProps6","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","_data$a","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","_objectSpread","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","_iScale$getUserBounds","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","_getStartAndCountOfVi3","threshold","configurable","tpoints","_iterator17","_step17","_findSegmentEnd","_getBounds","targetSegments","_iterator18","_step18","tgt","subBounds","fillSources","_iterator19","_step19","fillSource","_getEdge","_pointsFromSegments","boundary","_ref7","_ref7$x","_ref7$y","linePoints","_ref8","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","_findPoint","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_source$scale","_drawfill","lineOpts","_ref9","_ref9$above","above","_ref9$below","doFill","clipVertical","clipY","lineLoop","_iterator20","_step20","_iterator21","_step21","_step21$value","src","_src$style","_src$style2","_src$style2$backgroun","notShape","clipBounds","interpolatedLineTo","targetLoop","_scale$chart$chartAre","_ref10","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_Element6","_super16","_this27","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","_this28","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","_this$options14","rtl","rtlHelper","_iterator22","_step22","hitbox","leftForLtr","_iterator23","_step23","_draw","_this29","defaultColor","fontColor","halfFontSize","cursor","_getBoxSize2","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","_chart$legend$options","Title","_Element7","_super17","_this30","_padding","textSize","_drawArgs","fontOpts","_this$_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","str","String","createTooltipItem","_controller$getLabelA","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","_chart$chartArea","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","_toTRBLCorners","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","_Element8","_super18","_this31","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","_this32","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","_this33","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","_toTRBLCorners2","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","_toTRBLCorners3","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_this34","_ref11","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_Scale","_super19","_this35","_startValue","_valueRange","_addedLabels","added","_iterator24","_step24","_step24$value","isFinite","_this$getUserBounds2","_this$getMinMax","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_ref12","rad","LinearScaleBase","_Scale2","_super20","_this36","_endValue","handleTickRangeOptions","_this$getUserBounds3","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","_LinearScaleBase","_super21","_this$getMinMax2","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_Scale3","_super22","_this37","_zero","_this$getMinMax3","_this$getUserBounds4","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","_scale$_pointLabelIte","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","_LinearScaleBase2","_super23","_this38","_this$getMinMax4","_this39","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","_this$_pointLabelItem","_this$options15","_this40","_this41","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup2","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_Scale4","_super24","_this42","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_this$getUserBounds5","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","_lookupByKey2","_table$lo","_table$hi","_lookupByKey3","_table$lo2","_table$hi2","span","TimeSeriesScale","_TimeScale","_super25","_this43","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\r\n * Chart.js v3.9.1\r\n * https://www.chartjs.org\r\n * (c) 2022 Chart.js Contributors\r\n * Released under the MIT License\r\n */\r\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\r\nexport { d as defaults } from './chunks/helpers.segment.mjs';\r\n\r\nclass Animator {\r\n  constructor() {\r\n    this._request = null;\r\n    this._charts = new Map();\r\n    this._running = false;\r\n    this._lastDate = undefined;\r\n  }\r\n  _notify(chart, anims, date, type) {\r\n    const callbacks = anims.listeners[type];\r\n    const numSteps = anims.duration;\r\n    callbacks.forEach(fn => fn({\r\n      chart,\r\n      initial: anims.initial,\r\n      numSteps,\r\n      currentStep: Math.min(date - anims.start, numSteps)\r\n    }));\r\n  }\r\n  _refresh() {\r\n    if (this._request) {\r\n      return;\r\n    }\r\n    this._running = true;\r\n    this._request = requestAnimFrame.call(window, () => {\r\n      this._update();\r\n      this._request = null;\r\n      if (this._running) {\r\n        this._refresh();\r\n      }\r\n    });\r\n  }\r\n  _update(date = Date.now()) {\r\n    let remaining = 0;\r\n    this._charts.forEach((anims, chart) => {\r\n      if (!anims.running || !anims.items.length) {\r\n        return;\r\n      }\r\n      const items = anims.items;\r\n      let i = items.length - 1;\r\n      let draw = false;\r\n      let item;\r\n      for (; i >= 0; --i) {\r\n        item = items[i];\r\n        if (item._active) {\r\n          if (item._total > anims.duration) {\r\n            anims.duration = item._total;\r\n          }\r\n          item.tick(date);\r\n          draw = true;\r\n        } else {\r\n          items[i] = items[items.length - 1];\r\n          items.pop();\r\n        }\r\n      }\r\n      if (draw) {\r\n        chart.draw();\r\n        this._notify(chart, anims, date, 'progress');\r\n      }\r\n      if (!items.length) {\r\n        anims.running = false;\r\n        this._notify(chart, anims, date, 'complete');\r\n        anims.initial = false;\r\n      }\r\n      remaining += items.length;\r\n    });\r\n    this._lastDate = date;\r\n    if (remaining === 0) {\r\n      this._running = false;\r\n    }\r\n  }\r\n  _getAnims(chart) {\r\n    const charts = this._charts;\r\n    let anims = charts.get(chart);\r\n    if (!anims) {\r\n      anims = {\r\n        running: false,\r\n        initial: true,\r\n        items: [],\r\n        listeners: {\r\n          complete: [],\r\n          progress: []\r\n        }\r\n      };\r\n      charts.set(chart, anims);\r\n    }\r\n    return anims;\r\n  }\r\n  listen(chart, event, cb) {\r\n    this._getAnims(chart).listeners[event].push(cb);\r\n  }\r\n  add(chart, items) {\r\n    if (!items || !items.length) {\r\n      return;\r\n    }\r\n    this._getAnims(chart).items.push(...items);\r\n  }\r\n  has(chart) {\r\n    return this._getAnims(chart).items.length > 0;\r\n  }\r\n  start(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims) {\r\n      return;\r\n    }\r\n    anims.running = true;\r\n    anims.start = Date.now();\r\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\r\n    this._refresh();\r\n  }\r\n  running(chart) {\r\n    if (!this._running) {\r\n      return false;\r\n    }\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.running || !anims.items.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  stop(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.items.length) {\r\n      return;\r\n    }\r\n    const items = anims.items;\r\n    let i = items.length - 1;\r\n    for (; i >= 0; --i) {\r\n      items[i].cancel();\r\n    }\r\n    anims.items = [];\r\n    this._notify(chart, anims, Date.now(), 'complete');\r\n  }\r\n  remove(chart) {\r\n    return this._charts.delete(chart);\r\n  }\r\n}\r\nvar animator = new Animator();\r\n\r\nconst transparent = 'transparent';\r\nconst interpolators = {\r\n  boolean(from, to, factor) {\r\n    return factor > 0.5 ? to : from;\r\n  },\r\n  color(from, to, factor) {\r\n    const c0 = color(from || transparent);\r\n    const c1 = c0.valid && color(to || transparent);\r\n    return c1 && c1.valid\r\n      ? c1.mix(c0, factor).hexString()\r\n      : to;\r\n  },\r\n  number(from, to, factor) {\r\n    return from + (to - from) * factor;\r\n  }\r\n};\r\nclass Animation {\r\n  constructor(cfg, target, prop, to) {\r\n    const currentValue = target[prop];\r\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n    const from = resolve([cfg.from, currentValue, to]);\r\n    this._active = true;\r\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n    this._easing = effects[cfg.easing] || effects.linear;\r\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n    this._duration = this._total = Math.floor(cfg.duration);\r\n    this._loop = !!cfg.loop;\r\n    this._target = target;\r\n    this._prop = prop;\r\n    this._from = from;\r\n    this._to = to;\r\n    this._promises = undefined;\r\n  }\r\n  active() {\r\n    return this._active;\r\n  }\r\n  update(cfg, to, date) {\r\n    if (this._active) {\r\n      this._notify(false);\r\n      const currentValue = this._target[this._prop];\r\n      const elapsed = date - this._start;\r\n      const remain = this._duration - elapsed;\r\n      this._start = date;\r\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\r\n      this._total += elapsed;\r\n      this._loop = !!cfg.loop;\r\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n      this._from = resolve([cfg.from, currentValue, to]);\r\n    }\r\n  }\r\n  cancel() {\r\n    if (this._active) {\r\n      this.tick(Date.now());\r\n      this._active = false;\r\n      this._notify(false);\r\n    }\r\n  }\r\n  tick(date) {\r\n    const elapsed = date - this._start;\r\n    const duration = this._duration;\r\n    const prop = this._prop;\r\n    const from = this._from;\r\n    const loop = this._loop;\r\n    const to = this._to;\r\n    let factor;\r\n    this._active = from !== to && (loop || (elapsed < duration));\r\n    if (!this._active) {\r\n      this._target[prop] = to;\r\n      this._notify(true);\r\n      return;\r\n    }\r\n    if (elapsed < 0) {\r\n      this._target[prop] = from;\r\n      return;\r\n    }\r\n    factor = (elapsed / duration) % 2;\r\n    factor = loop && factor > 1 ? 2 - factor : factor;\r\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\r\n    this._target[prop] = this._fn(from, to, factor);\r\n  }\r\n  wait() {\r\n    const promises = this._promises || (this._promises = []);\r\n    return new Promise((res, rej) => {\r\n      promises.push({res, rej});\r\n    });\r\n  }\r\n  _notify(resolved) {\r\n    const method = resolved ? 'res' : 'rej';\r\n    const promises = this._promises || [];\r\n    for (let i = 0; i < promises.length; i++) {\r\n      promises[i][method]();\r\n    }\r\n  }\r\n}\r\n\r\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\nconst colors = ['color', 'borderColor', 'backgroundColor'];\r\ndefaults.set('animation', {\r\n  delay: undefined,\r\n  duration: 1000,\r\n  easing: 'easeOutQuart',\r\n  fn: undefined,\r\n  from: undefined,\r\n  loop: undefined,\r\n  to: undefined,\r\n  type: undefined,\r\n});\r\nconst animationOptions = Object.keys(defaults.animation);\r\ndefaults.describe('animation', {\r\n  _fallback: false,\r\n  _indexable: false,\r\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n});\r\ndefaults.set('animations', {\r\n  colors: {\r\n    type: 'color',\r\n    properties: colors\r\n  },\r\n  numbers: {\r\n    type: 'number',\r\n    properties: numbers\r\n  },\r\n});\r\ndefaults.describe('animations', {\r\n  _fallback: 'animation',\r\n});\r\ndefaults.set('transitions', {\r\n  active: {\r\n    animation: {\r\n      duration: 400\r\n    }\r\n  },\r\n  resize: {\r\n    animation: {\r\n      duration: 0\r\n    }\r\n  },\r\n  show: {\r\n    animations: {\r\n      colors: {\r\n        from: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        duration: 0\r\n      },\r\n    }\r\n  },\r\n  hide: {\r\n    animations: {\r\n      colors: {\r\n        to: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        easing: 'linear',\r\n        fn: v => v | 0\r\n      },\r\n    }\r\n  }\r\n});\r\nclass Animations {\r\n  constructor(chart, config) {\r\n    this._chart = chart;\r\n    this._properties = new Map();\r\n    this.configure(config);\r\n  }\r\n  configure(config) {\r\n    if (!isObject(config)) {\r\n      return;\r\n    }\r\n    const animatedProps = this._properties;\r\n    Object.getOwnPropertyNames(config).forEach(key => {\r\n      const cfg = config[key];\r\n      if (!isObject(cfg)) {\r\n        return;\r\n      }\r\n      const resolved = {};\r\n      for (const option of animationOptions) {\r\n        resolved[option] = cfg[option];\r\n      }\r\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\r\n        if (prop === key || !animatedProps.has(prop)) {\r\n          animatedProps.set(prop, resolved);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  _animateOptions(target, values) {\r\n    const newOptions = values.options;\r\n    const options = resolveTargetOptions(target, newOptions);\r\n    if (!options) {\r\n      return [];\r\n    }\r\n    const animations = this._createAnimations(options, newOptions);\r\n    if (newOptions.$shared) {\r\n      awaitAll(target.options.$animations, newOptions).then(() => {\r\n        target.options = newOptions;\r\n      }, () => {\r\n      });\r\n    }\r\n    return animations;\r\n  }\r\n  _createAnimations(target, values) {\r\n    const animatedProps = this._properties;\r\n    const animations = [];\r\n    const running = target.$animations || (target.$animations = {});\r\n    const props = Object.keys(values);\r\n    const date = Date.now();\r\n    let i;\r\n    for (i = props.length - 1; i >= 0; --i) {\r\n      const prop = props[i];\r\n      if (prop.charAt(0) === '$') {\r\n        continue;\r\n      }\r\n      if (prop === 'options') {\r\n        animations.push(...this._animateOptions(target, values));\r\n        continue;\r\n      }\r\n      const value = values[prop];\r\n      let animation = running[prop];\r\n      const cfg = animatedProps.get(prop);\r\n      if (animation) {\r\n        if (cfg && animation.active()) {\r\n          animation.update(cfg, value, date);\r\n          continue;\r\n        } else {\r\n          animation.cancel();\r\n        }\r\n      }\r\n      if (!cfg || !cfg.duration) {\r\n        target[prop] = value;\r\n        continue;\r\n      }\r\n      running[prop] = animation = new Animation(cfg, target, prop, value);\r\n      animations.push(animation);\r\n    }\r\n    return animations;\r\n  }\r\n  update(target, values) {\r\n    if (this._properties.size === 0) {\r\n      Object.assign(target, values);\r\n      return;\r\n    }\r\n    const animations = this._createAnimations(target, values);\r\n    if (animations.length) {\r\n      animator.add(this._chart, animations);\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction awaitAll(animations, properties) {\r\n  const running = [];\r\n  const keys = Object.keys(properties);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const anim = animations[keys[i]];\r\n    if (anim && anim.active()) {\r\n      running.push(anim.wait());\r\n    }\r\n  }\r\n  return Promise.all(running);\r\n}\r\nfunction resolveTargetOptions(target, newOptions) {\r\n  if (!newOptions) {\r\n    return;\r\n  }\r\n  let options = target.options;\r\n  if (!options) {\r\n    target.options = newOptions;\r\n    return;\r\n  }\r\n  if (options.$shared) {\r\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\r\n  }\r\n  return options;\r\n}\r\n\r\nfunction scaleClip(scale, allowedOverflow) {\r\n  const opts = scale && scale.options || {};\r\n  const reverse = opts.reverse;\r\n  const min = opts.min === undefined ? allowedOverflow : 0;\r\n  const max = opts.max === undefined ? allowedOverflow : 0;\r\n  return {\r\n    start: reverse ? max : min,\r\n    end: reverse ? min : max\r\n  };\r\n}\r\nfunction defaultClip(xScale, yScale, allowedOverflow) {\r\n  if (allowedOverflow === false) {\r\n    return false;\r\n  }\r\n  const x = scaleClip(xScale, allowedOverflow);\r\n  const y = scaleClip(yScale, allowedOverflow);\r\n  return {\r\n    top: y.end,\r\n    right: x.end,\r\n    bottom: y.start,\r\n    left: x.start\r\n  };\r\n}\r\nfunction toClip(value) {\r\n  let t, r, b, l;\r\n  if (isObject(value)) {\r\n    t = value.top;\r\n    r = value.right;\r\n    b = value.bottom;\r\n    l = value.left;\r\n  } else {\r\n    t = r = b = l = value;\r\n  }\r\n  return {\r\n    top: t,\r\n    right: r,\r\n    bottom: b,\r\n    left: l,\r\n    disabled: value === false\r\n  };\r\n}\r\nfunction getSortedDatasetIndices(chart, filterVisible) {\r\n  const keys = [];\r\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n  let i, ilen;\r\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    keys.push(metasets[i].index);\r\n  }\r\n  return keys;\r\n}\r\nfunction applyStack(stack, value, dsIndex, options = {}) {\r\n  const keys = stack.keys;\r\n  const singleMode = options.mode === 'single';\r\n  let i, ilen, datasetIndex, otherValue;\r\n  if (value === null) {\r\n    return;\r\n  }\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    datasetIndex = +keys[i];\r\n    if (datasetIndex === dsIndex) {\r\n      if (options.all) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    otherValue = stack.values[datasetIndex];\r\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\r\n      value += otherValue;\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction convertObjectDataToArray(data) {\r\n  const keys = Object.keys(data);\r\n  const adata = new Array(keys.length);\r\n  let i, ilen, key;\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    key = keys[i];\r\n    adata[i] = {\r\n      x: key,\r\n      y: data[key]\r\n    };\r\n  }\r\n  return adata;\r\n}\r\nfunction isStacked(scale, meta) {\r\n  const stacked = scale && scale.options.stacked;\r\n  return stacked || (stacked === undefined && meta.stack !== undefined);\r\n}\r\nfunction getStackKey(indexScale, valueScale, meta) {\r\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\r\n}\r\nfunction getUserBounds(scale) {\r\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\r\n  return {\r\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n  };\r\n}\r\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\r\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n  return subStack[indexValue] || (subStack[indexValue] = {});\r\n}\r\nfunction getLastIndexInStack(stack, vScale, positive, type) {\r\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\r\n    const value = stack[meta.index];\r\n    if ((positive && value > 0) || (!positive && value < 0)) {\r\n      return meta.index;\r\n    }\r\n  }\r\n  return null;\r\n}\r\nfunction updateStacks(controller, parsed) {\r\n  const {chart, _cachedMeta: meta} = controller;\r\n  const stacks = chart._stacks || (chart._stacks = {});\r\n  const {iScale, vScale, index: datasetIndex} = meta;\r\n  const iAxis = iScale.axis;\r\n  const vAxis = vScale.axis;\r\n  const key = getStackKey(iScale, vScale, meta);\r\n  const ilen = parsed.length;\r\n  let stack;\r\n  for (let i = 0; i < ilen; ++i) {\r\n    const item = parsed[i];\r\n    const {[iAxis]: index, [vAxis]: value} = item;\r\n    const itemStacks = item._stacks || (item._stacks = {});\r\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n    stack[datasetIndex] = value;\r\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\r\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\r\n  }\r\n}\r\nfunction getFirstScaleId(chart, axis) {\r\n  const scales = chart.scales;\r\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\r\n}\r\nfunction createDatasetContext(parent, index) {\r\n  return createContext(parent,\r\n    {\r\n      active: false,\r\n      dataset: undefined,\r\n      datasetIndex: index,\r\n      index,\r\n      mode: 'default',\r\n      type: 'dataset'\r\n    }\r\n  );\r\n}\r\nfunction createDataContext(parent, index, element) {\r\n  return createContext(parent, {\r\n    active: false,\r\n    dataIndex: index,\r\n    parsed: undefined,\r\n    raw: undefined,\r\n    element,\r\n    index,\r\n    mode: 'default',\r\n    type: 'data'\r\n  });\r\n}\r\nfunction clearStacks(meta, items) {\r\n  const datasetIndex = meta.controller.index;\r\n  const axis = meta.vScale && meta.vScale.axis;\r\n  if (!axis) {\r\n    return;\r\n  }\r\n  items = items || meta._parsed;\r\n  for (const parsed of items) {\r\n    const stacks = parsed._stacks;\r\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\r\n      return;\r\n    }\r\n    delete stacks[axis][datasetIndex];\r\n  }\r\n}\r\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\r\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\r\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\r\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\r\nclass DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    this.chart = chart;\r\n    this._ctx = chart.ctx;\r\n    this.index = datasetIndex;\r\n    this._cachedDataOpts = {};\r\n    this._cachedMeta = this.getMeta();\r\n    this._type = this._cachedMeta.type;\r\n    this.options = undefined;\r\n    this._parsing = false;\r\n    this._data = undefined;\r\n    this._objectData = undefined;\r\n    this._sharedOptions = undefined;\r\n    this._drawStart = undefined;\r\n    this._drawCount = undefined;\r\n    this.enableOptionSharing = false;\r\n    this.supportsDecimation = false;\r\n    this.$context = undefined;\r\n    this._syncList = [];\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    const meta = this._cachedMeta;\r\n    this.configure();\r\n    this.linkScales();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    this.addElements();\r\n  }\r\n  updateIndex(datasetIndex) {\r\n    if (this.index !== datasetIndex) {\r\n      clearStacks(this._cachedMeta);\r\n    }\r\n    this.index = datasetIndex;\r\n  }\r\n  linkScales() {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\r\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n    const indexAxis = meta.indexAxis;\r\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n    meta.xScale = this.getScaleForId(xid);\r\n    meta.yScale = this.getScaleForId(yid);\r\n    meta.rScale = this.getScaleForId(rid);\r\n    meta.iScale = this.getScaleForId(iid);\r\n    meta.vScale = this.getScaleForId(vid);\r\n  }\r\n  getDataset() {\r\n    return this.chart.data.datasets[this.index];\r\n  }\r\n  getMeta() {\r\n    return this.chart.getDatasetMeta(this.index);\r\n  }\r\n  getScaleForId(scaleID) {\r\n    return this.chart.scales[scaleID];\r\n  }\r\n  _getOtherScale(scale) {\r\n    const meta = this._cachedMeta;\r\n    return scale === meta.iScale\r\n      ? meta.vScale\r\n      : meta.iScale;\r\n  }\r\n  reset() {\r\n    this._update('reset');\r\n  }\r\n  _destroy() {\r\n    const meta = this._cachedMeta;\r\n    if (this._data) {\r\n      unlistenArrayEvents(this._data, this);\r\n    }\r\n    if (meta._stacked) {\r\n      clearStacks(meta);\r\n    }\r\n  }\r\n  _dataCheck() {\r\n    const dataset = this.getDataset();\r\n    const data = dataset.data || (dataset.data = []);\r\n    const _data = this._data;\r\n    if (isObject(data)) {\r\n      this._data = convertObjectDataToArray(data);\r\n    } else if (_data !== data) {\r\n      if (_data) {\r\n        unlistenArrayEvents(_data, this);\r\n        const meta = this._cachedMeta;\r\n        clearStacks(meta);\r\n        meta._parsed = [];\r\n      }\r\n      if (data && Object.isExtensible(data)) {\r\n        listenArrayEvents(data, this);\r\n      }\r\n      this._syncList = [];\r\n      this._data = data;\r\n    }\r\n  }\r\n  addElements() {\r\n    const meta = this._cachedMeta;\r\n    this._dataCheck();\r\n    if (this.datasetElementType) {\r\n      meta.dataset = new this.datasetElementType();\r\n    }\r\n  }\r\n  buildOrUpdateElements(resetNewElements) {\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    let stackChanged = false;\r\n    this._dataCheck();\r\n    const oldStacked = meta._stacked;\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    if (meta.stack !== dataset.stack) {\r\n      stackChanged = true;\r\n      clearStacks(meta);\r\n      meta.stack = dataset.stack;\r\n    }\r\n    this._resyncElements(resetNewElements);\r\n    if (stackChanged || oldStacked !== meta._stacked) {\r\n      updateStacks(this, meta._parsed);\r\n    }\r\n  }\r\n  configure() {\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetScopeKeys(this._type);\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\r\n    this.options = config.createResolver(scopes, this.getContext());\r\n    this._parsing = this.options.parsing;\r\n    this._cachedDataOpts = {};\r\n  }\r\n  parse(start, count) {\r\n    const {_cachedMeta: meta, _data: data} = this;\r\n    const {iScale, _stacked} = meta;\r\n    const iAxis = iScale.axis;\r\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n    let prev = start > 0 && meta._parsed[start - 1];\r\n    let i, cur, parsed;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n      meta._sorted = true;\r\n      parsed = data;\r\n    } else {\r\n      if (isArray(data[start])) {\r\n        parsed = this.parseArrayData(meta, data, start, count);\r\n      } else if (isObject(data[start])) {\r\n        parsed = this.parseObjectData(meta, data, start, count);\r\n      } else {\r\n        parsed = this.parsePrimitiveData(meta, data, start, count);\r\n      }\r\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\r\n      for (i = 0; i < count; ++i) {\r\n        meta._parsed[i + start] = cur = parsed[i];\r\n        if (sorted) {\r\n          if (isNotInOrderComparedToPrev()) {\r\n            sorted = false;\r\n          }\r\n          prev = cur;\r\n        }\r\n      }\r\n      meta._sorted = sorted;\r\n    }\r\n    if (_stacked) {\r\n      updateStacks(this, parsed);\r\n    }\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const labels = iScale.getLabels();\r\n    const singleScale = iScale === vScale;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      parsed[i] = {\r\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n        [vAxis]: vScale.parse(data[index], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(item[0], index),\r\n        y: yScale.parse(item[1], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  getParsed(index) {\r\n    return this._cachedMeta._parsed[index];\r\n  }\r\n  getDataElement(index) {\r\n    return this._cachedMeta.data[index];\r\n  }\r\n  applyStack(scale, parsed, mode) {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const value = parsed[scale.axis];\r\n    const stack = {\r\n      keys: getSortedDatasetIndices(chart, true),\r\n      values: parsed._stacks[scale.axis]\r\n    };\r\n    return applyStack(stack, value, meta.index, {mode});\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    const parsedValue = parsed[scale.axis];\r\n    let value = parsedValue === null ? NaN : parsedValue;\r\n    const values = stack && parsed._stacks[scale.axis];\r\n    if (stack && values) {\r\n      stack.values = values;\r\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\r\n    }\r\n    range.min = Math.min(range.min, value);\r\n    range.max = Math.max(range.max, value);\r\n  }\r\n  getMinMax(scale, canStack) {\r\n    const meta = this._cachedMeta;\r\n    const _parsed = meta._parsed;\r\n    const sorted = meta._sorted && scale === meta.iScale;\r\n    const ilen = _parsed.length;\r\n    const otherScale = this._getOtherScale(scale);\r\n    const stack = createStack(canStack, meta, this.chart);\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\r\n    let i, parsed;\r\n    function _skip() {\r\n      parsed = _parsed[i];\r\n      const otherValue = parsed[otherScale.axis];\r\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\r\n    }\r\n    for (i = 0; i < ilen; ++i) {\r\n      if (_skip()) {\r\n        continue;\r\n      }\r\n      this.updateRangeFromParsed(range, scale, parsed, stack);\r\n      if (sorted) {\r\n        break;\r\n      }\r\n    }\r\n    if (sorted) {\r\n      for (i = ilen - 1; i >= 0; --i) {\r\n        if (_skip()) {\r\n          continue;\r\n        }\r\n        this.updateRangeFromParsed(range, scale, parsed, stack);\r\n        break;\r\n      }\r\n    }\r\n    return range;\r\n  }\r\n  getAllParsedValues(scale) {\r\n    const parsed = this._cachedMeta._parsed;\r\n    const values = [];\r\n    let i, ilen, value;\r\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\r\n      value = parsed[i][scale.axis];\r\n      if (isNumberFinite(value)) {\r\n        values.push(value);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n  getMaxOverflow() {\r\n    return false;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const vScale = meta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n    };\r\n  }\r\n  _update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.update(mode || 'default');\r\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\r\n  }\r\n  update(mode) {}\r\n  draw() {\r\n    const ctx = this._ctx;\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const elements = meta.data || [];\r\n    const area = chart.chartArea;\r\n    const active = [];\r\n    const start = this._drawStart || 0;\r\n    const count = this._drawCount || (elements.length - start);\r\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\r\n    let i;\r\n    if (meta.dataset) {\r\n      meta.dataset.draw(ctx, area, start, count);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const element = elements[i];\r\n      if (element.hidden) {\r\n        continue;\r\n      }\r\n      if (element.active && drawActiveElementsOnTop) {\r\n        active.push(element);\r\n      } else {\r\n        element.draw(ctx, area);\r\n      }\r\n    }\r\n    for (i = 0; i < active.length; ++i) {\r\n      active[i].draw(ctx, area);\r\n    }\r\n  }\r\n  getStyle(index, active) {\r\n    const mode = active ? 'active' : 'default';\r\n    return index === undefined && this._cachedMeta.dataset\r\n      ? this.resolveDatasetElementOptions(mode)\r\n      : this.resolveDataElementOptions(index || 0, mode);\r\n  }\r\n  getContext(index, active, mode) {\r\n    const dataset = this.getDataset();\r\n    let context;\r\n    if (index >= 0 && index < this._cachedMeta.data.length) {\r\n      const element = this._cachedMeta.data[index];\r\n      context = element.$context ||\r\n        (element.$context = createDataContext(this.getContext(), index, element));\r\n      context.parsed = this.getParsed(index);\r\n      context.raw = dataset.data[index];\r\n      context.index = context.dataIndex = index;\r\n    } else {\r\n      context = this.$context ||\r\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\r\n      context.dataset = dataset;\r\n      context.index = context.datasetIndex = this.index;\r\n    }\r\n    context.active = !!active;\r\n    context.mode = mode;\r\n    return context;\r\n  }\r\n  resolveDatasetElementOptions(mode) {\r\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n  }\r\n  _resolveElementOptions(elementType, mode = 'default', index) {\r\n    const active = mode === 'active';\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = elementType + '-' + mode;\r\n    const cached = cache[cacheKey];\r\n    const sharing = this.enableOptionSharing && defined(index);\r\n    if (cached) {\r\n      return cloneIfNotShared(cached, sharing);\r\n    }\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\r\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n    const names = Object.keys(defaults.elements[elementType]);\r\n    const context = () => this.getContext(index, active);\r\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n    if (values.$shared) {\r\n      values.$shared = sharing;\r\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n    }\r\n    return values;\r\n  }\r\n  _resolveAnimations(index, transition, active) {\r\n    const chart = this.chart;\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = `animation-${transition}`;\r\n    const cached = cache[cacheKey];\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    let options;\r\n    if (chart.options.animation !== false) {\r\n      const config = this.chart.config;\r\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\r\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\r\n    }\r\n    const animations = new Animations(chart, options && options.animations);\r\n    if (options && options._cacheable) {\r\n      cache[cacheKey] = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getSharedOptions(options) {\r\n    if (!options.$shared) {\r\n      return;\r\n    }\r\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n  }\r\n  includeOptions(mode, sharedOptions) {\r\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n  }\r\n  _getSharedOptions(start, mode) {\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const previouslySharedOptions = this._sharedOptions;\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n    return {sharedOptions, includeOptions};\r\n  }\r\n  updateElement(element, index, properties, mode) {\r\n    if (isDirectUpdateMode(mode)) {\r\n      Object.assign(element, properties);\r\n    } else {\r\n      this._resolveAnimations(index, mode).update(element, properties);\r\n    }\r\n  }\r\n  updateSharedOptions(sharedOptions, mode, newOptions) {\r\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n    }\r\n  }\r\n  _setStyle(element, index, mode, active) {\r\n    element.active = active;\r\n    const options = this.getStyle(index, active);\r\n    this._resolveAnimations(index, mode, active).update(element, {\r\n      options: (!active && this.getSharedOptions(options)) || options\r\n    });\r\n  }\r\n  removeHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', false);\r\n  }\r\n  setHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', true);\r\n  }\r\n  _removeDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', false);\r\n    }\r\n  }\r\n  _setDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', true);\r\n    }\r\n  }\r\n  _resyncElements(resetNewElements) {\r\n    const data = this._data;\r\n    const elements = this._cachedMeta.data;\r\n    for (const [method, arg1, arg2] of this._syncList) {\r\n      this[method](arg1, arg2);\r\n    }\r\n    this._syncList = [];\r\n    const numMeta = elements.length;\r\n    const numData = data.length;\r\n    const count = Math.min(numData, numMeta);\r\n    if (count) {\r\n      this.parse(0, count);\r\n    }\r\n    if (numData > numMeta) {\r\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n    } else if (numData < numMeta) {\r\n      this._removeElements(numData, numMeta - numData);\r\n    }\r\n  }\r\n  _insertElements(start, count, resetNewElements = true) {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data;\r\n    const end = start + count;\r\n    let i;\r\n    const move = (arr) => {\r\n      arr.length += count;\r\n      for (i = arr.length - 1; i >= end; i--) {\r\n        arr[i] = arr[i - count];\r\n      }\r\n    };\r\n    move(data);\r\n    for (i = start; i < end; ++i) {\r\n      data[i] = new this.dataElementType();\r\n    }\r\n    if (this._parsing) {\r\n      move(meta._parsed);\r\n    }\r\n    this.parse(start, count);\r\n    if (resetNewElements) {\r\n      this.updateElements(data, start, count, 'reset');\r\n    }\r\n  }\r\n  updateElements(element, start, count, mode) {}\r\n  _removeElements(start, count) {\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing) {\r\n      const removed = meta._parsed.splice(start, count);\r\n      if (meta._stacked) {\r\n        clearStacks(meta, removed);\r\n      }\r\n    }\r\n    meta.data.splice(start, count);\r\n  }\r\n  _sync(args) {\r\n    if (this._parsing) {\r\n      this._syncList.push(args);\r\n    } else {\r\n      const [method, arg1, arg2] = args;\r\n      this[method](arg1, arg2);\r\n    }\r\n    this.chart._dataChanges.push([this.index, ...args]);\r\n  }\r\n  _onDataPush() {\r\n    const count = arguments.length;\r\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\r\n  }\r\n  _onDataPop() {\r\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\r\n  }\r\n  _onDataShift() {\r\n    this._sync(['_removeElements', 0, 1]);\r\n  }\r\n  _onDataSplice(start, count) {\r\n    if (count) {\r\n      this._sync(['_removeElements', start, count]);\r\n    }\r\n    const newCount = arguments.length - 2;\r\n    if (newCount) {\r\n      this._sync(['_insertElements', start, newCount]);\r\n    }\r\n  }\r\n  _onDataUnshift() {\r\n    this._sync(['_insertElements', 0, arguments.length]);\r\n  }\r\n}\r\nDatasetController.defaults = {};\r\nDatasetController.prototype.datasetElementType = null;\r\nDatasetController.prototype.dataElementType = null;\r\n\r\nfunction getAllScaleValues(scale, type) {\r\n  if (!scale._cache.$bar) {\r\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\r\n    let values = [];\r\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\r\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\r\n    }\r\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\r\n  }\r\n  return scale._cache.$bar;\r\n}\r\nfunction computeMinSampleSize(meta) {\r\n  const scale = meta.iScale;\r\n  const values = getAllScaleValues(scale, meta.type);\r\n  let min = scale._length;\r\n  let i, ilen, curr, prev;\r\n  const updateMinAndPrev = () => {\r\n    if (curr === 32767 || curr === -32768) {\r\n      return;\r\n    }\r\n    if (defined(prev)) {\r\n      min = Math.min(min, Math.abs(curr - prev) || min);\r\n    }\r\n    prev = curr;\r\n  };\r\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForValue(values[i]);\r\n    updateMinAndPrev();\r\n  }\r\n  prev = undefined;\r\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForTick(i);\r\n    updateMinAndPrev();\r\n  }\r\n  return min;\r\n}\r\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n  const thickness = options.barThickness;\r\n  let size, ratio;\r\n  if (isNullOrUndef(thickness)) {\r\n    size = ruler.min * options.categoryPercentage;\r\n    ratio = options.barPercentage;\r\n  } else {\r\n    size = thickness * stackCount;\r\n    ratio = 1;\r\n  }\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio,\r\n    start: ruler.pixels[index] - (size / 2)\r\n  };\r\n}\r\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n  const pixels = ruler.pixels;\r\n  const curr = pixels[index];\r\n  let prev = index > 0 ? pixels[index - 1] : null;\r\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n  const percent = options.categoryPercentage;\r\n  if (prev === null) {\r\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n  }\r\n  if (next === null) {\r\n    next = curr + curr - prev;\r\n  }\r\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n  const size = Math.abs(next - prev) / 2 * percent;\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio: options.barPercentage,\r\n    start\r\n  };\r\n}\r\nfunction parseFloatBar(entry, item, vScale, i) {\r\n  const startValue = vScale.parse(entry[0], i);\r\n  const endValue = vScale.parse(entry[1], i);\r\n  const min = Math.min(startValue, endValue);\r\n  const max = Math.max(startValue, endValue);\r\n  let barStart = min;\r\n  let barEnd = max;\r\n  if (Math.abs(min) > Math.abs(max)) {\r\n    barStart = max;\r\n    barEnd = min;\r\n  }\r\n  item[vScale.axis] = barEnd;\r\n  item._custom = {\r\n    barStart,\r\n    barEnd,\r\n    start: startValue,\r\n    end: endValue,\r\n    min,\r\n    max\r\n  };\r\n}\r\nfunction parseValue(entry, item, vScale, i) {\r\n  if (isArray(entry)) {\r\n    parseFloatBar(entry, item, vScale, i);\r\n  } else {\r\n    item[vScale.axis] = vScale.parse(entry, i);\r\n  }\r\n  return item;\r\n}\r\nfunction parseArrayOrPrimitive(meta, data, start, count) {\r\n  const iScale = meta.iScale;\r\n  const vScale = meta.vScale;\r\n  const labels = iScale.getLabels();\r\n  const singleScale = iScale === vScale;\r\n  const parsed = [];\r\n  let i, ilen, item, entry;\r\n  for (i = start, ilen = start + count; i < ilen; ++i) {\r\n    entry = data[i];\r\n    item = {};\r\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n    parsed.push(parseValue(entry, item, vScale, i));\r\n  }\r\n  return parsed;\r\n}\r\nfunction isFloatBar(custom) {\r\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n}\r\nfunction barSign(size, vScale, actualBase) {\r\n  if (size !== 0) {\r\n    return sign(size);\r\n  }\r\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\r\n}\r\nfunction borderProps(properties) {\r\n  let reverse, start, end, top, bottom;\r\n  if (properties.horizontal) {\r\n    reverse = properties.base > properties.x;\r\n    start = 'left';\r\n    end = 'right';\r\n  } else {\r\n    reverse = properties.base < properties.y;\r\n    start = 'bottom';\r\n    end = 'top';\r\n  }\r\n  if (reverse) {\r\n    top = 'end';\r\n    bottom = 'start';\r\n  } else {\r\n    top = 'start';\r\n    bottom = 'end';\r\n  }\r\n  return {start, end, reverse, top, bottom};\r\n}\r\nfunction setBorderSkipped(properties, options, stack, index) {\r\n  let edge = options.borderSkipped;\r\n  const res = {};\r\n  if (!edge) {\r\n    properties.borderSkipped = res;\r\n    return;\r\n  }\r\n  if (edge === true) {\r\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\r\n    return;\r\n  }\r\n  const {start, end, reverse, top, bottom} = borderProps(properties);\r\n  if (edge === 'middle' && stack) {\r\n    properties.enableBorderRadius = true;\r\n    if ((stack._top || 0) === index) {\r\n      edge = top;\r\n    } else if ((stack._bottom || 0) === index) {\r\n      edge = bottom;\r\n    } else {\r\n      res[parseEdge(bottom, start, end, reverse)] = true;\r\n      edge = top;\r\n    }\r\n  }\r\n  res[parseEdge(edge, start, end, reverse)] = true;\r\n  properties.borderSkipped = res;\r\n}\r\nfunction parseEdge(edge, a, b, reverse) {\r\n  if (reverse) {\r\n    edge = swap(edge, a, b);\r\n    edge = startEnd(edge, b, a);\r\n  } else {\r\n    edge = startEnd(edge, a, b);\r\n  }\r\n  return edge;\r\n}\r\nfunction swap(orig, v1, v2) {\r\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n}\r\nfunction startEnd(v, start, end) {\r\n  return v === 'start' ? start : v === 'end' ? end : v;\r\n}\r\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\r\n  properties.inflateAmount = inflateAmount === 'auto'\r\n    ? ratio === 1 ? 0.33 : 0\r\n    : inflateAmount;\r\n}\r\nclass BarController extends DatasetController {\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const parsed = [];\r\n    let i, ilen, item, obj;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      obj = data[i];\r\n      item = {};\r\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n    }\r\n    return parsed;\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    super.updateRangeFromParsed(range, scale, parsed, stack);\r\n    const custom = parsed._custom;\r\n    if (custom && scale === this._cachedMeta.vScale) {\r\n      range.min = Math.min(range.min, custom.min);\r\n      range.max = Math.max(range.max, custom.max);\r\n    }\r\n  }\r\n  getMaxOverflow() {\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {iScale, vScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const value = isFloatBar(custom)\r\n      ? '[' + custom.start + ', ' + custom.end + ']'\r\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n    return {\r\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n      value\r\n    };\r\n  }\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n    const meta = this._cachedMeta;\r\n    meta.stack = this.getDataset().stack;\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.updateElements(meta.data, 0, meta.data.length, mode);\r\n  }\r\n  updateElements(bars, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {index, _cachedMeta: {vScale}} = this;\r\n    const base = vScale.getBasePixel();\r\n    const horizontal = vScale.isHorizontal();\r\n    const ruler = this._getRuler();\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    for (let i = start; i < start + count; i++) {\r\n      const parsed = this.getParsed(i);\r\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\r\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\r\n      const stack = (parsed._stacks || {})[vScale.axis];\r\n      const properties = {\r\n        horizontal,\r\n        base: vpixels.base,\r\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\r\n        x: horizontal ? vpixels.head : ipixels.center,\r\n        y: horizontal ? ipixels.center : vpixels.head,\r\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\r\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\r\n      }\r\n      const options = properties.options || bars[i].options;\r\n      setBorderSkipped(properties, options, stack, index);\r\n      setInflateAmount(properties, options, ruler.ratio);\r\n      this.updateElement(bars[i], i, properties, mode);\r\n    }\r\n  }\r\n  _getStacks(last, dataIndex) {\r\n    const {iScale} = this._cachedMeta;\r\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\r\n      .filter(meta => meta.controller.options.grouped);\r\n    const stacked = iScale.options.stacked;\r\n    const stacks = [];\r\n    const skipNull = (meta) => {\r\n      const parsed = meta.controller.getParsed(dataIndex);\r\n      const val = parsed && parsed[meta.vScale.axis];\r\n      if (isNullOrUndef(val) || isNaN(val)) {\r\n        return true;\r\n      }\r\n    };\r\n    for (const meta of metasets) {\r\n      if (dataIndex !== undefined && skipNull(meta)) {\r\n        continue;\r\n      }\r\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\r\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\r\n        stacks.push(meta.stack);\r\n      }\r\n      if (meta.index === last) {\r\n        break;\r\n      }\r\n    }\r\n    if (!stacks.length) {\r\n      stacks.push(undefined);\r\n    }\r\n    return stacks;\r\n  }\r\n  _getStackCount(index) {\r\n    return this._getStacks(undefined, index).length;\r\n  }\r\n  _getStackIndex(datasetIndex, name, dataIndex) {\r\n    const stacks = this._getStacks(datasetIndex, dataIndex);\r\n    const index = (name !== undefined)\r\n      ? stacks.indexOf(name)\r\n      : -1;\r\n    return (index === -1)\r\n      ? stacks.length - 1\r\n      : index;\r\n  }\r\n  _getRuler() {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const pixels = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\r\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\r\n    }\r\n    const barThickness = opts.barThickness;\r\n    const min = barThickness || computeMinSampleSize(meta);\r\n    return {\r\n      min,\r\n      pixels,\r\n      start: iScale._startPixel,\r\n      end: iScale._endPixel,\r\n      stackCount: this._getStackCount(),\r\n      scale: iScale,\r\n      grouped: opts.grouped,\r\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n    };\r\n  }\r\n  _calculateBarValuePixels(index) {\r\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\r\n    const actualBase = baseValue || 0;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const floating = isFloatBar(custom);\r\n    let value = parsed[vScale.axis];\r\n    let start = 0;\r\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\r\n    let head, size;\r\n    if (length !== value) {\r\n      start = length - value;\r\n      length = value;\r\n    }\r\n    if (floating) {\r\n      value = custom.barStart;\r\n      length = custom.barEnd - custom.barStart;\r\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n        start = 0;\r\n      }\r\n      start += value;\r\n    }\r\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n    let base = vScale.getPixelForValue(startValue);\r\n    if (this.chart.getDataVisibility(index)) {\r\n      head = vScale.getPixelForValue(start + length);\r\n    } else {\r\n      head = base;\r\n    }\r\n    size = head - base;\r\n    if (Math.abs(size) < minBarLength) {\r\n      size = barSign(size, vScale, actualBase) * minBarLength;\r\n      if (value === actualBase) {\r\n        base -= size / 2;\r\n      }\r\n      const startPixel = vScale.getPixelForDecimal(0);\r\n      const endPixel = vScale.getPixelForDecimal(1);\r\n      const min = Math.min(startPixel, endPixel);\r\n      const max = Math.max(startPixel, endPixel);\r\n      base = Math.max(Math.min(base, max), min);\r\n      head = base + size;\r\n    }\r\n    if (base === vScale.getPixelForValue(actualBase)) {\r\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\r\n      base += halfGrid;\r\n      size -= halfGrid;\r\n    }\r\n    return {\r\n      size,\r\n      base,\r\n      head,\r\n      center: head + size / 2\r\n    };\r\n  }\r\n  _calculateBarIndexPixels(index, ruler) {\r\n    const scale = ruler.scale;\r\n    const options = this.options;\r\n    const skipNull = options.skipNull;\r\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n    let center, size;\r\n    if (ruler.grouped) {\r\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\r\n      const range = options.barThickness === 'flex'\r\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\r\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\r\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\r\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n    } else {\r\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\r\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n    }\r\n    return {\r\n      base: center - size / 2,\r\n      head: center + size / 2,\r\n      center,\r\n      size\r\n    };\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    const vScale = meta.vScale;\r\n    const rects = meta.data;\r\n    const ilen = rects.length;\r\n    let i = 0;\r\n    for (; i < ilen; ++i) {\r\n      if (this.getParsed(i)[vScale.axis] !== null) {\r\n        rects[i].draw(this._ctx);\r\n      }\r\n    }\r\n  }\r\n}\r\nBarController.id = 'bar';\r\nBarController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'bar',\r\n  categoryPercentage: 0.8,\r\n  barPercentage: 0.9,\r\n  grouped: true,\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'base', 'width', 'height']\r\n    }\r\n  }\r\n};\r\nBarController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n      offset: true,\r\n      grid: {\r\n        offset: true\r\n      }\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n      beginAtZero: true,\r\n    }\r\n  }\r\n};\r\n\r\nclass BubbleController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const parsed = super.parseArrayData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const parsed = super.parseObjectData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n  getMaxOverflow() {\r\n    const data = this._cachedMeta.data;\r\n    let max = 0;\r\n    for (let i = data.length - 1; i >= 0; --i) {\r\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n    }\r\n    return max > 0 && max;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {xScale, yScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const x = xScale.getLabelForValue(parsed.x);\r\n    const y = yScale.getLabelForValue(parsed.y);\r\n    const r = parsed._custom;\r\n    return {\r\n      label: meta.label,\r\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n    };\r\n  }\r\n  update(mode) {\r\n    const points = this._cachedMeta.data;\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale} = this._cachedMeta;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const parsed = !reset && this.getParsed(i);\r\n      const properties = {};\r\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\r\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n        if (reset) {\r\n          properties.options.radius = 0;\r\n        }\r\n      }\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    const parsed = this.getParsed(index);\r\n    let values = super.resolveDataElementOptions(index, mode);\r\n    if (values.$shared) {\r\n      values = Object.assign({}, values, {$shared: false});\r\n    }\r\n    const radius = values.radius;\r\n    if (mode !== 'active') {\r\n      values.radius = 0;\r\n    }\r\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n    return values;\r\n  }\r\n}\r\nBubbleController.id = 'bubble';\r\nBubbleController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'borderWidth', 'radius']\r\n    }\r\n  }\r\n};\r\nBubbleController.overrides = {\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction getRatioAndOffset(rotation, circumference, cutout) {\r\n  let ratioX = 1;\r\n  let ratioY = 1;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n  if (circumference < TAU) {\r\n    const startAngle = rotation;\r\n    const endAngle = startAngle + circumference;\r\n    const startX = Math.cos(startAngle);\r\n    const startY = Math.sin(startAngle);\r\n    const endX = Math.cos(endAngle);\r\n    const endY = Math.sin(endAngle);\r\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n    const maxX = calcMax(0, startX, endX);\r\n    const maxY = calcMax(HALF_PI, startY, endY);\r\n    const minX = calcMin(PI, startX, endX);\r\n    const minY = calcMin(PI + HALF_PI, startY, endY);\r\n    ratioX = (maxX - minX) / 2;\r\n    ratioY = (maxY - minY) / 2;\r\n    offsetX = -(maxX + minX) / 2;\r\n    offsetY = -(maxY + minY) / 2;\r\n  }\r\n  return {ratioX, ratioY, offsetX, offsetY};\r\n}\r\nclass DoughnutController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.enableOptionSharing = true;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.offsetX = undefined;\r\n    this.offsetY = undefined;\r\n  }\r\n  linkScales() {}\r\n  parse(start, count) {\r\n    const data = this.getDataset().data;\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n    } else {\r\n      let getter = (i) => +data[i];\r\n      if (isObject(data[start])) {\r\n        const {key = 'value'} = this._parsing;\r\n        getter = (i) => +resolveObjectKey(data[i], key);\r\n      }\r\n      let i, ilen;\r\n      for (i = start, ilen = start + count; i < ilen; ++i) {\r\n        meta._parsed[i] = getter(i);\r\n      }\r\n    }\r\n  }\r\n  _getRotation() {\r\n    return toRadians(this.options.rotation - 90);\r\n  }\r\n  _getCircumference() {\r\n    return toRadians(this.options.circumference);\r\n  }\r\n  _getRotationExtents() {\r\n    let min = TAU;\r\n    let max = -TAU;\r\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        const controller = this.chart.getDatasetMeta(i).controller;\r\n        const rotation = controller._getRotation();\r\n        const circumference = controller._getCircumference();\r\n        min = Math.min(min, rotation);\r\n        max = Math.max(max, rotation + circumference);\r\n      }\r\n    }\r\n    return {\r\n      rotation: min,\r\n      circumference: max - min,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const chart = this.chart;\r\n    const {chartArea} = chart;\r\n    const meta = this._cachedMeta;\r\n    const arcs = meta.data;\r\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\r\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\r\n    const chartWeight = this._getRingWeight(this.index);\r\n    const {circumference, rotation} = this._getRotationExtents();\r\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\r\n    const maxWidth = (chartArea.width - spacing) / ratioX;\r\n    const maxHeight = (chartArea.height - spacing) / ratioY;\r\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n    const outerRadius = toDimension(this.options.radius, maxRadius);\r\n    const innerRadius = Math.max(outerRadius * cutout, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\r\n    this.offsetX = offsetX * outerRadius;\r\n    this.offsetY = offsetY * outerRadius;\r\n    meta.total = this.calculateTotal();\r\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\r\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _circumference(i, reset) {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const circumference = this._getCircumference();\r\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\r\n      return 0;\r\n    }\r\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const centerX = (chartArea.left + chartArea.right) / 2;\r\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n    const animateScale = reset && animationOpts.animateScale;\r\n    const innerRadius = animateScale ? 0 : this.innerRadius;\r\n    const outerRadius = animateScale ? 0 : this.outerRadius;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    let startAngle = this._getRotation();\r\n    let i;\r\n    for (i = 0; i < start; ++i) {\r\n      startAngle += this._circumference(i, reset);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const circumference = this._circumference(i, reset);\r\n      const arc = arcs[i];\r\n      const properties = {\r\n        x: centerX + this.offsetX,\r\n        y: centerY + this.offsetY,\r\n        startAngle,\r\n        endAngle: startAngle + circumference,\r\n        circumference,\r\n        outerRadius,\r\n        innerRadius\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\r\n      }\r\n      startAngle += circumference;\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  calculateTotal() {\r\n    const meta = this._cachedMeta;\r\n    const metaData = meta.data;\r\n    let total = 0;\r\n    let i;\r\n    for (i = 0; i < metaData.length; i++) {\r\n      const value = meta._parsed[i];\r\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\r\n        total += Math.abs(value);\r\n      }\r\n    }\r\n    return total;\r\n  }\r\n  calculateCircumference(value) {\r\n    const total = this._cachedMeta.total;\r\n    if (total > 0 && !isNaN(value)) {\r\n      return TAU * (Math.abs(value) / total);\r\n    }\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  getMaxBorderWidth(arcs) {\r\n    let max = 0;\r\n    const chart = this.chart;\r\n    let i, ilen, meta, controller, options;\r\n    if (!arcs) {\r\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\r\n        if (chart.isDatasetVisible(i)) {\r\n          meta = chart.getDatasetMeta(i);\r\n          arcs = meta.data;\r\n          controller = meta.controller;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (!arcs) {\r\n      return 0;\r\n    }\r\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      options = controller.resolveDataElementOptions(i);\r\n      if (options.borderAlign !== 'inner') {\r\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n  getMaxOffset(arcs) {\r\n    let max = 0;\r\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      const options = this.resolveDataElementOptions(i);\r\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n    }\r\n    return max;\r\n  }\r\n  _getRingWeightOffset(datasetIndex) {\r\n    let ringWeightOffset = 0;\r\n    for (let i = 0; i < datasetIndex; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        ringWeightOffset += this._getRingWeight(i);\r\n      }\r\n    }\r\n    return ringWeightOffset;\r\n  }\r\n  _getRingWeight(datasetIndex) {\r\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n  }\r\n  _getVisibleDatasetWeightTotal() {\r\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n  }\r\n}\r\nDoughnutController.id = 'doughnut';\r\nDoughnutController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: false\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\r\n    },\r\n  },\r\n  cutout: '50%',\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%',\r\n  spacing: 0,\r\n  indexAxis: 'r',\r\n};\r\nDoughnutController.descriptors = {\r\n  _scriptable: (name) => name !== 'spacing',\r\n  _indexable: (name) => name !== 'spacing',\r\n};\r\nDoughnutController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(tooltipItem) {\r\n          let dataLabel = tooltipItem.label;\r\n          const value = ': ' + tooltipItem.formattedValue;\r\n          if (isArray(dataLabel)) {\r\n            dataLabel = dataLabel.slice();\r\n            dataLabel[0] += value;\r\n          } else {\r\n            dataLabel += value;\r\n          }\r\n          return dataLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass LineController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    this.supportsDecimation = true;\r\n    super.initialize();\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {dataset: line, data: points = [], _dataset} = meta;\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n    if (_scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    line._chart = this.chart;\r\n    line._datasetIndex = this.index;\r\n    line._decimated = !!_dataset._decimated;\r\n    line.points = points;\r\n    const options = this.resolveDatasetElementOptions(mode);\r\n    if (!this.options.showLine) {\r\n      options.borderWidth = 0;\r\n    }\r\n    options.segment = this.options.segment;\r\n    this.updateElement(line, undefined, {\r\n      animated: !animationsDisabled,\r\n      options\r\n    }, mode);\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const {spanGaps, segment} = this.options;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = this.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\r\n      if (segment) {\r\n        properties.parsed = parsed;\r\n        properties.raw = _dataset.data[i];\r\n      }\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n  }\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    const data = meta.data || [];\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\r\n    super.draw();\r\n  }\r\n}\r\nLineController.id = 'line';\r\nLineController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  showLine: true,\r\n  spanGaps: false,\r\n};\r\nLineController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n    },\r\n  }\r\n};\r\n\r\nclass PolarAreaController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\r\n  }\r\n  update(mode) {\r\n    const arcs = this._cachedMeta.data;\r\n    this._updateRadius();\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  getMinMax() {\r\n    const meta = this._cachedMeta;\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    meta.data.forEach((element, index) => {\r\n      const parsed = this.getParsed(index).r;\r\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\r\n        if (parsed < range.min) {\r\n          range.min = parsed;\r\n        }\r\n        if (parsed > range.max) {\r\n          range.max = parsed;\r\n        }\r\n      }\r\n    });\r\n    return range;\r\n  }\r\n  _updateRadius() {\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n    const outerRadius = Math.max(minSize / 2, 0);\r\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n    this.outerRadius = outerRadius - (radiusLength * this.index);\r\n    this.innerRadius = this.outerRadius - radiusLength;\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const scale = this._cachedMeta.rScale;\r\n    const centerX = scale.xCenter;\r\n    const centerY = scale.yCenter;\r\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n    let angle = datasetStartAngle;\r\n    let i;\r\n    const defaultAngle = 360 / this.countVisibleElements();\r\n    for (i = 0; i < start; ++i) {\r\n      angle += this._computeAngle(i, mode, defaultAngle);\r\n    }\r\n    for (i = start; i < start + count; i++) {\r\n      const arc = arcs[i];\r\n      let startAngle = angle;\r\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\r\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\r\n      angle = endAngle;\r\n      if (reset) {\r\n        if (animationOpts.animateScale) {\r\n          outerRadius = 0;\r\n        }\r\n        if (animationOpts.animateRotate) {\r\n          startAngle = endAngle = datasetStartAngle;\r\n        }\r\n      }\r\n      const properties = {\r\n        x: centerX,\r\n        y: centerY,\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle,\r\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\r\n      };\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  countVisibleElements() {\r\n    const meta = this._cachedMeta;\r\n    let count = 0;\r\n    meta.data.forEach((element, index) => {\r\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n  _computeAngle(index, mode, defaultAngle) {\r\n    return this.chart.getDataVisibility(index)\r\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\r\n      : 0;\r\n  }\r\n}\r\nPolarAreaController.id = 'polarArea';\r\nPolarAreaController.defaults = {\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: true\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\r\n    },\r\n  },\r\n  indexAxis: 'r',\r\n  startAngle: 0,\r\n};\r\nPolarAreaController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(context) {\r\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n      angleLines: {\r\n        display: false\r\n      },\r\n      beginAtZero: true,\r\n      grid: {\r\n        circular: true\r\n      },\r\n      pointLabels: {\r\n        display: false\r\n      },\r\n      startAngle: 0\r\n    }\r\n  }\r\n};\r\n\r\nclass PieController extends DoughnutController {\r\n}\r\nPieController.id = 'pie';\r\nPieController.defaults = {\r\n  cutout: 0,\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%'\r\n};\r\n\r\nclass RadarController extends DatasetController {\r\n  getLabelAndValue(index) {\r\n    const vScale = this._cachedMeta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: vScale.getLabels()[index],\r\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n    };\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const line = meta.dataset;\r\n    const points = meta.data || [];\r\n    const labels = meta.iScale.getLabels();\r\n    line.points = points;\r\n    if (mode !== 'resize') {\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      if (!this.options.showLine) {\r\n        options.borderWidth = 0;\r\n      }\r\n      const properties = {\r\n        _loop: true,\r\n        _fullLoop: labels.length === points.length,\r\n        options\r\n      };\r\n      this.updateElement(line, undefined, properties, mode);\r\n    }\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const scale = this._cachedMeta.rScale;\r\n    const reset = mode === 'reset';\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\r\n      const x = reset ? scale.xCenter : pointPosition.x;\r\n      const y = reset ? scale.yCenter : pointPosition.y;\r\n      const properties = {\r\n        x,\r\n        y,\r\n        angle: pointPosition.angle,\r\n        skip: isNaN(x) || isNaN(y),\r\n        options\r\n      };\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n}\r\nRadarController.id = 'radar';\r\nRadarController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  indexAxis: 'r',\r\n  showLine: true,\r\n  elements: {\r\n    line: {\r\n      fill: 'start'\r\n    }\r\n  },\r\n};\r\nRadarController.overrides = {\r\n  aspectRatio: 1,\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n    }\r\n  }\r\n};\r\n\r\nclass Element {\r\n  constructor() {\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.active = false;\r\n    this.options = undefined;\r\n    this.$animations = undefined;\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  hasValue() {\r\n    return isNumber(this.x) && isNumber(this.y);\r\n  }\r\n  getProps(props, final) {\r\n    const anims = this.$animations;\r\n    if (!final || !anims) {\r\n      return this;\r\n    }\r\n    const ret = {};\r\n    props.forEach(prop => {\r\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\r\n    });\r\n    return ret;\r\n  }\r\n}\r\nElement.defaults = {};\r\nElement.defaultRoutes = undefined;\r\n\r\nconst formatters = {\r\n  values(value) {\r\n    return isArray(value) ? value : '' + value;\r\n  },\r\n  numeric(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const locale = this.chart.options.locale;\r\n    let notation;\r\n    let delta = tickValue;\r\n    if (ticks.length > 1) {\r\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n        notation = 'scientific';\r\n      }\r\n      delta = calculateDelta(tickValue, ticks);\r\n    }\r\n    const logDelta = log10(Math.abs(delta));\r\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n    Object.assign(options, this.options.ticks.format);\r\n    return formatNumber(tickValue, locale, options);\r\n  },\r\n  logarithmic(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\r\n    if (remain === 1 || remain === 2 || remain === 5) {\r\n      return formatters.numeric.call(this, tickValue, index, ticks);\r\n    }\r\n    return '';\r\n  }\r\n};\r\nfunction calculateDelta(tickValue, ticks) {\r\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\r\n    delta = tickValue - Math.floor(tickValue);\r\n  }\r\n  return delta;\r\n}\r\nvar Ticks = {formatters};\r\n\r\ndefaults.set('scale', {\r\n  display: true,\r\n  offset: false,\r\n  reverse: false,\r\n  beginAtZero: false,\r\n  bounds: 'ticks',\r\n  grace: 0,\r\n  grid: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    drawBorder: true,\r\n    drawOnChartArea: true,\r\n    drawTicks: true,\r\n    tickLength: 8,\r\n    tickWidth: (_ctx, options) => options.lineWidth,\r\n    tickColor: (_ctx, options) => options.color,\r\n    offset: false,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0,\r\n    borderWidth: 1\r\n  },\r\n  title: {\r\n    display: false,\r\n    text: '',\r\n    padding: {\r\n      top: 4,\r\n      bottom: 4\r\n    }\r\n  },\r\n  ticks: {\r\n    minRotation: 0,\r\n    maxRotation: 50,\r\n    mirror: false,\r\n    textStrokeWidth: 0,\r\n    textStrokeColor: '',\r\n    padding: 3,\r\n    display: true,\r\n    autoSkip: true,\r\n    autoSkipPadding: 3,\r\n    labelOffset: 0,\r\n    callback: Ticks.formatters.values,\r\n    minor: {},\r\n    major: {},\r\n    align: 'center',\r\n    crossAlign: 'near',\r\n    showLabelBackdrop: false,\r\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\r\n    backdropPadding: 2,\r\n  }\r\n});\r\ndefaults.route('scale.ticks', 'color', '', 'color');\r\ndefaults.route('scale.grid', 'color', '', 'borderColor');\r\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\r\ndefaults.route('scale.title', 'color', '', 'color');\r\ndefaults.describe('scale', {\r\n  _fallback: false,\r\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\r\n});\r\ndefaults.describe('scales', {\r\n  _fallback: 'scale',\r\n});\r\ndefaults.describe('scale.ticks', {\r\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\r\n  _indexable: (name) => name !== 'backdropPadding',\r\n});\r\n\r\nfunction autoSkip(scale, ticks) {\r\n  const tickOpts = scale.options.ticks;\r\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\r\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n  const numMajorIndices = majorIndices.length;\r\n  const first = majorIndices[0];\r\n  const last = majorIndices[numMajorIndices - 1];\r\n  const newTicks = [];\r\n  if (numMajorIndices > ticksLimit) {\r\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n    return newTicks;\r\n  }\r\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n  if (numMajorIndices > 0) {\r\n    let i, ilen;\r\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\r\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n    }\r\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n    return newTicks;\r\n  }\r\n  skip(ticks, newTicks, spacing);\r\n  return newTicks;\r\n}\r\nfunction determineMaxTicks(scale) {\r\n  const offset = scale.options.offset;\r\n  const tickLength = scale._tickSize();\r\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n  const maxChart = scale._maxLength / tickLength;\r\n  return Math.floor(Math.min(maxScale, maxChart));\r\n}\r\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n  const spacing = ticks.length / ticksLimit;\r\n  if (!evenMajorSpacing) {\r\n    return Math.max(spacing, 1);\r\n  }\r\n  const factors = _factorize(evenMajorSpacing);\r\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\r\n    const factor = factors[i];\r\n    if (factor > spacing) {\r\n      return factor;\r\n    }\r\n  }\r\n  return Math.max(spacing, 1);\r\n}\r\nfunction getMajorIndices(ticks) {\r\n  const result = [];\r\n  let i, ilen;\r\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n    if (ticks[i].major) {\r\n      result.push(i);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n  let count = 0;\r\n  let next = majorIndices[0];\r\n  let i;\r\n  spacing = Math.ceil(spacing);\r\n  for (i = 0; i < ticks.length; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = majorIndices[count * spacing];\r\n    }\r\n  }\r\n}\r\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n  const start = valueOrDefault(majorStart, 0);\r\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n  let count = 0;\r\n  let length, i, next;\r\n  spacing = Math.ceil(spacing);\r\n  if (majorEnd) {\r\n    length = majorEnd - majorStart;\r\n    spacing = length / Math.floor(length / spacing);\r\n  }\r\n  next = start;\r\n  while (next < 0) {\r\n    count++;\r\n    next = Math.round(start + count * spacing);\r\n  }\r\n  for (i = Math.max(start, 0); i < end; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = Math.round(start + count * spacing);\r\n    }\r\n  }\r\n}\r\nfunction getEvenSpacing(arr) {\r\n  const len = arr.length;\r\n  let i, diff;\r\n  if (len < 2) {\r\n    return false;\r\n  }\r\n  for (diff = arr[0], i = 1; i < len; ++i) {\r\n    if (arr[i] - arr[i - 1] !== diff) {\r\n      return false;\r\n    }\r\n  }\r\n  return diff;\r\n}\r\n\r\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\nfunction sample(arr, numItems) {\r\n  const result = [];\r\n  const increment = arr.length / numItems;\r\n  const len = arr.length;\r\n  let i = 0;\r\n  for (; i < len; i += increment) {\r\n    result.push(arr[Math.floor(i)]);\r\n  }\r\n  return result;\r\n}\r\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\r\n  const length = scale.ticks.length;\r\n  const validIndex = Math.min(index, length - 1);\r\n  const start = scale._startPixel;\r\n  const end = scale._endPixel;\r\n  const epsilon = 1e-6;\r\n  let lineValue = scale.getPixelForTick(validIndex);\r\n  let offset;\r\n  if (offsetGridLines) {\r\n    if (length === 1) {\r\n      offset = Math.max(lineValue - start, end - lineValue);\r\n    } else if (index === 0) {\r\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n    } else {\r\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n    }\r\n    lineValue += validIndex < index ? offset : -offset;\r\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n      return;\r\n    }\r\n  }\r\n  return lineValue;\r\n}\r\nfunction garbageCollect(caches, length) {\r\n  each(caches, (cache) => {\r\n    const gc = cache.gc;\r\n    const gcLen = gc.length / 2;\r\n    let i;\r\n    if (gcLen > length) {\r\n      for (i = 0; i < gcLen; ++i) {\r\n        delete cache.data[gc[i]];\r\n      }\r\n      gc.splice(0, gcLen);\r\n    }\r\n  });\r\n}\r\nfunction getTickMarkLength(options) {\r\n  return options.drawTicks ? options.tickLength : 0;\r\n}\r\nfunction getTitleHeight(options, fallback) {\r\n  if (!options.display) {\r\n    return 0;\r\n  }\r\n  const font = toFont(options.font, fallback);\r\n  const padding = toPadding(options.padding);\r\n  const lines = isArray(options.text) ? options.text.length : 1;\r\n  return (lines * font.lineHeight) + padding.height;\r\n}\r\nfunction createScaleContext(parent, scale) {\r\n  return createContext(parent, {\r\n    scale,\r\n    type: 'scale'\r\n  });\r\n}\r\nfunction createTickContext(parent, index, tick) {\r\n  return createContext(parent, {\r\n    tick,\r\n    index,\r\n    type: 'tick'\r\n  });\r\n}\r\nfunction titleAlign(align, position, reverse) {\r\n  let ret = _toLeftRightCenter(align);\r\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\r\n    ret = reverseAlign(ret);\r\n  }\r\n  return ret;\r\n}\r\nfunction titleArgs(scale, offset, position, align) {\r\n  const {top, left, bottom, right, chart} = scale;\r\n  const {chartArea, scales} = chart;\r\n  let rotation = 0;\r\n  let maxWidth, titleX, titleY;\r\n  const height = bottom - top;\r\n  const width = right - left;\r\n  if (scale.isHorizontal()) {\r\n    titleX = _alignStartEnd(align, left, right);\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\r\n    } else if (position === 'center') {\r\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\r\n    } else {\r\n      titleY = offsetFromEdge(scale, position, offset);\r\n    }\r\n    maxWidth = right - left;\r\n  } else {\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\r\n    } else if (position === 'center') {\r\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\r\n    } else {\r\n      titleX = offsetFromEdge(scale, position, offset);\r\n    }\r\n    titleY = _alignStartEnd(align, bottom, top);\r\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n  }\r\n  return {titleX, titleY, maxWidth, rotation};\r\n}\r\nclass Scale extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.id = cfg.id;\r\n    this.type = cfg.type;\r\n    this.options = undefined;\r\n    this.ctx = cfg.ctx;\r\n    this.chart = cfg.chart;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this._margins = {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    };\r\n    this.maxWidth = undefined;\r\n    this.maxHeight = undefined;\r\n    this.paddingTop = undefined;\r\n    this.paddingBottom = undefined;\r\n    this.paddingLeft = undefined;\r\n    this.paddingRight = undefined;\r\n    this.axis = undefined;\r\n    this.labelRotation = undefined;\r\n    this.min = undefined;\r\n    this.max = undefined;\r\n    this._range = undefined;\r\n    this.ticks = [];\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this._labelSizes = null;\r\n    this._length = 0;\r\n    this._maxLength = 0;\r\n    this._longestTextCache = {};\r\n    this._startPixel = undefined;\r\n    this._endPixel = undefined;\r\n    this._reversePixels = false;\r\n    this._userMax = undefined;\r\n    this._userMin = undefined;\r\n    this._suggestedMax = undefined;\r\n    this._suggestedMin = undefined;\r\n    this._ticksLength = 0;\r\n    this._borderValue = 0;\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n    this.$context = undefined;\r\n  }\r\n  init(options) {\r\n    this.options = options.setContext(this.getContext());\r\n    this.axis = options.axis;\r\n    this._userMin = this.parse(options.min);\r\n    this._userMax = this.parse(options.max);\r\n    this._suggestedMin = this.parse(options.suggestedMin);\r\n    this._suggestedMax = this.parse(options.suggestedMax);\r\n  }\r\n  parse(raw, index) {\r\n    return raw;\r\n  }\r\n  getUserBounds() {\r\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\r\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n    return {\r\n      min: finiteOrDefault(_userMin, _suggestedMin),\r\n      max: finiteOrDefault(_userMax, _suggestedMax),\r\n      minDefined: isNumberFinite(_userMin),\r\n      maxDefined: isNumberFinite(_userMax)\r\n    };\r\n  }\r\n  getMinMax(canStack) {\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    let range;\r\n    if (minDefined && maxDefined) {\r\n      return {min, max};\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      range = metas[i].controller.getMinMax(this, canStack);\r\n      if (!minDefined) {\r\n        min = Math.min(min, range.min);\r\n      }\r\n      if (!maxDefined) {\r\n        max = Math.max(max, range.max);\r\n      }\r\n    }\r\n    min = maxDefined && min > max ? max : min;\r\n    max = minDefined && min > max ? min : max;\r\n    return {\r\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n    };\r\n  }\r\n  getPadding() {\r\n    return {\r\n      left: this.paddingLeft || 0,\r\n      top: this.paddingTop || 0,\r\n      right: this.paddingRight || 0,\r\n      bottom: this.paddingBottom || 0\r\n    };\r\n  }\r\n  getTicks() {\r\n    return this.ticks;\r\n  }\r\n  getLabels() {\r\n    const data = this.chart.data;\r\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n  }\r\n  beforeLayout() {\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n  }\r\n  beforeUpdate() {\r\n    callback(this.options.beforeUpdate, [this]);\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\r\n    const sampleSize = tickOpts.sampleSize;\r\n    this.beforeUpdate();\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins = Object.assign({\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    }, margins);\r\n    this.ticks = null;\r\n    this._labelSizes = null;\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this.beforeSetDimensions();\r\n    this.setDimensions();\r\n    this.afterSetDimensions();\r\n    this._maxLength = this.isHorizontal()\r\n      ? this.width + margins.left + margins.right\r\n      : this.height + margins.top + margins.bottom;\r\n    if (!this._dataLimitsCached) {\r\n      this.beforeDataLimits();\r\n      this.determineDataLimits();\r\n      this.afterDataLimits();\r\n      this._range = _addGrace(this, grace, beginAtZero);\r\n      this._dataLimitsCached = true;\r\n    }\r\n    this.beforeBuildTicks();\r\n    this.ticks = this.buildTicks() || [];\r\n    this.afterBuildTicks();\r\n    const samplingEnabled = sampleSize < this.ticks.length;\r\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\r\n    this.configure();\r\n    this.beforeCalculateLabelRotation();\r\n    this.calculateLabelRotation();\r\n    this.afterCalculateLabelRotation();\r\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n      this.ticks = autoSkip(this, this.ticks);\r\n      this._labelSizes = null;\r\n      this.afterAutoSkip();\r\n    }\r\n    if (samplingEnabled) {\r\n      this._convertTicksToLabels(this.ticks);\r\n    }\r\n    this.beforeFit();\r\n    this.fit();\r\n    this.afterFit();\r\n    this.afterUpdate();\r\n  }\r\n  configure() {\r\n    let reversePixels = this.options.reverse;\r\n    let startPixel, endPixel;\r\n    if (this.isHorizontal()) {\r\n      startPixel = this.left;\r\n      endPixel = this.right;\r\n    } else {\r\n      startPixel = this.top;\r\n      endPixel = this.bottom;\r\n      reversePixels = !reversePixels;\r\n    }\r\n    this._startPixel = startPixel;\r\n    this._endPixel = endPixel;\r\n    this._reversePixels = reversePixels;\r\n    this._length = endPixel - startPixel;\r\n    this._alignToPixels = this.options.alignToPixels;\r\n  }\r\n  afterUpdate() {\r\n    callback(this.options.afterUpdate, [this]);\r\n  }\r\n  beforeSetDimensions() {\r\n    callback(this.options.beforeSetDimensions, [this]);\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = 0;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = 0;\r\n      this.bottom = this.height;\r\n    }\r\n    this.paddingLeft = 0;\r\n    this.paddingTop = 0;\r\n    this.paddingRight = 0;\r\n    this.paddingBottom = 0;\r\n  }\r\n  afterSetDimensions() {\r\n    callback(this.options.afterSetDimensions, [this]);\r\n  }\r\n  _callHooks(name) {\r\n    this.chart.notifyPlugins(name, this.getContext());\r\n    callback(this.options[name], [this]);\r\n  }\r\n  beforeDataLimits() {\r\n    this._callHooks('beforeDataLimits');\r\n  }\r\n  determineDataLimits() {}\r\n  afterDataLimits() {\r\n    this._callHooks('afterDataLimits');\r\n  }\r\n  beforeBuildTicks() {\r\n    this._callHooks('beforeBuildTicks');\r\n  }\r\n  buildTicks() {\r\n    return [];\r\n  }\r\n  afterBuildTicks() {\r\n    this._callHooks('afterBuildTicks');\r\n  }\r\n  beforeTickToLabelConversion() {\r\n    callback(this.options.beforeTickToLabelConversion, [this]);\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const tickOpts = this.options.ticks;\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      tick = ticks[i];\r\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\r\n    }\r\n  }\r\n  afterTickToLabelConversion() {\r\n    callback(this.options.afterTickToLabelConversion, [this]);\r\n  }\r\n  beforeCalculateLabelRotation() {\r\n    callback(this.options.beforeCalculateLabelRotation, [this]);\r\n  }\r\n  calculateLabelRotation() {\r\n    const options = this.options;\r\n    const tickOpts = options.ticks;\r\n    const numTicks = this.ticks.length;\r\n    const minRotation = tickOpts.minRotation || 0;\r\n    const maxRotation = tickOpts.maxRotation;\r\n    let labelRotation = minRotation;\r\n    let tickWidth, maxHeight, maxLabelDiagonal;\r\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\r\n      this.labelRotation = minRotation;\r\n      return;\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    const maxLabelWidth = labelSizes.widest.width;\r\n    const maxLabelHeight = labelSizes.highest.height;\r\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\r\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n    if (maxLabelWidth + 6 > tickWidth) {\r\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\r\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\r\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n      labelRotation = toDegrees(Math.min(\r\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\r\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\r\n      ));\r\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n    }\r\n    this.labelRotation = labelRotation;\r\n  }\r\n  afterCalculateLabelRotation() {\r\n    callback(this.options.afterCalculateLabelRotation, [this]);\r\n  }\r\n  afterAutoSkip() {}\r\n  beforeFit() {\r\n    callback(this.options.beforeFit, [this]);\r\n  }\r\n  fit() {\r\n    const minSize = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\r\n    const display = this._isVisible();\r\n    const isHorizontal = this.isHorizontal();\r\n    if (display) {\r\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n      if (isHorizontal) {\r\n        minSize.width = this.maxWidth;\r\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n      } else {\r\n        minSize.height = this.maxHeight;\r\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n      }\r\n      if (tickOpts.display && this.ticks.length) {\r\n        const {first, last, widest, highest} = this._getLabelSizes();\r\n        const tickPadding = tickOpts.padding * 2;\r\n        const angleRadians = toRadians(this.labelRotation);\r\n        const cos = Math.cos(angleRadians);\r\n        const sin = Math.sin(angleRadians);\r\n        if (isHorizontal) {\r\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\r\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\r\n        } else {\r\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\r\n        }\r\n        this._calculatePadding(first, last, sin, cos);\r\n      }\r\n    }\r\n    this._handleMargins();\r\n    if (isHorizontal) {\r\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\r\n      this.height = minSize.height;\r\n    } else {\r\n      this.width = minSize.width;\r\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\r\n    }\r\n  }\r\n  _calculatePadding(first, last, sin, cos) {\r\n    const {ticks: {align, padding}, position} = this.options;\r\n    const isRotated = this.labelRotation !== 0;\r\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\r\n    if (this.isHorizontal()) {\r\n      const offsetLeft = this.getPixelForTick(0) - this.left;\r\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\r\n      let paddingLeft = 0;\r\n      let paddingRight = 0;\r\n      if (isRotated) {\r\n        if (labelsBelowTicks) {\r\n          paddingLeft = cos * first.width;\r\n          paddingRight = sin * last.height;\r\n        } else {\r\n          paddingLeft = sin * first.height;\r\n          paddingRight = cos * last.width;\r\n        }\r\n      } else if (align === 'start') {\r\n        paddingRight = last.width;\r\n      } else if (align === 'end') {\r\n        paddingLeft = first.width;\r\n      } else if (align !== 'inner') {\r\n        paddingLeft = first.width / 2;\r\n        paddingRight = last.width / 2;\r\n      }\r\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\r\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\r\n    } else {\r\n      let paddingTop = last.height / 2;\r\n      let paddingBottom = first.height / 2;\r\n      if (align === 'start') {\r\n        paddingTop = 0;\r\n        paddingBottom = first.height;\r\n      } else if (align === 'end') {\r\n        paddingTop = last.height;\r\n        paddingBottom = 0;\r\n      }\r\n      this.paddingTop = paddingTop + padding;\r\n      this.paddingBottom = paddingBottom + padding;\r\n    }\r\n  }\r\n  _handleMargins() {\r\n    if (this._margins) {\r\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\r\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\r\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\r\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\r\n    }\r\n  }\r\n  afterFit() {\r\n    callback(this.options.afterFit, [this]);\r\n  }\r\n  isHorizontal() {\r\n    const {axis, position} = this.options;\r\n    return position === 'top' || position === 'bottom' || axis === 'x';\r\n  }\r\n  isFullSize() {\r\n    return this.options.fullSize;\r\n  }\r\n  _convertTicksToLabels(ticks) {\r\n    this.beforeTickToLabelConversion();\r\n    this.generateTickLabels(ticks);\r\n    let i, ilen;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      if (isNullOrUndef(ticks[i].label)) {\r\n        ticks.splice(i, 1);\r\n        ilen--;\r\n        i--;\r\n      }\r\n    }\r\n    this.afterTickToLabelConversion();\r\n  }\r\n  _getLabelSizes() {\r\n    let labelSizes = this._labelSizes;\r\n    if (!labelSizes) {\r\n      const sampleSize = this.options.ticks.sampleSize;\r\n      let ticks = this.ticks;\r\n      if (sampleSize < ticks.length) {\r\n        ticks = sample(ticks, sampleSize);\r\n      }\r\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\r\n    }\r\n    return labelSizes;\r\n  }\r\n  _computeLabelSizes(ticks, length) {\r\n    const {ctx, _longestTextCache: caches} = this;\r\n    const widths = [];\r\n    const heights = [];\r\n    let widestLabelSize = 0;\r\n    let highestLabelSize = 0;\r\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n    for (i = 0; i < length; ++i) {\r\n      label = ticks[i].label;\r\n      tickFont = this._resolveTickFontOptions(i);\r\n      ctx.font = fontString = tickFont.string;\r\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\r\n      lineHeight = tickFont.lineHeight;\r\n      width = height = 0;\r\n      if (!isNullOrUndef(label) && !isArray(label)) {\r\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n        height = lineHeight;\r\n      } else if (isArray(label)) {\r\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\r\n          nestedLabel = label[j];\r\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n            height += lineHeight;\r\n          }\r\n        }\r\n      }\r\n      widths.push(width);\r\n      heights.push(height);\r\n      widestLabelSize = Math.max(width, widestLabelSize);\r\n      highestLabelSize = Math.max(height, highestLabelSize);\r\n    }\r\n    garbageCollect(caches, length);\r\n    const widest = widths.indexOf(widestLabelSize);\r\n    const highest = heights.indexOf(highestLabelSize);\r\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\r\n    return {\r\n      first: valueAt(0),\r\n      last: valueAt(length - 1),\r\n      widest: valueAt(widest),\r\n      highest: valueAt(highest),\r\n      widths,\r\n      heights,\r\n    };\r\n  }\r\n  getLabelForValue(value) {\r\n    return value;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    return NaN;\r\n  }\r\n  getValueForPixel(pixel) {}\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getPixelForDecimal(decimal) {\r\n    if (this._reversePixels) {\r\n      decimal = 1 - decimal;\r\n    }\r\n    const pixel = this._startPixel + decimal * this._length;\r\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\r\n  }\r\n  getDecimalForPixel(pixel) {\r\n    const decimal = (pixel - this._startPixel) / this._length;\r\n    return this._reversePixels ? 1 - decimal : decimal;\r\n  }\r\n  getBasePixel() {\r\n    return this.getPixelForValue(this.getBaseValue());\r\n  }\r\n  getBaseValue() {\r\n    const {min, max} = this;\r\n    return min < 0 && max < 0 ? max :\r\n      min > 0 && max > 0 ? min :\r\n      0;\r\n  }\r\n  getContext(index) {\r\n    const ticks = this.ticks || [];\r\n    if (index >= 0 && index < ticks.length) {\r\n      const tick = ticks[index];\r\n      return tick.$context ||\r\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\r\n    }\r\n    return this.$context ||\r\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\r\n  }\r\n  _tickSize() {\r\n    const optionTicks = this.options.ticks;\r\n    const rot = toRadians(this.labelRotation);\r\n    const cos = Math.abs(Math.cos(rot));\r\n    const sin = Math.abs(Math.sin(rot));\r\n    const labelSizes = this._getLabelSizes();\r\n    const padding = optionTicks.autoSkipPadding || 0;\r\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n    return this.isHorizontal()\r\n      ? h * cos > w * sin ? w / cos : h / sin\r\n      : h * sin < w * cos ? h / cos : w / sin;\r\n  }\r\n  _isVisible() {\r\n    const display = this.options.display;\r\n    if (display !== 'auto') {\r\n      return !!display;\r\n    }\r\n    return this.getMatchingVisibleMetas().length > 0;\r\n  }\r\n  _computeGridLineItems(chartArea) {\r\n    const axis = this.axis;\r\n    const chart = this.chart;\r\n    const options = this.options;\r\n    const {grid, position} = options;\r\n    const offset = grid.offset;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const ticksLength = ticks.length + (offset ? 1 : 0);\r\n    const tl = getTickMarkLength(grid);\r\n    const items = [];\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\r\n    const axisHalfWidth = axisWidth / 2;\r\n    const alignBorderValue = function(pixel) {\r\n      return _alignPixel(chart, pixel, axisWidth);\r\n    };\r\n    let borderValue, i, lineValue, alignedLineValue;\r\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n    if (position === 'top') {\r\n      borderValue = alignBorderValue(this.bottom);\r\n      ty1 = this.bottom - tl;\r\n      ty2 = borderValue - axisHalfWidth;\r\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n      y2 = chartArea.bottom;\r\n    } else if (position === 'bottom') {\r\n      borderValue = alignBorderValue(this.top);\r\n      y1 = chartArea.top;\r\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = this.top + tl;\r\n    } else if (position === 'left') {\r\n      borderValue = alignBorderValue(this.right);\r\n      tx1 = this.right - tl;\r\n      tx2 = borderValue - axisHalfWidth;\r\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n      x2 = chartArea.right;\r\n    } else if (position === 'right') {\r\n      borderValue = alignBorderValue(this.left);\r\n      x1 = chartArea.left;\r\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n      tx1 = borderValue + axisHalfWidth;\r\n      tx2 = this.left + tl;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      y1 = chartArea.top;\r\n      y2 = chartArea.bottom;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = ty1 + tl;\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      tx1 = borderValue - axisHalfWidth;\r\n      tx2 = tx1 - tl;\r\n      x1 = chartArea.left;\r\n      x2 = chartArea.right;\r\n    }\r\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\r\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\r\n    for (i = 0; i < ticksLength; i += step) {\r\n      const optsAtIndex = grid.setContext(this.getContext(i));\r\n      const lineWidth = optsAtIndex.lineWidth;\r\n      const lineColor = optsAtIndex.color;\r\n      const borderDash = optsAtIndex.borderDash || [];\r\n      const borderDashOffset = optsAtIndex.borderDashOffset;\r\n      const tickWidth = optsAtIndex.tickWidth;\r\n      const tickColor = optsAtIndex.tickColor;\r\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n      lineValue = getPixelForGridLine(this, i, offset);\r\n      if (lineValue === undefined) {\r\n        continue;\r\n      }\r\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n      if (isHorizontal) {\r\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n      } else {\r\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n      }\r\n      items.push({\r\n        tx1,\r\n        ty1,\r\n        tx2,\r\n        ty2,\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        width: lineWidth,\r\n        color: lineColor,\r\n        borderDash,\r\n        borderDashOffset,\r\n        tickWidth,\r\n        tickColor,\r\n        tickBorderDash,\r\n        tickBorderDashOffset,\r\n      });\r\n    }\r\n    this._ticksLength = ticksLength;\r\n    this._borderValue = borderValue;\r\n    return items;\r\n  }\r\n  _computeLabelItems(chartArea) {\r\n    const axis = this.axis;\r\n    const options = this.options;\r\n    const {position, ticks: optionTicks} = options;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const {align, crossAlign, padding, mirror} = optionTicks;\r\n    const tl = getTickMarkLength(options.grid);\r\n    const tickAndPadding = tl + padding;\r\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    const items = [];\r\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n    let textBaseline = 'middle';\r\n    if (position === 'top') {\r\n      y = this.bottom - hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'bottom') {\r\n      y = this.top + hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'left') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (position === 'right') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n      }\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\r\n      }\r\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\r\n    }\r\n    if (axis === 'y') {\r\n      if (align === 'start') {\r\n        textBaseline = 'top';\r\n      } else if (align === 'end') {\r\n        textBaseline = 'bottom';\r\n      }\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      label = tick.label;\r\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\r\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\r\n      font = this._resolveTickFontOptions(i);\r\n      lineHeight = font.lineHeight;\r\n      lineCount = isArray(label) ? label.length : 1;\r\n      const halfCount = lineCount / 2;\r\n      const color = optsAtIndex.color;\r\n      const strokeColor = optsAtIndex.textStrokeColor;\r\n      const strokeWidth = optsAtIndex.textStrokeWidth;\r\n      let tickTextAlign = textAlign;\r\n      if (isHorizontal) {\r\n        x = pixel;\r\n        if (textAlign === 'inner') {\r\n          if (i === ilen - 1) {\r\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\r\n          } else if (i === 0) {\r\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\r\n          } else {\r\n            tickTextAlign = 'center';\r\n          }\r\n        }\r\n        if (position === 'top') {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n          } else {\r\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n          }\r\n        } else {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n          } else {\r\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n          }\r\n        }\r\n        if (mirror) {\r\n          textOffset *= -1;\r\n        }\r\n      } else {\r\n        y = pixel;\r\n        textOffset = (1 - lineCount) * lineHeight / 2;\r\n      }\r\n      let backdrop;\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\r\n        const height = labelSizes.heights[i];\r\n        const width = labelSizes.widths[i];\r\n        let top = y + textOffset - labelPadding.top;\r\n        let left = x - labelPadding.left;\r\n        switch (textBaseline) {\r\n        case 'middle':\r\n          top -= height / 2;\r\n          break;\r\n        case 'bottom':\r\n          top -= height;\r\n          break;\r\n        }\r\n        switch (textAlign) {\r\n        case 'center':\r\n          left -= width / 2;\r\n          break;\r\n        case 'right':\r\n          left -= width;\r\n          break;\r\n        }\r\n        backdrop = {\r\n          left,\r\n          top,\r\n          width: width + labelPadding.width,\r\n          height: height + labelPadding.height,\r\n          color: optsAtIndex.backdropColor,\r\n        };\r\n      }\r\n      items.push({\r\n        rotation,\r\n        label,\r\n        font,\r\n        color,\r\n        strokeColor,\r\n        strokeWidth,\r\n        textOffset,\r\n        textAlign: tickTextAlign,\r\n        textBaseline,\r\n        translation: [x, y],\r\n        backdrop,\r\n      });\r\n    }\r\n    return items;\r\n  }\r\n  _getXAxisLabelAlignment() {\r\n    const {position, ticks} = this.options;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    if (rotation) {\r\n      return position === 'top' ? 'left' : 'right';\r\n    }\r\n    let align = 'center';\r\n    if (ticks.align === 'start') {\r\n      align = 'left';\r\n    } else if (ticks.align === 'end') {\r\n      align = 'right';\r\n    } else if (ticks.align === 'inner') {\r\n      align = 'inner';\r\n    }\r\n    return align;\r\n  }\r\n  _getYAxisLabelAlignment(tl) {\r\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\r\n    const labelSizes = this._getLabelSizes();\r\n    const tickAndPadding = tl + padding;\r\n    const widest = labelSizes.widest.width;\r\n    let textAlign;\r\n    let x;\r\n    if (position === 'left') {\r\n      if (mirror) {\r\n        x = this.right + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += (widest / 2);\r\n        } else {\r\n          textAlign = 'right';\r\n          x += widest;\r\n        }\r\n      } else {\r\n        x = this.right - tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x = this.left;\r\n        }\r\n      }\r\n    } else if (position === 'right') {\r\n      if (mirror) {\r\n        x = this.left + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x -= widest;\r\n        }\r\n      } else {\r\n        x = this.left + tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += widest / 2;\r\n        } else {\r\n          textAlign = 'right';\r\n          x = this.right;\r\n        }\r\n      }\r\n    } else {\r\n      textAlign = 'right';\r\n    }\r\n    return {textAlign, x};\r\n  }\r\n  _computeLabelArea() {\r\n    if (this.options.ticks.mirror) {\r\n      return;\r\n    }\r\n    const chart = this.chart;\r\n    const position = this.options.position;\r\n    if (position === 'left' || position === 'right') {\r\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\r\n    } if (position === 'top' || position === 'bottom') {\r\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\r\n    }\r\n  }\r\n  drawBackground() {\r\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\r\n    if (backgroundColor) {\r\n      ctx.save();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fillRect(left, top, width, height);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getLineWidthForValue(value) {\r\n    const grid = this.options.grid;\r\n    if (!this._isVisible() || !grid.display) {\r\n      return 0;\r\n    }\r\n    const ticks = this.ticks;\r\n    const index = ticks.findIndex(t => t.value === value);\r\n    if (index >= 0) {\r\n      const opts = grid.setContext(this.getContext(index));\r\n      return opts.lineWidth;\r\n    }\r\n    return 0;\r\n  }\r\n  drawGrid(chartArea) {\r\n    const grid = this.options.grid;\r\n    const ctx = this.ctx;\r\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\r\n    let i, ilen;\r\n    const drawLine = (p1, p2, style) => {\r\n      if (!style.width || !style.color) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      ctx.lineWidth = style.width;\r\n      ctx.strokeStyle = style.color;\r\n      ctx.setLineDash(style.borderDash || []);\r\n      ctx.lineDashOffset = style.borderDashOffset;\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    };\r\n    if (grid.display) {\r\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n        const item = items[i];\r\n        if (grid.drawOnChartArea) {\r\n          drawLine(\r\n            {x: item.x1, y: item.y1},\r\n            {x: item.x2, y: item.y2},\r\n            item\r\n          );\r\n        }\r\n        if (grid.drawTicks) {\r\n          drawLine(\r\n            {x: item.tx1, y: item.ty1},\r\n            {x: item.tx2, y: item.ty2},\r\n            {\r\n              color: item.tickColor,\r\n              width: item.tickWidth,\r\n              borderDash: item.tickBorderDash,\r\n              borderDashOffset: item.tickBorderDashOffset\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n  drawBorder() {\r\n    const {chart, ctx, options: {grid}} = this;\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\r\n    if (!axisWidth) {\r\n      return;\r\n    }\r\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\r\n    const borderValue = this._borderValue;\r\n    let x1, x2, y1, y2;\r\n    if (this.isHorizontal()) {\r\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\r\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\r\n      y1 = y2 = borderValue;\r\n    } else {\r\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\r\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\r\n      x1 = x2 = borderValue;\r\n    }\r\n    ctx.save();\r\n    ctx.lineWidth = borderOpts.borderWidth;\r\n    ctx.strokeStyle = borderOpts.borderColor;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n  drawLabels(chartArea) {\r\n    const optionTicks = this.options.ticks;\r\n    if (!optionTicks.display) {\r\n      return;\r\n    }\r\n    const ctx = this.ctx;\r\n    const area = this._computeLabelArea();\r\n    if (area) {\r\n      clipArea(ctx, area);\r\n    }\r\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\r\n    let i, ilen;\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      const item = items[i];\r\n      const tickFont = item.font;\r\n      const label = item.label;\r\n      if (item.backdrop) {\r\n        ctx.fillStyle = item.backdrop.color;\r\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\r\n      }\r\n      let y = item.textOffset;\r\n      renderText(ctx, label, 0, y, tickFont, item);\r\n    }\r\n    if (area) {\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  drawTitle() {\r\n    const {ctx, options: {position, title, reverse}} = this;\r\n    if (!title.display) {\r\n      return;\r\n    }\r\n    const font = toFont(title.font);\r\n    const padding = toPadding(title.padding);\r\n    const align = title.align;\r\n    let offset = font.lineHeight / 2;\r\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\r\n      offset += padding.bottom;\r\n      if (isArray(title.text)) {\r\n        offset += font.lineHeight * (title.text.length - 1);\r\n      }\r\n    } else {\r\n      offset += padding.top;\r\n    }\r\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\r\n    renderText(ctx, title.text, 0, 0, font, {\r\n      color: title.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: titleAlign(align, position, reverse),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n  draw(chartArea) {\r\n    if (!this._isVisible()) {\r\n      return;\r\n    }\r\n    this.drawBackground();\r\n    this.drawGrid(chartArea);\r\n    this.drawBorder();\r\n    this.drawTitle();\r\n    this.drawLabels(chartArea);\r\n  }\r\n  _layers() {\r\n    const opts = this.options;\r\n    const tz = opts.ticks && opts.ticks.z || 0;\r\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\r\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\r\n      return [{\r\n        z: tz,\r\n        draw: (chartArea) => {\r\n          this.draw(chartArea);\r\n        }\r\n      }];\r\n    }\r\n    return [{\r\n      z: gz,\r\n      draw: (chartArea) => {\r\n        this.drawBackground();\r\n        this.drawGrid(chartArea);\r\n        this.drawTitle();\r\n      }\r\n    }, {\r\n      z: gz + 1,\r\n      draw: () => {\r\n        this.drawBorder();\r\n      }\r\n    }, {\r\n      z: tz,\r\n      draw: (chartArea) => {\r\n        this.drawLabels(chartArea);\r\n      }\r\n    }];\r\n  }\r\n  getMatchingVisibleMetas(type) {\r\n    const metas = this.chart.getSortedVisibleDatasetMetas();\r\n    const axisID = this.axis + 'AxisID';\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      const meta = metas[i];\r\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  _resolveTickFontOptions(index) {\r\n    const opts = this.options.ticks.setContext(this.getContext(index));\r\n    return toFont(opts.font);\r\n  }\r\n  _maxDigits() {\r\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\r\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\r\n  }\r\n}\r\n\r\nclass TypedRegistry {\r\n  constructor(type, scope, override) {\r\n    this.type = type;\r\n    this.scope = scope;\r\n    this.override = override;\r\n    this.items = Object.create(null);\r\n  }\r\n  isForType(type) {\r\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n  }\r\n  register(item) {\r\n    const proto = Object.getPrototypeOf(item);\r\n    let parentScope;\r\n    if (isIChartComponent(proto)) {\r\n      parentScope = this.register(proto);\r\n    }\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope + '.' + id;\r\n    if (!id) {\r\n      throw new Error('class does not have id: ' + item);\r\n    }\r\n    if (id in items) {\r\n      return scope;\r\n    }\r\n    items[id] = item;\r\n    registerDefaults(item, scope, parentScope);\r\n    if (this.override) {\r\n      defaults.override(item.id, item.overrides);\r\n    }\r\n    return scope;\r\n  }\r\n  get(id) {\r\n    return this.items[id];\r\n  }\r\n  unregister(item) {\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope;\r\n    if (id in items) {\r\n      delete items[id];\r\n    }\r\n    if (scope && id in defaults[scope]) {\r\n      delete defaults[scope][id];\r\n      if (this.override) {\r\n        delete overrides[id];\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction registerDefaults(item, scope, parentScope) {\r\n  const itemDefaults = merge(Object.create(null), [\r\n    parentScope ? defaults.get(parentScope) : {},\r\n    defaults.get(scope),\r\n    item.defaults\r\n  ]);\r\n  defaults.set(scope, itemDefaults);\r\n  if (item.defaultRoutes) {\r\n    routeDefaults(scope, item.defaultRoutes);\r\n  }\r\n  if (item.descriptors) {\r\n    defaults.describe(scope, item.descriptors);\r\n  }\r\n}\r\nfunction routeDefaults(scope, routes) {\r\n  Object.keys(routes).forEach(property => {\r\n    const propertyParts = property.split('.');\r\n    const sourceName = propertyParts.pop();\r\n    const sourceScope = [scope].concat(propertyParts).join('.');\r\n    const parts = routes[property].split('.');\r\n    const targetName = parts.pop();\r\n    const targetScope = parts.join('.');\r\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n  });\r\n}\r\nfunction isIChartComponent(proto) {\r\n  return 'id' in proto && 'defaults' in proto;\r\n}\r\n\r\nclass Registry {\r\n  constructor() {\r\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n    this.elements = new TypedRegistry(Element, 'elements');\r\n    this.plugins = new TypedRegistry(Object, 'plugins');\r\n    this.scales = new TypedRegistry(Scale, 'scales');\r\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\r\n  }\r\n  add(...args) {\r\n    this._each('register', args);\r\n  }\r\n  remove(...args) {\r\n    this._each('unregister', args);\r\n  }\r\n  addControllers(...args) {\r\n    this._each('register', args, this.controllers);\r\n  }\r\n  addElements(...args) {\r\n    this._each('register', args, this.elements);\r\n  }\r\n  addPlugins(...args) {\r\n    this._each('register', args, this.plugins);\r\n  }\r\n  addScales(...args) {\r\n    this._each('register', args, this.scales);\r\n  }\r\n  getController(id) {\r\n    return this._get(id, this.controllers, 'controller');\r\n  }\r\n  getElement(id) {\r\n    return this._get(id, this.elements, 'element');\r\n  }\r\n  getPlugin(id) {\r\n    return this._get(id, this.plugins, 'plugin');\r\n  }\r\n  getScale(id) {\r\n    return this._get(id, this.scales, 'scale');\r\n  }\r\n  removeControllers(...args) {\r\n    this._each('unregister', args, this.controllers);\r\n  }\r\n  removeElements(...args) {\r\n    this._each('unregister', args, this.elements);\r\n  }\r\n  removePlugins(...args) {\r\n    this._each('unregister', args, this.plugins);\r\n  }\r\n  removeScales(...args) {\r\n    this._each('unregister', args, this.scales);\r\n  }\r\n  _each(method, args, typedRegistry) {\r\n    [...args].forEach(arg => {\r\n      const reg = typedRegistry || this._getRegistryForType(arg);\r\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\r\n        this._exec(method, reg, arg);\r\n      } else {\r\n        each(arg, item => {\r\n          const itemReg = typedRegistry || this._getRegistryForType(item);\r\n          this._exec(method, itemReg, item);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  _exec(method, registry, component) {\r\n    const camelMethod = _capitalize(method);\r\n    callback(component['before' + camelMethod], [], component);\r\n    registry[method](component);\r\n    callback(component['after' + camelMethod], [], component);\r\n  }\r\n  _getRegistryForType(type) {\r\n    for (let i = 0; i < this._typedRegistries.length; i++) {\r\n      const reg = this._typedRegistries[i];\r\n      if (reg.isForType(type)) {\r\n        return reg;\r\n      }\r\n    }\r\n    return this.plugins;\r\n  }\r\n  _get(id, typedRegistry, type) {\r\n    const item = typedRegistry.get(id);\r\n    if (item === undefined) {\r\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n    }\r\n    return item;\r\n  }\r\n}\r\nvar registry = new Registry();\r\n\r\nclass ScatterController extends DatasetController {\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {data: points = []} = meta;\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n    if (_scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    if (this.options.showLine) {\r\n      const {dataset: line, _dataset} = meta;\r\n      line._chart = this.chart;\r\n      line._datasetIndex = this.index;\r\n      line._decimated = !!_dataset._decimated;\r\n      line.points = points;\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      options.segment = this.options.segment;\r\n      this.updateElement(line, undefined, {\r\n        animated: !animationsDisabled,\r\n        options\r\n      }, mode);\r\n    }\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n  addElements() {\r\n    const {showLine} = this.options;\r\n    if (!this.datasetElementType && showLine) {\r\n      this.datasetElementType = registry.getElement('line');\r\n    }\r\n    super.addElements();\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const {spanGaps, segment} = this.options;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = this.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\r\n      if (segment) {\r\n        properties.parsed = parsed;\r\n        properties.raw = _dataset.data[i];\r\n      }\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data || [];\r\n    if (!this.options.showLine) {\r\n      let max = 0;\r\n      for (let i = data.length - 1; i >= 0; --i) {\r\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n      }\r\n      return max > 0 && max;\r\n    }\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n}\r\nScatterController.id = 'scatter';\r\nScatterController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  showLine: false,\r\n  fill: false\r\n};\r\nScatterController.overrides = {\r\n  interaction: {\r\n    mode: 'point'\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(item) {\r\n          return '(' + item.label + ', ' + item.formattedValue + ')';\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  }\r\n};\r\n\r\nvar controllers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nBarController: BarController,\r\nBubbleController: BubbleController,\r\nDoughnutController: DoughnutController,\r\nLineController: LineController,\r\nPolarAreaController: PolarAreaController,\r\nPieController: PieController,\r\nRadarController: RadarController,\r\nScatterController: ScatterController\r\n});\r\n\r\nfunction abstract() {\r\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\r\n}\r\nclass DateAdapter {\r\n  constructor(options) {\r\n    this.options = options || {};\r\n  }\r\n  init(chartOptions) {}\r\n  formats() {\r\n    return abstract();\r\n  }\r\n  parse(value, format) {\r\n    return abstract();\r\n  }\r\n  format(timestamp, format) {\r\n    return abstract();\r\n  }\r\n  add(timestamp, amount, unit) {\r\n    return abstract();\r\n  }\r\n  diff(a, b, unit) {\r\n    return abstract();\r\n  }\r\n  startOf(timestamp, unit, weekday) {\r\n    return abstract();\r\n  }\r\n  endOf(timestamp, unit) {\r\n    return abstract();\r\n  }\r\n}\r\nDateAdapter.override = function(members) {\r\n  Object.assign(DateAdapter.prototype, members);\r\n};\r\nvar adapters = {\r\n  _date: DateAdapter\r\n};\r\n\r\nfunction binarySearch(metaset, axis, value, intersect) {\r\n  const {controller, data, _sorted} = metaset;\r\n  const iScale = controller._cachedMeta.iScale;\r\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\r\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n    if (!intersect) {\r\n      return lookupMethod(data, axis, value);\r\n    } else if (controller._sharedOptions) {\r\n      const el = data[0];\r\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n      if (range) {\r\n        const start = lookupMethod(data, axis, value - range);\r\n        const end = lookupMethod(data, axis, value + range);\r\n        return {lo: start.lo, hi: end.hi};\r\n      }\r\n    }\r\n  }\r\n  return {lo: 0, hi: data.length - 1};\r\n}\r\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  const value = position[axis];\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    const {index, data} = metasets[i];\r\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\r\n    for (let j = lo; j <= hi; ++j) {\r\n      const element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction getDistanceMetricForAxis(axis) {\r\n  const useX = axis.indexOf('x') !== -1;\r\n  const useY = axis.indexOf('y') !== -1;\r\n  return function(pt1, pt2) {\r\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n  };\r\n}\r\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\r\n  const items = [];\r\n  if (!includeInvisible && !chart.isPointInArea(position)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\r\n      return;\r\n    }\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\r\n  return items;\r\n}\r\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\r\n  let items = [];\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\r\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\r\n    if (_angleBetween(angle, startAngle, endAngle)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\r\n  let items = [];\r\n  const distanceMetric = getDistanceMetricForAxis(axis);\r\n  let minDistance = Number.POSITIVE_INFINITY;\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\r\n    if (intersect && !inRange) {\r\n      return;\r\n    }\r\n    const center = element.getCenterPoint(useFinalPosition);\r\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\r\n    if (!pointInArea && !inRange) {\r\n      return;\r\n    }\r\n    const distance = distanceMetric(position, center);\r\n    if (distance < minDistance) {\r\n      items = [{element, datasetIndex, index}];\r\n      minDistance = distance;\r\n    } else if (distance === minDistance) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\r\n  if (!includeInvisible && !chart.isPointInArea(position)) {\r\n    return [];\r\n  }\r\n  return axis === 'r' && !intersect\r\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\r\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\r\n}\r\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\r\n  const items = [];\r\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n  let intersectsItem = false;\r\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\r\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\r\n    }\r\n  });\r\n  if (intersect && !intersectsItem) {\r\n    return [];\r\n  }\r\n  return items;\r\n}\r\nvar Interaction = {\r\n  evaluateInteractionItems,\r\n  modes: {\r\n    index(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'x';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      const items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\r\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\r\n      const elements = [];\r\n      if (!items.length) {\r\n        return [];\r\n      }\r\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\r\n        const index = items[0].index;\r\n        const element = meta.data[index];\r\n        if (element && !element.skip) {\r\n          elements.push({element, datasetIndex: meta.index, index});\r\n        }\r\n      });\r\n      return elements;\r\n    },\r\n    dataset(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      let items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\r\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\r\n      if (items.length > 0) {\r\n        const datasetIndex = items[0].datasetIndex;\r\n        const data = chart.getDatasetMeta(datasetIndex).data;\r\n        items = [];\r\n        for (let i = 0; i < data.length; ++i) {\r\n          items.push({element: data[i], datasetIndex, index: i});\r\n        }\r\n      }\r\n      return items;\r\n    },\r\n    point(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\r\n    },\r\n    nearest(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\r\n    },\r\n    x(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\r\n    },\r\n    y(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\r\n    }\r\n  }\r\n};\r\n\r\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\r\nfunction filterByPosition(array, position) {\r\n  return array.filter(v => v.pos === position);\r\n}\r\nfunction filterDynamicPositionByAxis(array, axis) {\r\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n}\r\nfunction sortByWeight(array, reverse) {\r\n  return array.sort((a, b) => {\r\n    const v0 = reverse ? b : a;\r\n    const v1 = reverse ? a : b;\r\n    return v0.weight === v1.weight ?\r\n      v0.index - v1.index :\r\n      v0.weight - v1.weight;\r\n  });\r\n}\r\nfunction wrapBoxes(boxes) {\r\n  const layoutBoxes = [];\r\n  let i, ilen, box, pos, stack, stackWeight;\r\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\r\n    box = boxes[i];\r\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\r\n    layoutBoxes.push({\r\n      index: i,\r\n      box,\r\n      pos,\r\n      horizontal: box.isHorizontal(),\r\n      weight: box.weight,\r\n      stack: stack && (pos + stack),\r\n      stackWeight\r\n    });\r\n  }\r\n  return layoutBoxes;\r\n}\r\nfunction buildStacks(layouts) {\r\n  const stacks = {};\r\n  for (const wrap of layouts) {\r\n    const {stack, pos, stackWeight} = wrap;\r\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\r\n      continue;\r\n    }\r\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\r\n    _stack.count++;\r\n    _stack.weight += stackWeight;\r\n  }\r\n  return stacks;\r\n}\r\nfunction setLayoutDims(layouts, params) {\r\n  const stacks = buildStacks(layouts);\r\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\r\n  let i, ilen, layout;\r\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\r\n    layout = layouts[i];\r\n    const {fullSize} = layout.box;\r\n    const stack = stacks[layout.stack];\r\n    const factor = stack && layout.stackWeight / stack.weight;\r\n    if (layout.horizontal) {\r\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\r\n      layout.height = hBoxMaxHeight;\r\n    } else {\r\n      layout.width = vBoxMaxWidth;\r\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\r\n    }\r\n  }\r\n  return stacks;\r\n}\r\nfunction buildLayoutBoxes(boxes) {\r\n  const layoutBoxes = wrapBoxes(boxes);\r\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\r\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n  return {\r\n    fullSize,\r\n    leftAndTop: left.concat(top),\r\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n    vertical: left.concat(right).concat(centerVertical),\r\n    horizontal: top.concat(bottom).concat(centerHorizontal)\r\n  };\r\n}\r\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\r\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n}\r\nfunction updateMaxPadding(maxPadding, boxPadding) {\r\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n}\r\nfunction updateDims(chartArea, params, layout, stacks) {\r\n  const {pos, box} = layout;\r\n  const maxPadding = chartArea.maxPadding;\r\n  if (!isObject(pos)) {\r\n    if (layout.size) {\r\n      chartArea[pos] -= layout.size;\r\n    }\r\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\r\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\r\n    layout.size = stack.size / stack.count;\r\n    chartArea[pos] += layout.size;\r\n  }\r\n  if (box.getPadding) {\r\n    updateMaxPadding(maxPadding, box.getPadding());\r\n  }\r\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n  const widthChanged = newWidth !== chartArea.w;\r\n  const heightChanged = newHeight !== chartArea.h;\r\n  chartArea.w = newWidth;\r\n  chartArea.h = newHeight;\r\n  return layout.horizontal\r\n    ? {same: widthChanged, other: heightChanged}\r\n    : {same: heightChanged, other: widthChanged};\r\n}\r\nfunction handleMaxPadding(chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function updatePos(pos) {\r\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n    chartArea[pos] += change;\r\n    return change;\r\n  }\r\n  chartArea.y += updatePos('top');\r\n  chartArea.x += updatePos('left');\r\n  updatePos('right');\r\n  updatePos('bottom');\r\n}\r\nfunction getMargins(horizontal, chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function marginForPositions(positions) {\r\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\r\n    positions.forEach((pos) => {\r\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n    });\r\n    return margin;\r\n  }\r\n  return horizontal\r\n    ? marginForPositions(['left', 'right'])\r\n    : marginForPositions(['top', 'bottom']);\r\n}\r\nfunction fitBoxes(boxes, chartArea, params, stacks) {\r\n  const refitBoxes = [];\r\n  let i, ilen, layout, box, refit, changed;\r\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    box.update(\r\n      layout.width || chartArea.w,\r\n      layout.height || chartArea.h,\r\n      getMargins(layout.horizontal, chartArea)\r\n    );\r\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\r\n    refit |= same && refitBoxes.length;\r\n    changed = changed || other;\r\n    if (!box.fullSize) {\r\n      refitBoxes.push(layout);\r\n    }\r\n  }\r\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\r\n}\r\nfunction setBoxDims(box, left, top, width, height) {\r\n  box.top = top;\r\n  box.left = left;\r\n  box.right = left + width;\r\n  box.bottom = top + height;\r\n  box.width = width;\r\n  box.height = height;\r\n}\r\nfunction placeBoxes(boxes, chartArea, params, stacks) {\r\n  const userPadding = params.padding;\r\n  let {x, y} = chartArea;\r\n  for (const layout of boxes) {\r\n    const box = layout.box;\r\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\r\n    const weight = (layout.stackWeight / stack.weight) || 1;\r\n    if (layout.horizontal) {\r\n      const width = chartArea.w * weight;\r\n      const height = stack.size || box.height;\r\n      if (defined(stack.start)) {\r\n        y = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\r\n      } else {\r\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\r\n      }\r\n      stack.start = y;\r\n      stack.placed += width;\r\n      y = box.bottom;\r\n    } else {\r\n      const height = chartArea.h * weight;\r\n      const width = stack.size || box.width;\r\n      if (defined(stack.start)) {\r\n        x = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\r\n      } else {\r\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\r\n      }\r\n      stack.start = x;\r\n      stack.placed += height;\r\n      x = box.right;\r\n    }\r\n  }\r\n  chartArea.x = x;\r\n  chartArea.y = y;\r\n}\r\ndefaults.set('layout', {\r\n  autoPadding: true,\r\n  padding: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n});\r\nvar layouts = {\r\n  addBox(chart, item) {\r\n    if (!chart.boxes) {\r\n      chart.boxes = [];\r\n    }\r\n    item.fullSize = item.fullSize || false;\r\n    item.position = item.position || 'top';\r\n    item.weight = item.weight || 0;\r\n    item._layers = item._layers || function() {\r\n      return [{\r\n        z: 0,\r\n        draw(chartArea) {\r\n          item.draw(chartArea);\r\n        }\r\n      }];\r\n    };\r\n    chart.boxes.push(item);\r\n  },\r\n  removeBox(chart, layoutItem) {\r\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n    if (index !== -1) {\r\n      chart.boxes.splice(index, 1);\r\n    }\r\n  },\r\n  configure(chart, item, options) {\r\n    item.fullSize = options.fullSize;\r\n    item.position = options.position;\r\n    item.weight = options.weight;\r\n  },\r\n  update(chart, width, height, minPadding) {\r\n    if (!chart) {\r\n      return;\r\n    }\r\n    const padding = toPadding(chart.options.layout.padding);\r\n    const availableWidth = Math.max(width - padding.width, 0);\r\n    const availableHeight = Math.max(height - padding.height, 0);\r\n    const boxes = buildLayoutBoxes(chart.boxes);\r\n    const verticalBoxes = boxes.vertical;\r\n    const horizontalBoxes = boxes.horizontal;\r\n    each(chart.boxes, box => {\r\n      if (typeof box.beforeLayout === 'function') {\r\n        box.beforeLayout();\r\n      }\r\n    });\r\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\r\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n    const params = Object.freeze({\r\n      outerWidth: width,\r\n      outerHeight: height,\r\n      padding,\r\n      availableWidth,\r\n      availableHeight,\r\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n      hBoxMaxHeight: availableHeight / 2\r\n    });\r\n    const maxPadding = Object.assign({}, padding);\r\n    updateMaxPadding(maxPadding, toPadding(minPadding));\r\n    const chartArea = Object.assign({\r\n      maxPadding,\r\n      w: availableWidth,\r\n      h: availableHeight,\r\n      x: padding.left,\r\n      y: padding.top\r\n    }, padding);\r\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\r\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\r\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    }\r\n    handleMaxPadding(chartArea);\r\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\r\n    chartArea.x += chartArea.w;\r\n    chartArea.y += chartArea.h;\r\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\r\n    chart.chartArea = {\r\n      left: chartArea.left,\r\n      top: chartArea.top,\r\n      right: chartArea.left + chartArea.w,\r\n      bottom: chartArea.top + chartArea.h,\r\n      height: chartArea.h,\r\n      width: chartArea.w,\r\n    };\r\n    each(boxes.chartArea, (layout) => {\r\n      const box = layout.box;\r\n      Object.assign(box, chart.chartArea);\r\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\r\n    });\r\n  }\r\n};\r\n\r\nclass BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {}\r\n  releaseContext(context) {\r\n    return false;\r\n  }\r\n  addEventListener(chart, type, listener) {}\r\n  removeEventListener(chart, type, listener) {}\r\n  getDevicePixelRatio() {\r\n    return 1;\r\n  }\r\n  getMaximumSize(element, width, height, aspectRatio) {\r\n    width = Math.max(0, width || element.width);\r\n    height = height || element.height;\r\n    return {\r\n      width,\r\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n    };\r\n  }\r\n  isAttached(canvas) {\r\n    return true;\r\n  }\r\n  updateConfig(config) {\r\n  }\r\n}\r\n\r\nclass BasicPlatform extends BasePlatform {\r\n  acquireContext(item) {\r\n    return item && item.getContext && item.getContext('2d') || null;\r\n  }\r\n  updateConfig(config) {\r\n    config.options.animation = false;\r\n  }\r\n}\r\n\r\nconst EXPANDO_KEY = '$chartjs';\r\nconst EVENT_TYPES = {\r\n  touchstart: 'mousedown',\r\n  touchmove: 'mousemove',\r\n  touchend: 'mouseup',\r\n  pointerenter: 'mouseenter',\r\n  pointerdown: 'mousedown',\r\n  pointermove: 'mousemove',\r\n  pointerup: 'mouseup',\r\n  pointerleave: 'mouseout',\r\n  pointerout: 'mouseout'\r\n};\r\nconst isNullOrEmpty = value => value === null || value === '';\r\nfunction initCanvas(canvas, aspectRatio) {\r\n  const style = canvas.style;\r\n  const renderHeight = canvas.getAttribute('height');\r\n  const renderWidth = canvas.getAttribute('width');\r\n  canvas[EXPANDO_KEY] = {\r\n    initial: {\r\n      height: renderHeight,\r\n      width: renderWidth,\r\n      style: {\r\n        display: style.display,\r\n        height: style.height,\r\n        width: style.width\r\n      }\r\n    }\r\n  };\r\n  style.display = style.display || 'block';\r\n  style.boxSizing = style.boxSizing || 'border-box';\r\n  if (isNullOrEmpty(renderWidth)) {\r\n    const displayWidth = readUsedSize(canvas, 'width');\r\n    if (displayWidth !== undefined) {\r\n      canvas.width = displayWidth;\r\n    }\r\n  }\r\n  if (isNullOrEmpty(renderHeight)) {\r\n    if (canvas.style.height === '') {\r\n      canvas.height = canvas.width / (aspectRatio || 2);\r\n    } else {\r\n      const displayHeight = readUsedSize(canvas, 'height');\r\n      if (displayHeight !== undefined) {\r\n        canvas.height = displayHeight;\r\n      }\r\n    }\r\n  }\r\n  return canvas;\r\n}\r\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\r\nfunction addListener(node, type, listener) {\r\n  node.addEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction removeListener(chart, type, listener) {\r\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction fromNativeEvent(event, chart) {\r\n  const type = EVENT_TYPES[event.type] || event.type;\r\n  const {x, y} = getRelativePosition(event, chart);\r\n  return {\r\n    type,\r\n    chart,\r\n    native: event,\r\n    x: x !== undefined ? x : null,\r\n    y: y !== undefined ? y : null,\r\n  };\r\n}\r\nfunction nodeListContains(nodeList, canvas) {\r\n  for (const node of nodeList) {\r\n    if (node === canvas || node.contains(canvas)) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction createAttachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nfunction createDetachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nconst drpListeningCharts = new Map();\r\nlet oldDevicePixelRatio = 0;\r\nfunction onWindowResize() {\r\n  const dpr = window.devicePixelRatio;\r\n  if (dpr === oldDevicePixelRatio) {\r\n    return;\r\n  }\r\n  oldDevicePixelRatio = dpr;\r\n  drpListeningCharts.forEach((resize, chart) => {\r\n    if (chart.currentDevicePixelRatio !== dpr) {\r\n      resize();\r\n    }\r\n  });\r\n}\r\nfunction listenDevicePixelRatioChanges(chart, resize) {\r\n  if (!drpListeningCharts.size) {\r\n    window.addEventListener('resize', onWindowResize);\r\n  }\r\n  drpListeningCharts.set(chart, resize);\r\n}\r\nfunction unlistenDevicePixelRatioChanges(chart) {\r\n  drpListeningCharts.delete(chart);\r\n  if (!drpListeningCharts.size) {\r\n    window.removeEventListener('resize', onWindowResize);\r\n  }\r\n}\r\nfunction createResizeObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const resize = throttled((width, height) => {\r\n    const w = container.clientWidth;\r\n    listener(width, height);\r\n    if (w < container.clientWidth) {\r\n      listener();\r\n    }\r\n  }, window);\r\n  const observer = new ResizeObserver(entries => {\r\n    const entry = entries[0];\r\n    const width = entry.contentRect.width;\r\n    const height = entry.contentRect.height;\r\n    if (width === 0 && height === 0) {\r\n      return;\r\n    }\r\n    resize(width, height);\r\n  });\r\n  observer.observe(container);\r\n  listenDevicePixelRatioChanges(chart, resize);\r\n  return observer;\r\n}\r\nfunction releaseObserver(chart, type, observer) {\r\n  if (observer) {\r\n    observer.disconnect();\r\n  }\r\n  if (type === 'resize') {\r\n    unlistenDevicePixelRatioChanges(chart);\r\n  }\r\n}\r\nfunction createProxyAndListen(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const proxy = throttled((event) => {\r\n    if (chart.ctx !== null) {\r\n      listener(fromNativeEvent(event, chart));\r\n    }\r\n  }, chart, (args) => {\r\n    const event = args[0];\r\n    return [event, event.offsetX, event.offsetY];\r\n  });\r\n  addListener(canvas, type, proxy);\r\n  return proxy;\r\n}\r\nclass DomPlatform extends BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {\r\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n    if (context && context.canvas === canvas) {\r\n      initCanvas(canvas, aspectRatio);\r\n      return context;\r\n    }\r\n    return null;\r\n  }\r\n  releaseContext(context) {\r\n    const canvas = context.canvas;\r\n    if (!canvas[EXPANDO_KEY]) {\r\n      return false;\r\n    }\r\n    const initial = canvas[EXPANDO_KEY].initial;\r\n    ['height', 'width'].forEach((prop) => {\r\n      const value = initial[prop];\r\n      if (isNullOrUndef(value)) {\r\n        canvas.removeAttribute(prop);\r\n      } else {\r\n        canvas.setAttribute(prop, value);\r\n      }\r\n    });\r\n    const style = initial.style || {};\r\n    Object.keys(style).forEach((key) => {\r\n      canvas.style[key] = style[key];\r\n    });\r\n    canvas.width = canvas.width;\r\n    delete canvas[EXPANDO_KEY];\r\n    return true;\r\n  }\r\n  addEventListener(chart, type, listener) {\r\n    this.removeEventListener(chart, type);\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const handlers = {\r\n      attach: createAttachObserver,\r\n      detach: createDetachObserver,\r\n      resize: createResizeObserver\r\n    };\r\n    const handler = handlers[type] || createProxyAndListen;\r\n    proxies[type] = handler(chart, type, listener);\r\n  }\r\n  removeEventListener(chart, type) {\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const proxy = proxies[type];\r\n    if (!proxy) {\r\n      return;\r\n    }\r\n    const handlers = {\r\n      attach: releaseObserver,\r\n      detach: releaseObserver,\r\n      resize: releaseObserver\r\n    };\r\n    const handler = handlers[type] || removeListener;\r\n    handler(chart, type, proxy);\r\n    proxies[type] = undefined;\r\n  }\r\n  getDevicePixelRatio() {\r\n    return window.devicePixelRatio;\r\n  }\r\n  getMaximumSize(canvas, width, height, aspectRatio) {\r\n    return getMaximumSize(canvas, width, height, aspectRatio);\r\n  }\r\n  isAttached(canvas) {\r\n    const container = _getParentNode(canvas);\r\n    return !!(container && container.isConnected);\r\n  }\r\n}\r\n\r\nfunction _detectPlatform(canvas) {\r\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\r\n    return BasicPlatform;\r\n  }\r\n  return DomPlatform;\r\n}\r\n\r\nclass PluginService {\r\n  constructor() {\r\n    this._init = [];\r\n  }\r\n  notify(chart, hook, args, filter) {\r\n    if (hook === 'beforeInit') {\r\n      this._init = this._createDescriptors(chart, true);\r\n      this._notify(this._init, chart, 'install');\r\n    }\r\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\r\n    const result = this._notify(descriptors, chart, hook, args);\r\n    if (hook === 'afterDestroy') {\r\n      this._notify(descriptors, chart, 'stop');\r\n      this._notify(this._init, chart, 'uninstall');\r\n    }\r\n    return result;\r\n  }\r\n  _notify(descriptors, chart, hook, args) {\r\n    args = args || {};\r\n    for (const descriptor of descriptors) {\r\n      const plugin = descriptor.plugin;\r\n      const method = plugin[hook];\r\n      const params = [chart, args, descriptor.options];\r\n      if (callback(method, params, plugin) === false && args.cancelable) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  invalidate() {\r\n    if (!isNullOrUndef(this._cache)) {\r\n      this._oldCache = this._cache;\r\n      this._cache = undefined;\r\n    }\r\n  }\r\n  _descriptors(chart) {\r\n    if (this._cache) {\r\n      return this._cache;\r\n    }\r\n    const descriptors = this._cache = this._createDescriptors(chart);\r\n    this._notifyStateChanges(chart);\r\n    return descriptors;\r\n  }\r\n  _createDescriptors(chart, all) {\r\n    const config = chart && chart.config;\r\n    const options = valueOrDefault(config.options && config.options.plugins, {});\r\n    const plugins = allPlugins(config);\r\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n  }\r\n  _notifyStateChanges(chart) {\r\n    const previousDescriptors = this._oldCache || [];\r\n    const descriptors = this._cache;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\r\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n  }\r\n}\r\nfunction allPlugins(config) {\r\n  const localIds = {};\r\n  const plugins = [];\r\n  const keys = Object.keys(registry.plugins.items);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    plugins.push(registry.getPlugin(keys[i]));\r\n  }\r\n  const local = config.plugins || [];\r\n  for (let i = 0; i < local.length; i++) {\r\n    const plugin = local[i];\r\n    if (plugins.indexOf(plugin) === -1) {\r\n      plugins.push(plugin);\r\n      localIds[plugin.id] = true;\r\n    }\r\n  }\r\n  return {plugins, localIds};\r\n}\r\nfunction getOpts(options, all) {\r\n  if (!all && options === false) {\r\n    return null;\r\n  }\r\n  if (options === true) {\r\n    return {};\r\n  }\r\n  return options;\r\n}\r\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\r\n  const result = [];\r\n  const context = chart.getContext();\r\n  for (const plugin of plugins) {\r\n    const id = plugin.id;\r\n    const opts = getOpts(options[id], all);\r\n    if (opts === null) {\r\n      continue;\r\n    }\r\n    result.push({\r\n      plugin,\r\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\r\n    });\r\n  }\r\n  return result;\r\n}\r\nfunction pluginOpts(config, {plugin, local}, opts, context) {\r\n  const keys = config.pluginScopeKeys(plugin);\r\n  const scopes = config.getOptionScopes(opts, keys);\r\n  if (local && plugin.defaults) {\r\n    scopes.push(plugin.defaults);\r\n  }\r\n  return config.createResolver(scopes, context, [''], {\r\n    scriptable: false,\r\n    indexable: false,\r\n    allKeys: true\r\n  });\r\n}\r\n\r\nfunction getIndexAxis(type, options) {\r\n  const datasetDefaults = defaults.datasets[type] || {};\r\n  const datasetOptions = (options.datasets || {})[type] || {};\r\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n}\r\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\r\n  let axis = id;\r\n  if (id === '_index_') {\r\n    axis = indexAxis;\r\n  } else if (id === '_value_') {\r\n    axis = indexAxis === 'x' ? 'y' : 'x';\r\n  }\r\n  return axis;\r\n}\r\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n  return axis === indexAxis ? '_index_' : '_value_';\r\n}\r\nfunction axisFromPosition(position) {\r\n  if (position === 'top' || position === 'bottom') {\r\n    return 'x';\r\n  }\r\n  if (position === 'left' || position === 'right') {\r\n    return 'y';\r\n  }\r\n}\r\nfunction determineAxis(id, scaleOptions) {\r\n  if (id === 'x' || id === 'y') {\r\n    return id;\r\n  }\r\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\r\n}\r\nfunction mergeScaleConfig(config, options) {\r\n  const chartDefaults = overrides[config.type] || {scales: {}};\r\n  const configScales = options.scales || {};\r\n  const chartIndexAxis = getIndexAxis(config.type, options);\r\n  const firstIDs = Object.create(null);\r\n  const scales = Object.create(null);\r\n  Object.keys(configScales).forEach(id => {\r\n    const scaleConf = configScales[id];\r\n    if (!isObject(scaleConf)) {\r\n      return console.error(`Invalid scale configuration for scale: ${id}`);\r\n    }\r\n    if (scaleConf._proxy) {\r\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\r\n    }\r\n    const axis = determineAxis(id, scaleConf);\r\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n    const defaultScaleOptions = chartDefaults.scales || {};\r\n    firstIDs[axis] = firstIDs[axis] || id;\r\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\r\n  });\r\n  config.data.datasets.forEach(dataset => {\r\n    const type = dataset.type || config.type;\r\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n    const datasetDefaults = overrides[type] || {};\r\n    const defaultScaleOptions = datasetDefaults.scales || {};\r\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\r\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\r\n      scales[id] = scales[id] || Object.create(null);\r\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\r\n    });\r\n  });\r\n  Object.keys(scales).forEach(key => {\r\n    const scale = scales[key];\r\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\r\n  });\r\n  return scales;\r\n}\r\nfunction initOptions(config) {\r\n  const options = config.options || (config.options = {});\r\n  options.plugins = valueOrDefault(options.plugins, {});\r\n  options.scales = mergeScaleConfig(config, options);\r\n}\r\nfunction initData(data) {\r\n  data = data || {};\r\n  data.datasets = data.datasets || [];\r\n  data.labels = data.labels || [];\r\n  return data;\r\n}\r\nfunction initConfig(config) {\r\n  config = config || {};\r\n  config.data = initData(config.data);\r\n  initOptions(config);\r\n  return config;\r\n}\r\nconst keyCache = new Map();\r\nconst keysCached = new Set();\r\nfunction cachedKeys(cacheKey, generate) {\r\n  let keys = keyCache.get(cacheKey);\r\n  if (!keys) {\r\n    keys = generate();\r\n    keyCache.set(cacheKey, keys);\r\n    keysCached.add(keys);\r\n  }\r\n  return keys;\r\n}\r\nconst addIfFound = (set, obj, key) => {\r\n  const opts = resolveObjectKey(obj, key);\r\n  if (opts !== undefined) {\r\n    set.add(opts);\r\n  }\r\n};\r\nclass Config {\r\n  constructor(config) {\r\n    this._config = initConfig(config);\r\n    this._scopeCache = new Map();\r\n    this._resolverCache = new Map();\r\n  }\r\n  get platform() {\r\n    return this._config.platform;\r\n  }\r\n  get type() {\r\n    return this._config.type;\r\n  }\r\n  set type(type) {\r\n    this._config.type = type;\r\n  }\r\n  get data() {\r\n    return this._config.data;\r\n  }\r\n  set data(data) {\r\n    this._config.data = initData(data);\r\n  }\r\n  get options() {\r\n    return this._config.options;\r\n  }\r\n  set options(options) {\r\n    this._config.options = options;\r\n  }\r\n  get plugins() {\r\n    return this._config.plugins;\r\n  }\r\n  update() {\r\n    const config = this._config;\r\n    this.clearCache();\r\n    initOptions(config);\r\n  }\r\n  clearCache() {\r\n    this._scopeCache.clear();\r\n    this._resolverCache.clear();\r\n  }\r\n  datasetScopeKeys(datasetType) {\r\n    return cachedKeys(datasetType,\r\n      () => [[\r\n        `datasets.${datasetType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  datasetAnimationScopeKeys(datasetType, transition) {\r\n    return cachedKeys(`${datasetType}.transition.${transition}`,\r\n      () => [\r\n        [\r\n          `datasets.${datasetType}.transitions.${transition}`,\r\n          `transitions.${transition}`,\r\n        ],\r\n        [\r\n          `datasets.${datasetType}`,\r\n          ''\r\n        ]\r\n      ]);\r\n  }\r\n  datasetElementScopeKeys(datasetType, elementType) {\r\n    return cachedKeys(`${datasetType}-${elementType}`,\r\n      () => [[\r\n        `datasets.${datasetType}.elements.${elementType}`,\r\n        `datasets.${datasetType}`,\r\n        `elements.${elementType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  pluginScopeKeys(plugin) {\r\n    const id = plugin.id;\r\n    const type = this.type;\r\n    return cachedKeys(`${type}-plugin-${id}`,\r\n      () => [[\r\n        `plugins.${id}`,\r\n        ...plugin.additionalOptionScopes || [],\r\n      ]]);\r\n  }\r\n  _cachedScopes(mainScope, resetCache) {\r\n    const _scopeCache = this._scopeCache;\r\n    let cache = _scopeCache.get(mainScope);\r\n    if (!cache || resetCache) {\r\n      cache = new Map();\r\n      _scopeCache.set(mainScope, cache);\r\n    }\r\n    return cache;\r\n  }\r\n  getOptionScopes(mainScope, keyLists, resetCache) {\r\n    const {options, type} = this;\r\n    const cache = this._cachedScopes(mainScope, resetCache);\r\n    const cached = cache.get(keyLists);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const scopes = new Set();\r\n    keyLists.forEach(keys => {\r\n      if (mainScope) {\r\n        scopes.add(mainScope);\r\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\r\n      }\r\n      keys.forEach(key => addIfFound(scopes, options, key));\r\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\r\n      keys.forEach(key => addIfFound(scopes, defaults, key));\r\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\r\n    });\r\n    const array = Array.from(scopes);\r\n    if (array.length === 0) {\r\n      array.push(Object.create(null));\r\n    }\r\n    if (keysCached.has(keyLists)) {\r\n      cache.set(keyLists, array);\r\n    }\r\n    return array;\r\n  }\r\n  chartOptionScopes() {\r\n    const {options, type} = this;\r\n    return [\r\n      options,\r\n      overrides[type] || {},\r\n      defaults.datasets[type] || {},\r\n      {type},\r\n      defaults,\r\n      descriptors\r\n    ];\r\n  }\r\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\r\n    const result = {$shared: true};\r\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\r\n    let options = resolver;\r\n    if (needContext(resolver, names)) {\r\n      result.$shared = false;\r\n      context = isFunction(context) ? context() : context;\r\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n      options = _attachContext(resolver, context, subResolver);\r\n    }\r\n    for (const prop of names) {\r\n      result[prop] = options[prop];\r\n    }\r\n    return result;\r\n  }\r\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\r\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\r\n    return isObject(context)\r\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\r\n      : resolver;\r\n  }\r\n}\r\nfunction getResolver(resolverCache, scopes, prefixes) {\r\n  let cache = resolverCache.get(scopes);\r\n  if (!cache) {\r\n    cache = new Map();\r\n    resolverCache.set(scopes, cache);\r\n  }\r\n  const cacheKey = prefixes.join();\r\n  let cached = cache.get(cacheKey);\r\n  if (!cached) {\r\n    const resolver = _createResolver(scopes, prefixes);\r\n    cached = {\r\n      resolver,\r\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\r\n    };\r\n    cache.set(cacheKey, cached);\r\n  }\r\n  return cached;\r\n}\r\nconst hasFunction = value => isObject(value)\r\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\r\nfunction needContext(proxy, names) {\r\n  const {isScriptable, isIndexable} = _descriptors(proxy);\r\n  for (const prop of names) {\r\n    const scriptable = isScriptable(prop);\r\n    const indexable = isIndexable(prop);\r\n    const value = (indexable || scriptable) && proxy[prop];\r\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\r\n      || (indexable && isArray(value))) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nvar version = \"3.9.1\";\r\n\r\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\r\nfunction positionIsHorizontal(position, axis) {\r\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\r\n}\r\nfunction compare2Level(l1, l2) {\r\n  return function(a, b) {\r\n    return a[l1] === b[l1]\r\n      ? a[l2] - b[l2]\r\n      : a[l1] - b[l1];\r\n  };\r\n}\r\nfunction onAnimationsComplete(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  chart.notifyPlugins('afterRender');\r\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\r\n}\r\nfunction onAnimationProgress(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\r\n}\r\nfunction getCanvas(item) {\r\n  if (_isDomSupported() && typeof item === 'string') {\r\n    item = document.getElementById(item);\r\n  } else if (item && item.length) {\r\n    item = item[0];\r\n  }\r\n  if (item && item.canvas) {\r\n    item = item.canvas;\r\n  }\r\n  return item;\r\n}\r\nconst instances = {};\r\nconst getChart = (key) => {\r\n  const canvas = getCanvas(key);\r\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\r\n};\r\nfunction moveNumericKeys(obj, start, move) {\r\n  const keys = Object.keys(obj);\r\n  for (const key of keys) {\r\n    const intKey = +key;\r\n    if (intKey >= start) {\r\n      const value = obj[key];\r\n      delete obj[key];\r\n      if (move > 0 || intKey > start) {\r\n        obj[intKey + move] = value;\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\r\n  if (!inChartArea || e.type === 'mouseout') {\r\n    return null;\r\n  }\r\n  if (isClick) {\r\n    return lastEvent;\r\n  }\r\n  return e;\r\n}\r\nclass Chart {\r\n  constructor(item, userConfig) {\r\n    const config = this.config = new Config(userConfig);\r\n    const initialCanvas = getCanvas(item);\r\n    const existingChart = getChart(initialCanvas);\r\n    if (existingChart) {\r\n      throw new Error(\r\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\r\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\r\n      );\r\n    }\r\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\r\n    this.platform.updateConfig(config);\r\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n    const canvas = context && context.canvas;\r\n    const height = canvas && canvas.height;\r\n    const width = canvas && canvas.width;\r\n    this.id = uid();\r\n    this.ctx = context;\r\n    this.canvas = canvas;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._options = options;\r\n    this._aspectRatio = this.aspectRatio;\r\n    this._layers = [];\r\n    this._metasets = [];\r\n    this._stacks = undefined;\r\n    this.boxes = [];\r\n    this.currentDevicePixelRatio = undefined;\r\n    this.chartArea = undefined;\r\n    this._active = [];\r\n    this._lastEvent = undefined;\r\n    this._listeners = {};\r\n    this._responsiveListeners = undefined;\r\n    this._sortedMetasets = [];\r\n    this.scales = {};\r\n    this._plugins = new PluginService();\r\n    this.$proxies = {};\r\n    this._hiddenIndices = {};\r\n    this.attached = false;\r\n    this._animationsDisabled = undefined;\r\n    this.$context = undefined;\r\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\r\n    this._dataChanges = [];\r\n    instances[this.id] = this;\r\n    if (!context || !canvas) {\r\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n      return;\r\n    }\r\n    animator.listen(this, 'complete', onAnimationsComplete);\r\n    animator.listen(this, 'progress', onAnimationProgress);\r\n    this._initialize();\r\n    if (this.attached) {\r\n      this.update();\r\n    }\r\n  }\r\n  get aspectRatio() {\r\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\r\n    if (!isNullOrUndef(aspectRatio)) {\r\n      return aspectRatio;\r\n    }\r\n    if (maintainAspectRatio && _aspectRatio) {\r\n      return _aspectRatio;\r\n    }\r\n    return height ? width / height : null;\r\n  }\r\n  get data() {\r\n    return this.config.data;\r\n  }\r\n  set data(data) {\r\n    this.config.data = data;\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n  set options(options) {\r\n    this.config.options = options;\r\n  }\r\n  _initialize() {\r\n    this.notifyPlugins('beforeInit');\r\n    if (this.options.responsive) {\r\n      this.resize();\r\n    } else {\r\n      retinaScale(this, this.options.devicePixelRatio);\r\n    }\r\n    this.bindEvents();\r\n    this.notifyPlugins('afterInit');\r\n    return this;\r\n  }\r\n  clear() {\r\n    clearCanvas(this.canvas, this.ctx);\r\n    return this;\r\n  }\r\n  stop() {\r\n    animator.stop(this);\r\n    return this;\r\n  }\r\n  resize(width, height) {\r\n    if (!animator.running(this)) {\r\n      this._resize(width, height);\r\n    } else {\r\n      this._resizeBeforeDraw = {width, height};\r\n    }\r\n  }\r\n  _resize(width, height) {\r\n    const options = this.options;\r\n    const canvas = this.canvas;\r\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\r\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\r\n    const mode = this.width ? 'resize' : 'attach';\r\n    this.width = newSize.width;\r\n    this.height = newSize.height;\r\n    this._aspectRatio = this.aspectRatio;\r\n    if (!retinaScale(this, newRatio, true)) {\r\n      return;\r\n    }\r\n    this.notifyPlugins('resize', {size: newSize});\r\n    callback(options.onResize, [this, newSize], this);\r\n    if (this.attached) {\r\n      if (this._doResize(mode)) {\r\n        this.render();\r\n      }\r\n    }\r\n  }\r\n  ensureScalesHaveIDs() {\r\n    const options = this.options;\r\n    const scalesOptions = options.scales || {};\r\n    each(scalesOptions, (axisOptions, axisID) => {\r\n      axisOptions.id = axisID;\r\n    });\r\n  }\r\n  buildOrUpdateScales() {\r\n    const options = this.options;\r\n    const scaleOpts = options.scales;\r\n    const scales = this.scales;\r\n    const updated = Object.keys(scales).reduce((obj, id) => {\r\n      obj[id] = false;\r\n      return obj;\r\n    }, {});\r\n    let items = [];\r\n    if (scaleOpts) {\r\n      items = items.concat(\r\n        Object.keys(scaleOpts).map((id) => {\r\n          const scaleOptions = scaleOpts[id];\r\n          const axis = determineAxis(id, scaleOptions);\r\n          const isRadial = axis === 'r';\r\n          const isHorizontal = axis === 'x';\r\n          return {\r\n            options: scaleOptions,\r\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n          };\r\n        })\r\n      );\r\n    }\r\n    each(items, (item) => {\r\n      const scaleOptions = item.options;\r\n      const id = scaleOptions.id;\r\n      const axis = determineAxis(id, scaleOptions);\r\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n        scaleOptions.position = item.dposition;\r\n      }\r\n      updated[id] = true;\r\n      let scale = null;\r\n      if (id in scales && scales[id].type === scaleType) {\r\n        scale = scales[id];\r\n      } else {\r\n        const scaleClass = registry.getScale(scaleType);\r\n        scale = new scaleClass({\r\n          id,\r\n          type: scaleType,\r\n          ctx: this.ctx,\r\n          chart: this\r\n        });\r\n        scales[scale.id] = scale;\r\n      }\r\n      scale.init(scaleOptions, options);\r\n    });\r\n    each(updated, (hasUpdated, id) => {\r\n      if (!hasUpdated) {\r\n        delete scales[id];\r\n      }\r\n    });\r\n    each(scales, (scale) => {\r\n      layouts.configure(this, scale, scale.options);\r\n      layouts.addBox(this, scale);\r\n    });\r\n  }\r\n  _updateMetasets() {\r\n    const metasets = this._metasets;\r\n    const numData = this.data.datasets.length;\r\n    const numMeta = metasets.length;\r\n    metasets.sort((a, b) => a.index - b.index);\r\n    if (numMeta > numData) {\r\n      for (let i = numData; i < numMeta; ++i) {\r\n        this._destroyDatasetMeta(i);\r\n      }\r\n      metasets.splice(numData, numMeta - numData);\r\n    }\r\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n  }\r\n  _removeUnreferencedMetasets() {\r\n    const {_metasets: metasets, data: {datasets}} = this;\r\n    if (metasets.length > datasets.length) {\r\n      delete this._stacks;\r\n    }\r\n    metasets.forEach((meta, index) => {\r\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\r\n        this._destroyDatasetMeta(index);\r\n      }\r\n    });\r\n  }\r\n  buildOrUpdateControllers() {\r\n    const newControllers = [];\r\n    const datasets = this.data.datasets;\r\n    let i, ilen;\r\n    this._removeUnreferencedMetasets();\r\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\r\n      const dataset = datasets[i];\r\n      let meta = this.getDatasetMeta(i);\r\n      const type = dataset.type || this.config.type;\r\n      if (meta.type && meta.type !== type) {\r\n        this._destroyDatasetMeta(i);\r\n        meta = this.getDatasetMeta(i);\r\n      }\r\n      meta.type = type;\r\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\r\n      meta.order = dataset.order || 0;\r\n      meta.index = i;\r\n      meta.label = '' + dataset.label;\r\n      meta.visible = this.isDatasetVisible(i);\r\n      if (meta.controller) {\r\n        meta.controller.updateIndex(i);\r\n        meta.controller.linkScales();\r\n      } else {\r\n        const ControllerClass = registry.getController(type);\r\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\r\n        Object.assign(ControllerClass.prototype, {\r\n          dataElementType: registry.getElement(dataElementType),\r\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n        });\r\n        meta.controller = new ControllerClass(this, i);\r\n        newControllers.push(meta.controller);\r\n      }\r\n    }\r\n    this._updateMetasets();\r\n    return newControllers;\r\n  }\r\n  _resetElements() {\r\n    each(this.data.datasets, (dataset, datasetIndex) => {\r\n      this.getDatasetMeta(datasetIndex).controller.reset();\r\n    }, this);\r\n  }\r\n  reset() {\r\n    this._resetElements();\r\n    this.notifyPlugins('reset');\r\n  }\r\n  update(mode) {\r\n    const config = this.config;\r\n    config.update();\r\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    const animsDisabled = this._animationsDisabled = !options.animation;\r\n    this._updateScales();\r\n    this._checkEventBindings();\r\n    this._updateHiddenIndices();\r\n    this._plugins.invalidate();\r\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const newControllers = this.buildOrUpdateControllers();\r\n    this.notifyPlugins('beforeElementsUpdate');\r\n    let minPadding = 0;\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\r\n      const {controller} = this.getDatasetMeta(i);\r\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n      controller.buildOrUpdateElements(reset);\r\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n    }\r\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\r\n    this._updateLayout(minPadding);\r\n    if (!animsDisabled) {\r\n      each(newControllers, (controller) => {\r\n        controller.reset();\r\n      });\r\n    }\r\n    this._updateDatasets(mode);\r\n    this.notifyPlugins('afterUpdate', {mode});\r\n    this._layers.sort(compare2Level('z', '_idx'));\r\n    const {_active, _lastEvent} = this;\r\n    if (_lastEvent) {\r\n      this._eventHandler(_lastEvent, true);\r\n    } else if (_active.length) {\r\n      this._updateHoverStyles(_active, _active, true);\r\n    }\r\n    this.render();\r\n  }\r\n  _updateScales() {\r\n    each(this.scales, (scale) => {\r\n      layouts.removeBox(this, scale);\r\n    });\r\n    this.ensureScalesHaveIDs();\r\n    this.buildOrUpdateScales();\r\n  }\r\n  _checkEventBindings() {\r\n    const options = this.options;\r\n    const existingEvents = new Set(Object.keys(this._listeners));\r\n    const newEvents = new Set(options.events);\r\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\r\n      this.unbindEvents();\r\n      this.bindEvents();\r\n    }\r\n  }\r\n  _updateHiddenIndices() {\r\n    const {_hiddenIndices} = this;\r\n    const changes = this._getUniformDataChanges() || [];\r\n    for (const {method, start, count} of changes) {\r\n      const move = method === '_removeElements' ? -count : count;\r\n      moveNumericKeys(_hiddenIndices, start, move);\r\n    }\r\n  }\r\n  _getUniformDataChanges() {\r\n    const _dataChanges = this._dataChanges;\r\n    if (!_dataChanges || !_dataChanges.length) {\r\n      return;\r\n    }\r\n    this._dataChanges = [];\r\n    const datasetCount = this.data.datasets.length;\r\n    const makeSet = (idx) => new Set(\r\n      _dataChanges\r\n        .filter(c => c[0] === idx)\r\n        .map((c, i) => i + ',' + c.splice(1).join(','))\r\n    );\r\n    const changeSet = makeSet(0);\r\n    for (let i = 1; i < datasetCount; i++) {\r\n      if (!setsEqual(changeSet, makeSet(i))) {\r\n        return;\r\n      }\r\n    }\r\n    return Array.from(changeSet)\r\n      .map(c => c.split(','))\r\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\r\n  }\r\n  _updateLayout(minPadding) {\r\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    layouts.update(this, this.width, this.height, minPadding);\r\n    const area = this.chartArea;\r\n    const noArea = area.width <= 0 || area.height <= 0;\r\n    this._layers = [];\r\n    each(this.boxes, (box) => {\r\n      if (noArea && box.position === 'chartArea') {\r\n        return;\r\n      }\r\n      if (box.configure) {\r\n        box.configure();\r\n      }\r\n      this._layers.push(...box._layers());\r\n    }, this);\r\n    this._layers.forEach((item, index) => {\r\n      item._idx = index;\r\n    });\r\n    this.notifyPlugins('afterLayout');\r\n  }\r\n  _updateDatasets(mode) {\r\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this.getDatasetMeta(i).controller.configure();\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\r\n    }\r\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\r\n  }\r\n  _updateDataset(index, mode) {\r\n    const meta = this.getDatasetMeta(index);\r\n    const args = {meta, index, mode, cancelable: true};\r\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n      return;\r\n    }\r\n    meta.controller._update(mode);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetUpdate', args);\r\n  }\r\n  render() {\r\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    if (animator.has(this)) {\r\n      if (this.attached && !animator.running(this)) {\r\n        animator.start(this);\r\n      }\r\n    } else {\r\n      this.draw();\r\n      onAnimationsComplete({chart: this});\r\n    }\r\n  }\r\n  draw() {\r\n    let i;\r\n    if (this._resizeBeforeDraw) {\r\n      const {width, height} = this._resizeBeforeDraw;\r\n      this._resize(width, height);\r\n      this._resizeBeforeDraw = null;\r\n    }\r\n    this.clear();\r\n    if (this.width <= 0 || this.height <= 0) {\r\n      return;\r\n    }\r\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const layers = this._layers;\r\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this._drawDatasets();\r\n    for (; i < layers.length; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this.notifyPlugins('afterDraw');\r\n  }\r\n  _getSortedDatasetMetas(filterVisible) {\r\n    const metasets = this._sortedMetasets;\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n      const meta = metasets[i];\r\n      if (!filterVisible || meta.visible) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  getSortedVisibleDatasetMetas() {\r\n    return this._getSortedDatasetMetas(true);\r\n  }\r\n  _drawDatasets() {\r\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const metasets = this.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      this._drawDataset(metasets[i]);\r\n    }\r\n    this.notifyPlugins('afterDatasetsDraw');\r\n  }\r\n  _drawDataset(meta) {\r\n    const ctx = this.ctx;\r\n    const clip = meta._clip;\r\n    const useClip = !clip.disabled;\r\n    const area = this.chartArea;\r\n    const args = {\r\n      meta,\r\n      index: meta.index,\r\n      cancelable: true\r\n    };\r\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (useClip) {\r\n      clipArea(ctx, {\r\n        left: clip.left === false ? 0 : area.left - clip.left,\r\n        right: clip.right === false ? this.width : area.right + clip.right,\r\n        top: clip.top === false ? 0 : area.top - clip.top,\r\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\r\n      });\r\n    }\r\n    meta.controller.draw();\r\n    if (useClip) {\r\n      unclipArea(ctx);\r\n    }\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetDraw', args);\r\n  }\r\n  isPointInArea(point) {\r\n    return _isPointInArea(point, this.chartArea, this._minPadding);\r\n  }\r\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n    const method = Interaction.modes[mode];\r\n    if (typeof method === 'function') {\r\n      return method(this, e, options, useFinalPosition);\r\n    }\r\n    return [];\r\n  }\r\n  getDatasetMeta(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    const metasets = this._metasets;\r\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\r\n    if (!meta) {\r\n      meta = {\r\n        type: null,\r\n        data: [],\r\n        dataset: null,\r\n        controller: null,\r\n        hidden: null,\r\n        xAxisID: null,\r\n        yAxisID: null,\r\n        order: dataset && dataset.order || 0,\r\n        index: datasetIndex,\r\n        _dataset: dataset,\r\n        _parsed: [],\r\n        _sorted: false\r\n      };\r\n      metasets.push(meta);\r\n    }\r\n    return meta;\r\n  }\r\n  getContext() {\r\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\r\n  }\r\n  getVisibleDatasetCount() {\r\n    return this.getSortedVisibleDatasetMetas().length;\r\n  }\r\n  isDatasetVisible(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    if (!dataset) {\r\n      return false;\r\n    }\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n  }\r\n  setDatasetVisibility(datasetIndex, visible) {\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    meta.hidden = !visible;\r\n  }\r\n  toggleDataVisibility(index) {\r\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n  }\r\n  getDataVisibility(index) {\r\n    return !this._hiddenIndices[index];\r\n  }\r\n  _updateVisibility(datasetIndex, dataIndex, visible) {\r\n    const mode = visible ? 'show' : 'hide';\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    const anims = meta.controller._resolveAnimations(undefined, mode);\r\n    if (defined(dataIndex)) {\r\n      meta.data[dataIndex].hidden = !visible;\r\n      this.update();\r\n    } else {\r\n      this.setDatasetVisibility(datasetIndex, visible);\r\n      anims.update(meta, {visible});\r\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n    }\r\n  }\r\n  hide(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, false);\r\n  }\r\n  show(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, true);\r\n  }\r\n  _destroyDatasetMeta(datasetIndex) {\r\n    const meta = this._metasets[datasetIndex];\r\n    if (meta && meta.controller) {\r\n      meta.controller._destroy();\r\n    }\r\n    delete this._metasets[datasetIndex];\r\n  }\r\n  _stop() {\r\n    let i, ilen;\r\n    this.stop();\r\n    animator.remove(this);\r\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._destroyDatasetMeta(i);\r\n    }\r\n  }\r\n  destroy() {\r\n    this.notifyPlugins('beforeDestroy');\r\n    const {canvas, ctx} = this;\r\n    this._stop();\r\n    this.config.clearCache();\r\n    if (canvas) {\r\n      this.unbindEvents();\r\n      clearCanvas(canvas, ctx);\r\n      this.platform.releaseContext(ctx);\r\n      this.canvas = null;\r\n      this.ctx = null;\r\n    }\r\n    this.notifyPlugins('destroy');\r\n    delete instances[this.id];\r\n    this.notifyPlugins('afterDestroy');\r\n  }\r\n  toBase64Image(...args) {\r\n    return this.canvas.toDataURL(...args);\r\n  }\r\n  bindEvents() {\r\n    this.bindUserEvents();\r\n    if (this.options.responsive) {\r\n      this.bindResponsiveEvents();\r\n    } else {\r\n      this.attached = true;\r\n    }\r\n  }\r\n  bindUserEvents() {\r\n    const listeners = this._listeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const listener = (e, x, y) => {\r\n      e.offsetX = x;\r\n      e.offsetY = y;\r\n      this._eventHandler(e);\r\n    };\r\n    each(this.options.events, (type) => _add(type, listener));\r\n  }\r\n  bindResponsiveEvents() {\r\n    if (!this._responsiveListeners) {\r\n      this._responsiveListeners = {};\r\n    }\r\n    const listeners = this._responsiveListeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const _remove = (type, listener) => {\r\n      if (listeners[type]) {\r\n        platform.removeEventListener(this, type, listener);\r\n        delete listeners[type];\r\n      }\r\n    };\r\n    const listener = (width, height) => {\r\n      if (this.canvas) {\r\n        this.resize(width, height);\r\n      }\r\n    };\r\n    let detached;\r\n    const attached = () => {\r\n      _remove('attach', attached);\r\n      this.attached = true;\r\n      this.resize();\r\n      _add('resize', listener);\r\n      _add('detach', detached);\r\n    };\r\n    detached = () => {\r\n      this.attached = false;\r\n      _remove('resize', listener);\r\n      this._stop();\r\n      this._resize(0, 0);\r\n      _add('attach', attached);\r\n    };\r\n    if (platform.isAttached(this.canvas)) {\r\n      attached();\r\n    } else {\r\n      detached();\r\n    }\r\n  }\r\n  unbindEvents() {\r\n    each(this._listeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._listeners = {};\r\n    each(this._responsiveListeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._responsiveListeners = undefined;\r\n  }\r\n  updateHoverStyle(items, mode, enabled) {\r\n    const prefix = enabled ? 'set' : 'remove';\r\n    let meta, item, i, ilen;\r\n    if (mode === 'dataset') {\r\n      meta = this.getDatasetMeta(items[0].datasetIndex);\r\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      item = items[i];\r\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n      if (controller) {\r\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n      }\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements) {\r\n    const lastActive = this._active || [];\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('No dataset found at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed) {\r\n      this._active = active;\r\n      this._lastEvent = null;\r\n      this._updateHoverStyles(active, lastActive);\r\n    }\r\n  }\r\n  notifyPlugins(hook, args, filter) {\r\n    return this._plugins.notify(this, hook, args, filter);\r\n  }\r\n  _updateHoverStyles(active, lastActive, replay) {\r\n    const hoverOptions = this.options.hover;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n    const deactivated = diff(lastActive, active);\r\n    const activated = replay ? active : diff(active, lastActive);\r\n    if (deactivated.length) {\r\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n    }\r\n    if (activated.length && hoverOptions.mode) {\r\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\r\n    }\r\n  }\r\n  _eventHandler(e, replay) {\r\n    const args = {\r\n      event: e,\r\n      replay,\r\n      cancelable: true,\r\n      inChartArea: this.isPointInArea(e)\r\n    };\r\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\r\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\r\n      return;\r\n    }\r\n    const changed = this._handleEvent(e, replay, args.inChartArea);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterEvent', args, eventFilter);\r\n    if (changed || args.changed) {\r\n      this.render();\r\n    }\r\n    return this;\r\n  }\r\n  _handleEvent(e, replay, inChartArea) {\r\n    const {_active: lastActive = [], options} = this;\r\n    const useFinalPosition = replay;\r\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\r\n    const isClick = _isClickEvent(e);\r\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\r\n    if (inChartArea) {\r\n      this._lastEvent = null;\r\n      callback(options.onHover, [e, active, this], this);\r\n      if (isClick) {\r\n        callback(options.onClick, [e, active, this], this);\r\n      }\r\n    }\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed || replay) {\r\n      this._active = active;\r\n      this._updateHoverStyles(active, lastActive, replay);\r\n    }\r\n    this._lastEvent = lastEvent;\r\n    return changed;\r\n  }\r\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n    if (!inChartArea) {\r\n      return lastActive;\r\n    }\r\n    const hoverOptions = this.options.hover;\r\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n  }\r\n}\r\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\r\nconst enumerable = true;\r\nObject.defineProperties(Chart, {\r\n  defaults: {\r\n    enumerable,\r\n    value: defaults\r\n  },\r\n  instances: {\r\n    enumerable,\r\n    value: instances\r\n  },\r\n  overrides: {\r\n    enumerable,\r\n    value: overrides\r\n  },\r\n  registry: {\r\n    enumerable,\r\n    value: registry\r\n  },\r\n  version: {\r\n    enumerable,\r\n    value: version\r\n  },\r\n  getChart: {\r\n    enumerable,\r\n    value: getChart\r\n  },\r\n  register: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.add(...items);\r\n      invalidatePlugins();\r\n    }\r\n  },\r\n  unregister: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.remove(...items);\r\n      invalidatePlugins();\r\n    }\r\n  }\r\n});\r\n\r\nfunction clipArc(ctx, element, endAngle) {\r\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\r\n  let angleMargin = pixelMargin / outerRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n  if (innerRadius > pixelMargin) {\r\n    angleMargin = pixelMargin / innerRadius;\r\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n  } else {\r\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n  }\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction toRadiusCorners(value) {\r\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\r\n}\r\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\r\n  const o = toRadiusCorners(arc.options.borderRadius);\r\n  const halfThickness = (outerRadius - innerRadius) / 2;\r\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\r\n  const computeOuterLimit = (val) => {\r\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\r\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\r\n  };\r\n  return {\r\n    outerStart: computeOuterLimit(o.outerStart),\r\n    outerEnd: computeOuterLimit(o.outerEnd),\r\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\r\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\r\n  };\r\n}\r\nfunction rThetaToXY(r, theta, x, y) {\r\n  return {\r\n    x: x + r * Math.cos(theta),\r\n    y: y + r * Math.sin(theta),\r\n  };\r\n}\r\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\r\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\r\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\r\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\r\n  let spacingOffset = 0;\r\n  const alpha = end - start;\r\n  if (spacing) {\r\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\r\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\r\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\r\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\r\n    spacingOffset = (alpha - adjustedAngle) / 2;\r\n  }\r\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\r\n  const angleOffset = (alpha - beta) / 2;\r\n  const startAngle = start + angleOffset + spacingOffset;\r\n  const endAngle = end - angleOffset - spacingOffset;\r\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\r\n  const outerStartAdjustedRadius = outerRadius - outerStart;\r\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\r\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\r\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\r\n  const innerStartAdjustedRadius = innerRadius + innerStart;\r\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\r\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\r\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\r\n  ctx.beginPath();\r\n  if (circular) {\r\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\r\n    if (outerEnd > 0) {\r\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\r\n    }\r\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\r\n    ctx.lineTo(p4.x, p4.y);\r\n    if (innerEnd > 0) {\r\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\r\n    }\r\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\r\n    if (innerStart > 0) {\r\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\r\n    }\r\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\r\n    ctx.lineTo(p8.x, p8.y);\r\n    if (outerStart > 0) {\r\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\r\n    }\r\n  } else {\r\n    ctx.moveTo(x, y);\r\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\r\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\r\n    ctx.lineTo(outerStartX, outerStartY);\r\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\r\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\r\n    ctx.lineTo(outerEndX, outerEndY);\r\n  }\r\n  ctx.closePath();\r\n}\r\nfunction drawArc(ctx, element, offset, spacing, circular) {\r\n  const {fullCircles, startAngle, circumference} = element;\r\n  let endAngle = element.endAngle;\r\n  if (fullCircles) {\r\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\r\n    for (let i = 0; i < fullCircles; ++i) {\r\n      ctx.fill();\r\n    }\r\n    if (!isNaN(circumference)) {\r\n      endAngle = startAngle + circumference % TAU;\r\n      if (circumference % TAU === 0) {\r\n        endAngle += TAU;\r\n      }\r\n    }\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n  ctx.fill();\r\n  return endAngle;\r\n}\r\nfunction drawFullCircleBorders(ctx, element, inner) {\r\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  let i;\r\n  if (inner) {\r\n    clipArc(ctx, element, startAngle + TAU);\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\r\n  const {options} = element;\r\n  const {borderWidth, borderJoinStyle} = options;\r\n  const inner = options.borderAlign === 'inner';\r\n  if (!borderWidth) {\r\n    return;\r\n  }\r\n  if (inner) {\r\n    ctx.lineWidth = borderWidth * 2;\r\n    ctx.lineJoin = borderJoinStyle || 'round';\r\n  } else {\r\n    ctx.lineWidth = borderWidth;\r\n    ctx.lineJoin = borderJoinStyle || 'bevel';\r\n  }\r\n  if (element.fullCircles) {\r\n    drawFullCircleBorders(ctx, element, inner);\r\n  }\r\n  if (inner) {\r\n    clipArc(ctx, element, endAngle);\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n  ctx.stroke();\r\n}\r\nclass ArcElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.circumference = undefined;\r\n    this.startAngle = undefined;\r\n    this.endAngle = undefined;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.pixelMargin = 0;\r\n    this.fullCircles = 0;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(chartX, chartY, useFinalPosition) {\r\n    const point = this.getProps(['x', 'y'], useFinalPosition);\r\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\r\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference'\r\n    ], useFinalPosition);\r\n    const rAdjust = this.options.spacing / 2;\r\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\r\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\r\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\r\n    return (betweenAngles && withinRadius);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\r\n      'x',\r\n      'y',\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference',\r\n    ], useFinalPosition);\r\n    const {offset, spacing} = this.options;\r\n    const halfAngle = (startAngle + endAngle) / 2;\r\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\r\n    return {\r\n      x: x + Math.cos(halfAngle) * halfRadius,\r\n      y: y + Math.sin(halfAngle) * halfRadius\r\n    };\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    return this.getCenterPoint(useFinalPosition);\r\n  }\r\n  draw(ctx) {\r\n    const {options, circumference} = this;\r\n    const offset = (options.offset || 0) / 2;\r\n    const spacing = (options.spacing || 0) / 2;\r\n    const circular = options.circular;\r\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\r\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\r\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    let radiusOffset = 0;\r\n    if (offset) {\r\n      radiusOffset = offset / 2;\r\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\r\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\r\n      if (this.circumference >= PI) {\r\n        radiusOffset = offset;\r\n      }\r\n    }\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\r\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\r\n    ctx.restore();\r\n  }\r\n}\r\nArcElement.id = 'arc';\r\nArcElement.defaults = {\r\n  borderAlign: 'center',\r\n  borderColor: '#fff',\r\n  borderJoinStyle: undefined,\r\n  borderRadius: 0,\r\n  borderWidth: 2,\r\n  offset: 0,\r\n  spacing: 0,\r\n  angle: undefined,\r\n  circular: true,\r\n};\r\nArcElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor'\r\n};\r\n\r\nfunction setStyle(ctx, options, style = options) {\r\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\r\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\r\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\r\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\r\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\r\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\r\n}\r\nfunction lineTo(ctx, previous, target) {\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\nfunction getLineMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedLineTo;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierCurveTo;\r\n  }\r\n  return lineTo;\r\n}\r\nfunction pathVars(points, segment, params = {}) {\r\n  const count = points.length;\r\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\r\n  const {start: segmentStart, end: segmentEnd} = segment;\r\n  const start = Math.max(paramsStart, segmentStart);\r\n  const end = Math.min(paramsEnd, segmentEnd);\r\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\r\n  return {\r\n    count,\r\n    start,\r\n    loop: segment.loop,\r\n    ilen: end < start && !outside ? count + end - start : end - start\r\n  };\r\n}\r\nfunction pathSegment(ctx, line, segment, params) {\r\n  const {points, options} = line;\r\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\r\n  const lineMethod = getLineMethod(options);\r\n  let {move = true, reverse} = params || {};\r\n  let i, point, prev;\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[(start + (reverse ? ilen - i : i)) % count];\r\n    if (point.skip) {\r\n      continue;\r\n    } else if (move) {\r\n      ctx.moveTo(point.x, point.y);\r\n      move = false;\r\n    } else {\r\n      lineMethod(ctx, prev, point, reverse, options.stepped);\r\n    }\r\n    prev = point;\r\n  }\r\n  if (loop) {\r\n    point = points[(start + (reverse ? ilen : 0)) % count];\r\n    lineMethod(ctx, prev, point, reverse, options.stepped);\r\n  }\r\n  return !!loop;\r\n}\r\nfunction fastPathSegment(ctx, line, segment, params) {\r\n  const points = line.points;\r\n  const {count, start, ilen} = pathVars(points, segment, params);\r\n  const {move = true, reverse} = params || {};\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, prevX, minY, maxY, lastY;\r\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\r\n  const drawX = () => {\r\n    if (minY !== maxY) {\r\n      ctx.lineTo(avgX, maxY);\r\n      ctx.lineTo(avgX, minY);\r\n      ctx.lineTo(avgX, lastY);\r\n    }\r\n  };\r\n  if (move) {\r\n    point = points[pointIndex(0)];\r\n    ctx.moveTo(point.x, point.y);\r\n  }\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[pointIndex(i)];\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n    const x = point.x;\r\n    const y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n      }\r\n      avgX = (countX * avgX + x) / ++countX;\r\n    } else {\r\n      drawX();\r\n      ctx.lineTo(x, y);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n    }\r\n    lastY = y;\r\n  }\r\n  drawX();\r\n}\r\nfunction _getSegmentMethod(line) {\r\n  const opts = line.options;\r\n  const borderDash = opts.borderDash && opts.borderDash.length;\r\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\r\n  return useFastPath ? fastPathSegment : pathSegment;\r\n}\r\nfunction _getInterpolationMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedInterpolation;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierInterpolation;\r\n  }\r\n  return _pointInLine;\r\n}\r\nfunction strokePathWithCache(ctx, line, start, count) {\r\n  let path = line._path;\r\n  if (!path) {\r\n    path = line._path = new Path2D();\r\n    if (line.path(path, start, count)) {\r\n      path.closePath();\r\n    }\r\n  }\r\n  setStyle(ctx, line.options);\r\n  ctx.stroke(path);\r\n}\r\nfunction strokePathDirect(ctx, line, start, count) {\r\n  const {segments, options} = line;\r\n  const segmentMethod = _getSegmentMethod(line);\r\n  for (const segment of segments) {\r\n    setStyle(ctx, options, segment.style);\r\n    ctx.beginPath();\r\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\r\n      ctx.closePath();\r\n    }\r\n    ctx.stroke();\r\n  }\r\n}\r\nconst usePath2D = typeof Path2D === 'function';\r\nfunction draw(ctx, line, start, count) {\r\n  if (usePath2D && !line.options.segment) {\r\n    strokePathWithCache(ctx, line, start, count);\r\n  } else {\r\n    strokePathDirect(ctx, line, start, count);\r\n  }\r\n}\r\nclass LineElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.animated = true;\r\n    this.options = undefined;\r\n    this._chart = undefined;\r\n    this._loop = undefined;\r\n    this._fullLoop = undefined;\r\n    this._path = undefined;\r\n    this._points = undefined;\r\n    this._segments = undefined;\r\n    this._decimated = false;\r\n    this._pointsUpdated = false;\r\n    this._datasetIndex = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  updateControlPoints(chartArea, indexAxis) {\r\n    const options = this.options;\r\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\r\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\r\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\r\n      this._pointsUpdated = true;\r\n    }\r\n  }\r\n  set points(points) {\r\n    this._points = points;\r\n    delete this._segments;\r\n    delete this._path;\r\n    this._pointsUpdated = false;\r\n  }\r\n  get points() {\r\n    return this._points;\r\n  }\r\n  get segments() {\r\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\r\n  }\r\n  first() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    return segments.length && points[segments[0].start];\r\n  }\r\n  last() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    const count = segments.length;\r\n    return count && points[segments[count - 1].end];\r\n  }\r\n  interpolate(point, property) {\r\n    const options = this.options;\r\n    const value = point[property];\r\n    const points = this.points;\r\n    const segments = _boundSegments(this, {property, start: value, end: value});\r\n    if (!segments.length) {\r\n      return;\r\n    }\r\n    const result = [];\r\n    const _interpolate = _getInterpolationMethod(options);\r\n    let i, ilen;\r\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\r\n      const {start, end} = segments[i];\r\n      const p1 = points[start];\r\n      const p2 = points[end];\r\n      if (p1 === p2) {\r\n        result.push(p1);\r\n        continue;\r\n      }\r\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n      interpolated[property] = point[property];\r\n      result.push(interpolated);\r\n    }\r\n    return result.length === 1 ? result[0] : result;\r\n  }\r\n  pathSegment(ctx, segment, params) {\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    return segmentMethod(ctx, this, segment, params);\r\n  }\r\n  path(ctx, start, count) {\r\n    const segments = this.segments;\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    let loop = this._loop;\r\n    start = start || 0;\r\n    count = count || (this.points.length - start);\r\n    for (const segment of segments) {\r\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\r\n    }\r\n    return !!loop;\r\n  }\r\n  draw(ctx, chartArea, start, count) {\r\n    const options = this.options || {};\r\n    const points = this.points || [];\r\n    if (points.length && options.borderWidth) {\r\n      ctx.save();\r\n      draw(ctx, this, start, count);\r\n      ctx.restore();\r\n    }\r\n    if (this.animated) {\r\n      this._pointsUpdated = false;\r\n      this._path = undefined;\r\n    }\r\n  }\r\n}\r\nLineElement.id = 'line';\r\nLineElement.defaults = {\r\n  borderCapStyle: 'butt',\r\n  borderDash: [],\r\n  borderDashOffset: 0,\r\n  borderJoinStyle: 'miter',\r\n  borderWidth: 3,\r\n  capBezierPoints: true,\r\n  cubicInterpolationMode: 'default',\r\n  fill: false,\r\n  spanGaps: false,\r\n  stepped: false,\r\n  tension: 0,\r\n};\r\nLineElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\nLineElement.descriptors = {\r\n  _scriptable: true,\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\r\n};\r\n\r\nfunction inRange$1(el, pos, axis, useFinalPosition) {\r\n  const options = el.options;\r\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\r\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\r\n}\r\nclass PointElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.parsed = undefined;\r\n    this.skip = undefined;\r\n    this.stop = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    const options = this.options;\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  size(options) {\r\n    options = options || this.options || {};\r\n    let radius = options.radius || 0;\r\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n    const borderWidth = radius && options.borderWidth || 0;\r\n    return (radius + borderWidth) * 2;\r\n  }\r\n  draw(ctx, area) {\r\n    const options = this.options;\r\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\r\n      return;\r\n    }\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    drawPoint(ctx, options, this.x, this.y);\r\n  }\r\n  getRange() {\r\n    const options = this.options || {};\r\n    return options.radius + options.hitRadius;\r\n  }\r\n}\r\nPointElement.id = 'point';\r\nPointElement.defaults = {\r\n  borderWidth: 1,\r\n  hitRadius: 1,\r\n  hoverBorderWidth: 1,\r\n  hoverRadius: 4,\r\n  pointStyle: 'circle',\r\n  radius: 3,\r\n  rotation: 0\r\n};\r\nPointElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nfunction getBarBounds(bar, useFinalPosition) {\r\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\r\n  let left, right, top, bottom, half;\r\n  if (bar.horizontal) {\r\n    half = height / 2;\r\n    left = Math.min(x, base);\r\n    right = Math.max(x, base);\r\n    top = y - half;\r\n    bottom = y + half;\r\n  } else {\r\n    half = width / 2;\r\n    left = x - half;\r\n    right = x + half;\r\n    top = Math.min(y, base);\r\n    bottom = Math.max(y, base);\r\n  }\r\n  return {left, top, right, bottom};\r\n}\r\nfunction skipOrLimit(skip, value, min, max) {\r\n  return skip ? 0 : _limitValue(value, min, max);\r\n}\r\nfunction parseBorderWidth(bar, maxW, maxH) {\r\n  const value = bar.options.borderWidth;\r\n  const skip = bar.borderSkipped;\r\n  const o = toTRBL(value);\r\n  return {\r\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n  };\r\n}\r\nfunction parseBorderRadius(bar, maxW, maxH) {\r\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\r\n  const value = bar.options.borderRadius;\r\n  const o = toTRBLCorners(value);\r\n  const maxR = Math.min(maxW, maxH);\r\n  const skip = bar.borderSkipped;\r\n  const enableBorder = enableBorderRadius || isObject(value);\r\n  return {\r\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\r\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\r\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n  };\r\n}\r\nfunction boundingRects(bar) {\r\n  const bounds = getBarBounds(bar);\r\n  const width = bounds.right - bounds.left;\r\n  const height = bounds.bottom - bounds.top;\r\n  const border = parseBorderWidth(bar, width / 2, height / 2);\r\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n  return {\r\n    outer: {\r\n      x: bounds.left,\r\n      y: bounds.top,\r\n      w: width,\r\n      h: height,\r\n      radius\r\n    },\r\n    inner: {\r\n      x: bounds.left + border.l,\r\n      y: bounds.top + border.t,\r\n      w: width - border.l - border.r,\r\n      h: height - border.t - border.b,\r\n      radius: {\r\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\r\n      }\r\n    }\r\n  };\r\n}\r\nfunction inRange(bar, x, y, useFinalPosition) {\r\n  const skipX = x === null;\r\n  const skipY = y === null;\r\n  const skipBoth = skipX && skipY;\r\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n  return bounds\r\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\r\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\r\n}\r\nfunction hasRadius(radius) {\r\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n}\r\nfunction addNormalRectPath(ctx, rect) {\r\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n}\r\nfunction inflateRect(rect, amount, refRect = {}) {\r\n  const x = rect.x !== refRect.x ? -amount : 0;\r\n  const y = rect.y !== refRect.y ? -amount : 0;\r\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\r\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\r\n  return {\r\n    x: rect.x + x,\r\n    y: rect.y + y,\r\n    w: rect.w + w,\r\n    h: rect.h + h,\r\n    radius: rect.radius\r\n  };\r\n}\r\nclass BarElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.horizontal = undefined;\r\n    this.base = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.inflateAmount = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\r\n    const {inner, outer} = boundingRects(this);\r\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n    ctx.save();\r\n    if (outer.w !== inner.w || outer.h !== inner.h) {\r\n      ctx.beginPath();\r\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\r\n      ctx.clip();\r\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\r\n      ctx.fillStyle = borderColor;\r\n      ctx.fill('evenodd');\r\n    }\r\n    ctx.beginPath();\r\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\r\n    ctx.fillStyle = backgroundColor;\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    return inRange(this, mouseX, mouseY, useFinalPosition);\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange(this, mouseX, null, useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange(this, null, mouseY, useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\r\n    return {\r\n      x: horizontal ? (x + base) / 2 : x,\r\n      y: horizontal ? y : (y + base) / 2\r\n    };\r\n  }\r\n  getRange(axis) {\r\n    return axis === 'x' ? this.width / 2 : this.height / 2;\r\n  }\r\n}\r\nBarElement.id = 'bar';\r\nBarElement.defaults = {\r\n  borderSkipped: 'start',\r\n  borderWidth: 0,\r\n  borderRadius: 0,\r\n  inflateAmount: 'auto',\r\n  pointStyle: undefined\r\n};\r\nBarElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nvar elements = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nArcElement: ArcElement,\r\nLineElement: LineElement,\r\nPointElement: PointElement,\r\nBarElement: BarElement\r\n});\r\n\r\nfunction lttbDecimation(data, start, count, availableWidth, options) {\r\n  const samples = options.samples || availableWidth;\r\n  if (samples >= count) {\r\n    return data.slice(start, start + count);\r\n  }\r\n  const decimated = [];\r\n  const bucketWidth = (count - 2) / (samples - 2);\r\n  let sampledIndex = 0;\r\n  const endIndex = start + count - 1;\r\n  let a = start;\r\n  let i, maxAreaPoint, maxArea, area, nextA;\r\n  decimated[sampledIndex++] = data[a];\r\n  for (i = 0; i < samples - 2; i++) {\r\n    let avgX = 0;\r\n    let avgY = 0;\r\n    let j;\r\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\r\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\r\n      avgX += data[j].x;\r\n      avgY += data[j].y;\r\n    }\r\n    avgX /= avgRangeLength;\r\n    avgY /= avgRangeLength;\r\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\r\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\r\n    const {x: pointAx, y: pointAy} = data[a];\r\n    maxArea = area = -1;\r\n    for (j = rangeOffs; j < rangeTo; j++) {\r\n      area = 0.5 * Math.abs(\r\n        (pointAx - avgX) * (data[j].y - pointAy) -\r\n        (pointAx - data[j].x) * (avgY - pointAy)\r\n      );\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        maxAreaPoint = data[j];\r\n        nextA = j;\r\n      }\r\n    }\r\n    decimated[sampledIndex++] = maxAreaPoint;\r\n    a = nextA;\r\n  }\r\n  decimated[sampledIndex++] = data[endIndex];\r\n  return decimated;\r\n}\r\nfunction minMaxDecimation(data, start, count, availableWidth) {\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n  const decimated = [];\r\n  const endIndex = start + count - 1;\r\n  const xMin = data[start].x;\r\n  const xMax = data[endIndex].x;\r\n  const dx = xMax - xMin;\r\n  for (i = start; i < start + count; ++i) {\r\n    point = data[i];\r\n    x = (point.x - xMin) / dx * availableWidth;\r\n    y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n        minIndex = i;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n        maxIndex = i;\r\n      }\r\n      avgX = (countX * avgX + point.x) / ++countX;\r\n    } else {\r\n      const lastIndex = i - 1;\r\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex1],\r\n            x: avgX,\r\n          });\r\n        }\r\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex2],\r\n            x: avgX\r\n          });\r\n        }\r\n      }\r\n      if (i > 0 && lastIndex !== startIndex) {\r\n        decimated.push(data[lastIndex]);\r\n      }\r\n      decimated.push(point);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n      minIndex = maxIndex = startIndex = i;\r\n    }\r\n  }\r\n  return decimated;\r\n}\r\nfunction cleanDecimatedDataset(dataset) {\r\n  if (dataset._decimated) {\r\n    const data = dataset._data;\r\n    delete dataset._decimated;\r\n    delete dataset._data;\r\n    Object.defineProperty(dataset, 'data', {value: data});\r\n  }\r\n}\r\nfunction cleanDecimatedData(chart) {\r\n  chart.data.datasets.forEach((dataset) => {\r\n    cleanDecimatedDataset(dataset);\r\n  });\r\n}\r\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count;\r\n  const {iScale} = meta;\r\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n  if (minDefined) {\r\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\r\n  }\r\n  if (maxDefined) {\r\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\r\n  } else {\r\n    count = pointCount - start;\r\n  }\r\n  return {start, count};\r\n}\r\nvar plugin_decimation = {\r\n  id: 'decimation',\r\n  defaults: {\r\n    algorithm: 'min-max',\r\n    enabled: false,\r\n  },\r\n  beforeElementsUpdate: (chart, args, options) => {\r\n    if (!options.enabled) {\r\n      cleanDecimatedData(chart);\r\n      return;\r\n    }\r\n    const availableWidth = chart.width;\r\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\r\n      const {_data, indexAxis} = dataset;\r\n      const meta = chart.getDatasetMeta(datasetIndex);\r\n      const data = _data || dataset.data;\r\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\r\n        return;\r\n      }\r\n      if (!meta.controller.supportsDecimation) {\r\n        return;\r\n      }\r\n      const xAxis = chart.scales[meta.xAxisID];\r\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n        return;\r\n      }\r\n      if (chart.options.parsing) {\r\n        return;\r\n      }\r\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\r\n      const threshold = options.threshold || 4 * availableWidth;\r\n      if (count <= threshold) {\r\n        cleanDecimatedDataset(dataset);\r\n        return;\r\n      }\r\n      if (isNullOrUndef(_data)) {\r\n        dataset._data = data;\r\n        delete dataset.data;\r\n        Object.defineProperty(dataset, 'data', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function() {\r\n            return this._decimated;\r\n          },\r\n          set: function(d) {\r\n            this._data = d;\r\n          }\r\n        });\r\n      }\r\n      let decimated;\r\n      switch (options.algorithm) {\r\n      case 'lttb':\r\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\r\n        break;\r\n      case 'min-max':\r\n        decimated = minMaxDecimation(data, start, count, availableWidth);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n      }\r\n      dataset._decimated = decimated;\r\n    });\r\n  },\r\n  destroy(chart) {\r\n    cleanDecimatedData(chart);\r\n  }\r\n};\r\n\r\nfunction _segments(line, target, property) {\r\n  const segments = line.segments;\r\n  const points = line.points;\r\n  const tpoints = target.points;\r\n  const parts = [];\r\n  for (const segment of segments) {\r\n    let {start, end} = segment;\r\n    end = _findSegmentEnd(start, end, points);\r\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\r\n    if (!target.segments) {\r\n      parts.push({\r\n        source: segment,\r\n        target: bounds,\r\n        start: points[start],\r\n        end: points[end]\r\n      });\r\n      continue;\r\n    }\r\n    const targetSegments = _boundSegments(target, bounds);\r\n    for (const tgt of targetSegments) {\r\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\r\n      const fillSources = _boundSegment(segment, points, subBounds);\r\n      for (const fillSource of fillSources) {\r\n        parts.push({\r\n          source: fillSource,\r\n          target: tgt,\r\n          start: {\r\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n          },\r\n          end: {\r\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return parts;\r\n}\r\nfunction _getBounds(property, first, last, loop) {\r\n  if (loop) {\r\n    return;\r\n  }\r\n  let start = first[property];\r\n  let end = last[property];\r\n  if (property === 'angle') {\r\n    start = _normalizeAngle(start);\r\n    end = _normalizeAngle(end);\r\n  }\r\n  return {property, start, end};\r\n}\r\nfunction _pointsFromSegments(boundary, line) {\r\n  const {x = null, y = null} = boundary || {};\r\n  const linePoints = line.points;\r\n  const points = [];\r\n  line.segments.forEach(({start, end}) => {\r\n    end = _findSegmentEnd(start, end, linePoints);\r\n    const first = linePoints[start];\r\n    const last = linePoints[end];\r\n    if (y !== null) {\r\n      points.push({x: first.x, y});\r\n      points.push({x: last.x, y});\r\n    } else if (x !== null) {\r\n      points.push({x, y: first.y});\r\n      points.push({x, y: last.y});\r\n    }\r\n  });\r\n  return points;\r\n}\r\nfunction _findSegmentEnd(start, end, points) {\r\n  for (;end > start; end--) {\r\n    const point = points[end];\r\n    if (!isNaN(point.x) && !isNaN(point.y)) {\r\n      break;\r\n    }\r\n  }\r\n  return end;\r\n}\r\nfunction _getEdge(a, b, prop, fn) {\r\n  if (a && b) {\r\n    return fn(a[prop], b[prop]);\r\n  }\r\n  return a ? a[prop] : b ? b[prop] : 0;\r\n}\r\n\r\nfunction _createBoundaryLine(boundary, line) {\r\n  let points = [];\r\n  let _loop = false;\r\n  if (isArray(boundary)) {\r\n    _loop = true;\r\n    points = boundary;\r\n  } else {\r\n    points = _pointsFromSegments(boundary, line);\r\n  }\r\n  return points.length ? new LineElement({\r\n    points,\r\n    options: {tension: 0},\r\n    _loop,\r\n    _fullLoop: _loop\r\n  }) : null;\r\n}\r\nfunction _shouldApplyFill(source) {\r\n  return source && source.fill !== false;\r\n}\r\n\r\nfunction _resolveTarget(sources, index, propagate) {\r\n  const source = sources[index];\r\n  let fill = source.fill;\r\n  const visited = [index];\r\n  let target;\r\n  if (!propagate) {\r\n    return fill;\r\n  }\r\n  while (fill !== false && visited.indexOf(fill) === -1) {\r\n    if (!isNumberFinite(fill)) {\r\n      return fill;\r\n    }\r\n    target = sources[fill];\r\n    if (!target) {\r\n      return false;\r\n    }\r\n    if (target.visible) {\r\n      return fill;\r\n    }\r\n    visited.push(fill);\r\n    fill = target.fill;\r\n  }\r\n  return false;\r\n}\r\nfunction _decodeFill(line, index, count) {\r\n  const fill = parseFillOption(line);\r\n  if (isObject(fill)) {\r\n    return isNaN(fill.value) ? false : fill;\r\n  }\r\n  let target = parseFloat(fill);\r\n  if (isNumberFinite(target) && Math.floor(target) === target) {\r\n    return decodeTargetIndex(fill[0], index, target, count);\r\n  }\r\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\r\n}\r\nfunction decodeTargetIndex(firstCh, index, target, count) {\r\n  if (firstCh === '-' || firstCh === '+') {\r\n    target = index + target;\r\n  }\r\n  if (target === index || target < 0 || target >= count) {\r\n    return false;\r\n  }\r\n  return target;\r\n}\r\nfunction _getTargetPixel(fill, scale) {\r\n  let pixel = null;\r\n  if (fill === 'start') {\r\n    pixel = scale.bottom;\r\n  } else if (fill === 'end') {\r\n    pixel = scale.top;\r\n  } else if (isObject(fill)) {\r\n    pixel = scale.getPixelForValue(fill.value);\r\n  } else if (scale.getBasePixel) {\r\n    pixel = scale.getBasePixel();\r\n  }\r\n  return pixel;\r\n}\r\nfunction _getTargetValue(fill, scale, startValue) {\r\n  let value;\r\n  if (fill === 'start') {\r\n    value = startValue;\r\n  } else if (fill === 'end') {\r\n    value = scale.options.reverse ? scale.min : scale.max;\r\n  } else if (isObject(fill)) {\r\n    value = fill.value;\r\n  } else {\r\n    value = scale.getBaseValue();\r\n  }\r\n  return value;\r\n}\r\nfunction parseFillOption(line) {\r\n  const options = line.options;\r\n  const fillOption = options.fill;\r\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n  if (fill === undefined) {\r\n    fill = !!options.backgroundColor;\r\n  }\r\n  if (fill === false || fill === null) {\r\n    return false;\r\n  }\r\n  if (fill === true) {\r\n    return 'origin';\r\n  }\r\n  return fill;\r\n}\r\n\r\nfunction _buildStackLine(source) {\r\n  const {scale, index, line} = source;\r\n  const points = [];\r\n  const segments = line.segments;\r\n  const sourcePoints = line.points;\r\n  const linesBelow = getLinesBelow(scale, index);\r\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    for (let j = segment.start; j <= segment.end; j++) {\r\n      addPointsBelow(points, sourcePoints[j], linesBelow);\r\n    }\r\n  }\r\n  return new LineElement({points, options: {}});\r\n}\r\nfunction getLinesBelow(scale, index) {\r\n  const below = [];\r\n  const metas = scale.getMatchingVisibleMetas('line');\r\n  for (let i = 0; i < metas.length; i++) {\r\n    const meta = metas[i];\r\n    if (meta.index === index) {\r\n      break;\r\n    }\r\n    if (!meta.hidden) {\r\n      below.unshift(meta.dataset);\r\n    }\r\n  }\r\n  return below;\r\n}\r\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\r\n  const postponed = [];\r\n  for (let j = 0; j < linesBelow.length; j++) {\r\n    const line = linesBelow[j];\r\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\r\n    if (!point || (first && last)) {\r\n      continue;\r\n    }\r\n    if (first) {\r\n      postponed.unshift(point);\r\n    } else {\r\n      points.push(point);\r\n      if (!last) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  points.push(...postponed);\r\n}\r\nfunction findPoint(line, sourcePoint, property) {\r\n  const point = line.interpolate(sourcePoint, property);\r\n  if (!point) {\r\n    return {};\r\n  }\r\n  const pointValue = point[property];\r\n  const segments = line.segments;\r\n  const linePoints = line.points;\r\n  let first = false;\r\n  let last = false;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const firstValue = linePoints[segment.start][property];\r\n    const lastValue = linePoints[segment.end][property];\r\n    if (_isBetween(pointValue, firstValue, lastValue)) {\r\n      first = pointValue === firstValue;\r\n      last = pointValue === lastValue;\r\n      break;\r\n    }\r\n  }\r\n  return {first, last, point};\r\n}\r\n\r\nclass simpleArc {\r\n  constructor(opts) {\r\n    this.x = opts.x;\r\n    this.y = opts.y;\r\n    this.radius = opts.radius;\r\n  }\r\n  pathSegment(ctx, bounds, opts) {\r\n    const {x, y, radius} = this;\r\n    bounds = bounds || {start: 0, end: TAU};\r\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n    return !opts.bounds;\r\n  }\r\n  interpolate(point) {\r\n    const {x, y, radius} = this;\r\n    const angle = point.angle;\r\n    return {\r\n      x: x + Math.cos(angle) * radius,\r\n      y: y + Math.sin(angle) * radius,\r\n      angle\r\n    };\r\n  }\r\n}\r\n\r\nfunction _getTarget(source) {\r\n  const {chart, fill, line} = source;\r\n  if (isNumberFinite(fill)) {\r\n    return getLineByIndex(chart, fill);\r\n  }\r\n  if (fill === 'stack') {\r\n    return _buildStackLine(source);\r\n  }\r\n  if (fill === 'shape') {\r\n    return true;\r\n  }\r\n  const boundary = computeBoundary(source);\r\n  if (boundary instanceof simpleArc) {\r\n    return boundary;\r\n  }\r\n  return _createBoundaryLine(boundary, line);\r\n}\r\nfunction getLineByIndex(chart, index) {\r\n  const meta = chart.getDatasetMeta(index);\r\n  const visible = meta && chart.isDatasetVisible(index);\r\n  return visible ? meta.dataset : null;\r\n}\r\nfunction computeBoundary(source) {\r\n  const scale = source.scale || {};\r\n  if (scale.getPointPositionForValue) {\r\n    return computeCircularBoundary(source);\r\n  }\r\n  return computeLinearBoundary(source);\r\n}\r\nfunction computeLinearBoundary(source) {\r\n  const {scale = {}, fill} = source;\r\n  const pixel = _getTargetPixel(fill, scale);\r\n  if (isNumberFinite(pixel)) {\r\n    const horizontal = scale.isHorizontal();\r\n    return {\r\n      x: horizontal ? pixel : null,\r\n      y: horizontal ? null : pixel\r\n    };\r\n  }\r\n  return null;\r\n}\r\nfunction computeCircularBoundary(source) {\r\n  const {scale, fill} = source;\r\n  const options = scale.options;\r\n  const length = scale.getLabels().length;\r\n  const start = options.reverse ? scale.max : scale.min;\r\n  const value = _getTargetValue(fill, scale, start);\r\n  const target = [];\r\n  if (options.grid.circular) {\r\n    const center = scale.getPointPositionForValue(0, start);\r\n    return new simpleArc({\r\n      x: center.x,\r\n      y: center.y,\r\n      radius: scale.getDistanceFromCenterForValue(value)\r\n    });\r\n  }\r\n  for (let i = 0; i < length; ++i) {\r\n    target.push(scale.getPointPositionForValue(i, value));\r\n  }\r\n  return target;\r\n}\r\n\r\nfunction _drawfill(ctx, source, area) {\r\n  const target = _getTarget(source);\r\n  const {line, scale, axis} = source;\r\n  const lineOpts = line.options;\r\n  const fillOption = lineOpts.fill;\r\n  const color = lineOpts.backgroundColor;\r\n  const {above = color, below = color} = fillOption || {};\r\n  if (target && line.points.length) {\r\n    clipArea(ctx, area);\r\n    doFill(ctx, {line, target, above, below, area, scale, axis});\r\n    unclipArea(ctx);\r\n  }\r\n}\r\nfunction doFill(ctx, cfg) {\r\n  const {line, target, above, below, area, scale} = cfg;\r\n  const property = line._loop ? 'angle' : cfg.axis;\r\n  ctx.save();\r\n  if (property === 'x' && below !== above) {\r\n    clipVertical(ctx, target, area.top);\r\n    fill(ctx, {line, target, color: above, scale, property});\r\n    ctx.restore();\r\n    ctx.save();\r\n    clipVertical(ctx, target, area.bottom);\r\n  }\r\n  fill(ctx, {line, target, color: below, scale, property});\r\n  ctx.restore();\r\n}\r\nfunction clipVertical(ctx, target, clipY) {\r\n  const {segments, points} = target;\r\n  let first = true;\r\n  let lineLoop = false;\r\n  ctx.beginPath();\r\n  for (const segment of segments) {\r\n    const {start, end} = segment;\r\n    const firstPoint = points[start];\r\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\r\n    if (first) {\r\n      ctx.moveTo(firstPoint.x, firstPoint.y);\r\n      first = false;\r\n    } else {\r\n      ctx.lineTo(firstPoint.x, clipY);\r\n      ctx.lineTo(firstPoint.x, firstPoint.y);\r\n    }\r\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\r\n    if (lineLoop) {\r\n      ctx.closePath();\r\n    } else {\r\n      ctx.lineTo(lastPoint.x, clipY);\r\n    }\r\n  }\r\n  ctx.lineTo(target.first().x, clipY);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction fill(ctx, cfg) {\r\n  const {line, target, property, color, scale} = cfg;\r\n  const segments = _segments(line, target, property);\r\n  for (const {source: src, target: tgt, start, end} of segments) {\r\n    const {style: {backgroundColor = color} = {}} = src;\r\n    const notShape = target !== true;\r\n    ctx.save();\r\n    ctx.fillStyle = backgroundColor;\r\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\r\n    ctx.beginPath();\r\n    const lineLoop = !!line.pathSegment(ctx, src);\r\n    let loop;\r\n    if (notShape) {\r\n      if (lineLoop) {\r\n        ctx.closePath();\r\n      } else {\r\n        interpolatedLineTo(ctx, target, end, property);\r\n      }\r\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\r\n      loop = lineLoop && targetLoop;\r\n      if (!loop) {\r\n        interpolatedLineTo(ctx, target, start, property);\r\n      }\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n    ctx.restore();\r\n  }\r\n}\r\nfunction clipBounds(ctx, scale, bounds) {\r\n  const {top, bottom} = scale.chart.chartArea;\r\n  const {property, start, end} = bounds || {};\r\n  if (property === 'x') {\r\n    ctx.beginPath();\r\n    ctx.rect(start, top, end - start, bottom - top);\r\n    ctx.clip();\r\n  }\r\n}\r\nfunction interpolatedLineTo(ctx, target, point, property) {\r\n  const interpolatedPoint = target.interpolate(point, property);\r\n  if (interpolatedPoint) {\r\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n  }\r\n}\r\n\r\nvar index = {\r\n  id: 'filler',\r\n  afterDatasetsUpdate(chart, _args, options) {\r\n    const count = (chart.data.datasets || []).length;\r\n    const sources = [];\r\n    let meta, i, line, source;\r\n    for (i = 0; i < count; ++i) {\r\n      meta = chart.getDatasetMeta(i);\r\n      line = meta.dataset;\r\n      source = null;\r\n      if (line && line.options && line instanceof LineElement) {\r\n        source = {\r\n          visible: chart.isDatasetVisible(i),\r\n          index: i,\r\n          fill: _decodeFill(line, i, count),\r\n          chart,\r\n          axis: meta.controller.options.indexAxis,\r\n          scale: meta.vScale,\r\n          line,\r\n        };\r\n      }\r\n      meta.$filler = source;\r\n      sources.push(source);\r\n    }\r\n    for (i = 0; i < count; ++i) {\r\n      source = sources[i];\r\n      if (!source || source.fill === false) {\r\n        continue;\r\n      }\r\n      source.fill = _resolveTarget(sources, i, options.propagate);\r\n    }\r\n  },\r\n  beforeDraw(chart, _args, options) {\r\n    const draw = options.drawTime === 'beforeDraw';\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    const area = chart.chartArea;\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (!source) {\r\n        continue;\r\n      }\r\n      source.line.updateControlPoints(area, source.axis);\r\n      if (draw && source.fill) {\r\n        _drawfill(chart.ctx, source, area);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetsDraw(chart, _args, options) {\r\n    if (options.drawTime !== 'beforeDatasetsDraw') {\r\n      return;\r\n    }\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (_shouldApplyFill(source)) {\r\n        _drawfill(chart.ctx, source, chart.chartArea);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetDraw(chart, args, options) {\r\n    const source = args.meta.$filler;\r\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\r\n      return;\r\n    }\r\n    _drawfill(chart.ctx, source, chart.chartArea);\r\n  },\r\n  defaults: {\r\n    propagate: true,\r\n    drawTime: 'beforeDatasetDraw'\r\n  }\r\n};\r\n\r\nconst getBoxSize = (labelOpts, fontSize) => {\r\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\r\n  if (labelOpts.usePointStyle) {\r\n    boxHeight = Math.min(boxHeight, fontSize);\r\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\r\n  }\r\n  return {\r\n    boxWidth,\r\n    boxHeight,\r\n    itemHeight: Math.max(fontSize, boxHeight)\r\n  };\r\n};\r\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\nclass Legend extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this._added = false;\r\n    this.legendHitBoxes = [];\r\n    this._hoveredItem = null;\r\n    this.doughnutMode = false;\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this.legendItems = undefined;\r\n    this.columnSizes = undefined;\r\n    this.lineWidths = undefined;\r\n    this.maxHeight = undefined;\r\n    this.maxWidth = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this._margins = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins;\r\n    this.setDimensions();\r\n    this.buildLabels();\r\n    this.fit();\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = this._margins.left;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = this._margins.top;\r\n      this.bottom = this.height;\r\n    }\r\n  }\r\n  buildLabels() {\r\n    const labelOpts = this.options.labels || {};\r\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\r\n    if (labelOpts.filter) {\r\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\r\n    }\r\n    if (labelOpts.sort) {\r\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\r\n    }\r\n    if (this.options.reverse) {\r\n      legendItems.reverse();\r\n    }\r\n    this.legendItems = legendItems;\r\n  }\r\n  fit() {\r\n    const {options, ctx} = this;\r\n    if (!options.display) {\r\n      this.width = this.height = 0;\r\n      return;\r\n    }\r\n    const labelOpts = options.labels;\r\n    const labelFont = toFont(labelOpts.font);\r\n    const fontSize = labelFont.size;\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    let width, height;\r\n    ctx.font = labelFont.string;\r\n    if (this.isHorizontal()) {\r\n      width = this.maxWidth;\r\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    } else {\r\n      height = this.maxHeight;\r\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    }\r\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\r\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\r\n  }\r\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const lineWidths = this.lineWidths = [0];\r\n    const lineHeight = itemHeight + padding;\r\n    let totalHeight = titleHeight;\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n    let row = -1;\r\n    let top = -lineHeight;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n        totalHeight += lineHeight;\r\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n        top += lineHeight;\r\n        row++;\r\n      }\r\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\r\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n    });\r\n    return totalHeight;\r\n  }\r\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const columnSizes = this.columnSizes = [];\r\n    const heightLimit = maxHeight - titleHeight;\r\n    let totalWidth = padding;\r\n    let currentColWidth = 0;\r\n    let currentColHeight = 0;\r\n    let left = 0;\r\n    let col = 0;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\r\n        totalWidth += currentColWidth + padding;\r\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n        left += currentColWidth + padding;\r\n        col++;\r\n        currentColWidth = currentColHeight = 0;\r\n      }\r\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\r\n      currentColWidth = Math.max(currentColWidth, itemWidth);\r\n      currentColHeight += itemHeight + padding;\r\n    });\r\n    totalWidth += currentColWidth;\r\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n    return totalWidth;\r\n  }\r\n  adjustHitBoxes() {\r\n    if (!this.options.display) {\r\n      return;\r\n    }\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\r\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\r\n    if (this.isHorizontal()) {\r\n      let row = 0;\r\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n      for (const hitbox of hitboxes) {\r\n        if (row !== hitbox.row) {\r\n          row = hitbox.row;\r\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n        }\r\n        hitbox.top += this.top + titleHeight + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\r\n        left += hitbox.width + padding;\r\n      }\r\n    } else {\r\n      let col = 0;\r\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n      for (const hitbox of hitboxes) {\r\n        if (hitbox.col !== col) {\r\n          col = hitbox.col;\r\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n        }\r\n        hitbox.top = top;\r\n        hitbox.left += this.left + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\r\n        top += hitbox.height + padding;\r\n      }\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    return this.options.position === 'top' || this.options.position === 'bottom';\r\n  }\r\n  draw() {\r\n    if (this.options.display) {\r\n      const ctx = this.ctx;\r\n      clipArea(ctx, this);\r\n      this._draw();\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  _draw() {\r\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\r\n    const {align, labels: labelOpts} = opts;\r\n    const defaultColor = defaults.color;\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const labelFont = toFont(labelOpts.font);\r\n    const {color: fontColor, padding} = labelOpts;\r\n    const fontSize = labelFont.size;\r\n    const halfFontSize = fontSize / 2;\r\n    let cursor;\r\n    this.drawTitle();\r\n    ctx.textAlign = rtlHelper.textAlign('left');\r\n    ctx.textBaseline = 'middle';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.font = labelFont.string;\r\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    const drawLegendBox = function(x, y, legendItem) {\r\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n      if (labelOpts.usePointStyle) {\r\n        const drawOptions = {\r\n          radius: boxHeight * Math.SQRT2 / 2,\r\n          pointStyle: legendItem.pointStyle,\r\n          rotation: legendItem.rotation,\r\n          borderWidth: lineWidth\r\n        };\r\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n        const centerY = y + halfFontSize;\r\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\r\n      } else {\r\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\r\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\r\n        ctx.beginPath();\r\n        if (Object.values(borderRadius).some(v => v !== 0)) {\r\n          addRoundedRectPath(ctx, {\r\n            x: xBoxLeft,\r\n            y: yBoxTop,\r\n            w: boxWidth,\r\n            h: boxHeight,\r\n            radius: borderRadius,\r\n          });\r\n        } else {\r\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\r\n        }\r\n        ctx.fill();\r\n        if (lineWidth !== 0) {\r\n          ctx.stroke();\r\n        }\r\n      }\r\n      ctx.restore();\r\n    };\r\n    const fillText = function(x, y, legendItem) {\r\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\r\n        strikethrough: legendItem.hidden,\r\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\r\n      });\r\n    };\r\n    const isHorizontal = this.isHorizontal();\r\n    const titleHeight = this._computeTitleHeight();\r\n    if (isHorizontal) {\r\n      cursor = {\r\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\r\n        y: this.top + padding + titleHeight,\r\n        line: 0\r\n      };\r\n    } else {\r\n      cursor = {\r\n        x: this.left + padding,\r\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\r\n        line: 0\r\n      };\r\n    }\r\n    overrideTextDirection(this.ctx, opts.textDirection);\r\n    const lineHeight = itemHeight + padding;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\r\n      ctx.fillStyle = legendItem.fontColor || fontColor;\r\n      const textWidth = ctx.measureText(legendItem.text).width;\r\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n      const width = boxWidth + halfFontSize + textWidth;\r\n      let x = cursor.x;\r\n      let y = cursor.y;\r\n      rtlHelper.setWidth(this.width);\r\n      if (isHorizontal) {\r\n        if (i > 0 && x + width + padding > this.right) {\r\n          y = cursor.y += lineHeight;\r\n          cursor.line++;\r\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\r\n        }\r\n      } else if (i > 0 && y + lineHeight > this.bottom) {\r\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n        cursor.line++;\r\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\r\n      }\r\n      const realX = rtlHelper.x(x);\r\n      drawLegendBox(realX, y, legendItem);\r\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\r\n      fillText(rtlHelper.x(x), y, legendItem);\r\n      if (isHorizontal) {\r\n        cursor.x += width + padding;\r\n      } else {\r\n        cursor.y += lineHeight;\r\n      }\r\n    });\r\n    restoreTextDirection(this.ctx, opts.textDirection);\r\n  }\r\n  drawTitle() {\r\n    const opts = this.options;\r\n    const titleOpts = opts.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    if (!titleOpts.display) {\r\n      return;\r\n    }\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const ctx = this.ctx;\r\n    const position = titleOpts.position;\r\n    const halfFontSize = titleFont.size / 2;\r\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n    let y;\r\n    let left = this.left;\r\n    let maxWidth = this.width;\r\n    if (this.isHorizontal()) {\r\n      maxWidth = Math.max(...this.lineWidths);\r\n      y = this.top + topPaddingPlusHalfFontSize;\r\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\r\n    } else {\r\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\r\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\r\n    }\r\n    const x = _alignStartEnd(position, left, left + maxWidth);\r\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n    ctx.textBaseline = 'middle';\r\n    ctx.strokeStyle = titleOpts.color;\r\n    ctx.fillStyle = titleOpts.color;\r\n    ctx.font = titleFont.string;\r\n    renderText(ctx, titleOpts.text, x, y, titleFont);\r\n  }\r\n  _computeTitleHeight() {\r\n    const titleOpts = this.options.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n  }\r\n  _getLegendItemAt(x, y) {\r\n    let i, hitBox, lh;\r\n    if (_isBetween(x, this.left, this.right)\r\n      && _isBetween(y, this.top, this.bottom)) {\r\n      lh = this.legendHitBoxes;\r\n      for (i = 0; i < lh.length; ++i) {\r\n        hitBox = lh[i];\r\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\r\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\r\n          return this.legendItems[i];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  handleEvent(e) {\r\n    const opts = this.options;\r\n    if (!isListened(e.type, opts)) {\r\n      return;\r\n    }\r\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\r\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\r\n      const previous = this._hoveredItem;\r\n      const sameItem = itemsEqual(previous, hoveredItem);\r\n      if (previous && !sameItem) {\r\n        callback(opts.onLeave, [e, previous, this], this);\r\n      }\r\n      this._hoveredItem = hoveredItem;\r\n      if (hoveredItem && !sameItem) {\r\n        callback(opts.onHover, [e, hoveredItem, this], this);\r\n      }\r\n    } else if (hoveredItem) {\r\n      callback(opts.onClick, [e, hoveredItem, this], this);\r\n    }\r\n  }\r\n}\r\nfunction isListened(type, opts) {\r\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\r\n    return true;\r\n  }\r\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nvar plugin_legend = {\r\n  id: 'legend',\r\n  _element: Legend,\r\n  start(chart, _args, options) {\r\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\r\n    layouts.configure(chart, legend, options);\r\n    layouts.addBox(chart, legend);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, chart.legend);\r\n    delete chart.legend;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const legend = chart.legend;\r\n    layouts.configure(chart, legend, options);\r\n    legend.options = options;\r\n  },\r\n  afterUpdate(chart) {\r\n    const legend = chart.legend;\r\n    legend.buildLabels();\r\n    legend.adjustHitBoxes();\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (!args.replay) {\r\n      chart.legend.handleEvent(args.event);\r\n    }\r\n  },\r\n  defaults: {\r\n    display: true,\r\n    position: 'top',\r\n    align: 'center',\r\n    fullSize: true,\r\n    reverse: false,\r\n    weight: 1000,\r\n    onClick(e, legendItem, legend) {\r\n      const index = legendItem.datasetIndex;\r\n      const ci = legend.chart;\r\n      if (ci.isDatasetVisible(index)) {\r\n        ci.hide(index);\r\n        legendItem.hidden = true;\r\n      } else {\r\n        ci.show(index);\r\n        legendItem.hidden = false;\r\n      }\r\n    },\r\n    onHover: null,\r\n    onLeave: null,\r\n    labels: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      boxWidth: 40,\r\n      padding: 10,\r\n      generateLabels(chart) {\r\n        const datasets = chart.data.datasets;\r\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\r\n        return chart._getSortedDatasetMetas().map((meta) => {\r\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n          const borderWidth = toPadding(style.borderWidth);\r\n          return {\r\n            text: datasets[meta.index].label,\r\n            fillStyle: style.backgroundColor,\r\n            fontColor: color,\r\n            hidden: !meta.visible,\r\n            lineCap: style.borderCapStyle,\r\n            lineDash: style.borderDash,\r\n            lineDashOffset: style.borderDashOffset,\r\n            lineJoin: style.borderJoinStyle,\r\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n            strokeStyle: style.borderColor,\r\n            pointStyle: pointStyle || style.pointStyle,\r\n            rotation: style.rotation,\r\n            textAlign: textAlign || style.textAlign,\r\n            borderRadius: 0,\r\n            datasetIndex: meta.index\r\n          };\r\n        }, this);\r\n      }\r\n    },\r\n    title: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      display: false,\r\n      position: 'center',\r\n      text: '',\r\n    }\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => !name.startsWith('on'),\r\n    labels: {\r\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\r\n    }\r\n  },\r\n};\r\n\r\nclass Title extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this._padding = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight) {\r\n    const opts = this.options;\r\n    this.left = 0;\r\n    this.top = 0;\r\n    if (!opts.display) {\r\n      this.width = this.height = this.right = this.bottom = 0;\r\n      return;\r\n    }\r\n    this.width = this.right = maxWidth;\r\n    this.height = this.bottom = maxHeight;\r\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n    this._padding = toPadding(opts.padding);\r\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\r\n    if (this.isHorizontal()) {\r\n      this.height = textSize;\r\n    } else {\r\n      this.width = textSize;\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    const pos = this.options.position;\r\n    return pos === 'top' || pos === 'bottom';\r\n  }\r\n  _drawArgs(offset) {\r\n    const {top, left, bottom, right, options} = this;\r\n    const align = options.align;\r\n    let rotation = 0;\r\n    let maxWidth, titleX, titleY;\r\n    if (this.isHorizontal()) {\r\n      titleX = _alignStartEnd(align, left, right);\r\n      titleY = top + offset;\r\n      maxWidth = right - left;\r\n    } else {\r\n      if (options.position === 'left') {\r\n        titleX = left + offset;\r\n        titleY = _alignStartEnd(align, bottom, top);\r\n        rotation = PI * -0.5;\r\n      } else {\r\n        titleX = right - offset;\r\n        titleY = _alignStartEnd(align, top, bottom);\r\n        rotation = PI * 0.5;\r\n      }\r\n      maxWidth = bottom - top;\r\n    }\r\n    return {titleX, titleY, maxWidth, rotation};\r\n  }\r\n  draw() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    if (!opts.display) {\r\n      return;\r\n    }\r\n    const fontOpts = toFont(opts.font);\r\n    const lineHeight = fontOpts.lineHeight;\r\n    const offset = lineHeight / 2 + this._padding.top;\r\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\r\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n      color: opts.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: _toLeftRightCenter(opts.align),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n}\r\nfunction createTitle(chart, titleOpts) {\r\n  const title = new Title({\r\n    ctx: chart.ctx,\r\n    options: titleOpts,\r\n    chart\r\n  });\r\n  layouts.configure(chart, title, titleOpts);\r\n  layouts.addBox(chart, title);\r\n  chart.titleBlock = title;\r\n}\r\nvar plugin_title = {\r\n  id: 'title',\r\n  _element: Title,\r\n  start(chart, _args, options) {\r\n    createTitle(chart, options);\r\n  },\r\n  stop(chart) {\r\n    const titleBlock = chart.titleBlock;\r\n    layouts.removeBox(chart, titleBlock);\r\n    delete chart.titleBlock;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = chart.titleBlock;\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'bold',\r\n    },\r\n    fullSize: true,\r\n    padding: 10,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 2000\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst map = new WeakMap();\r\nvar plugin_subtitle = {\r\n  id: 'subtitle',\r\n  start(chart, _args, options) {\r\n    const title = new Title({\r\n      ctx: chart.ctx,\r\n      options,\r\n      chart\r\n    });\r\n    layouts.configure(chart, title, options);\r\n    layouts.addBox(chart, title);\r\n    map.set(chart, title);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, map.get(chart));\r\n    map.delete(chart);\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = map.get(chart);\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'normal',\r\n    },\r\n    fullSize: true,\r\n    padding: 0,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 1500\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst positioners = {\r\n  average(items) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let i, len;\r\n    let x = 0;\r\n    let y = 0;\r\n    let count = 0;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const pos = el.tooltipPosition();\r\n        x += pos.x;\r\n        y += pos.y;\r\n        ++count;\r\n      }\r\n    }\r\n    return {\r\n      x: x / count,\r\n      y: y / count\r\n    };\r\n  },\r\n  nearest(items, eventPosition) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let x = eventPosition.x;\r\n    let y = eventPosition.y;\r\n    let minDistance = Number.POSITIVE_INFINITY;\r\n    let i, len, nearestElement;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const center = el.getCenterPoint();\r\n        const d = distanceBetweenPoints(eventPosition, center);\r\n        if (d < minDistance) {\r\n          minDistance = d;\r\n          nearestElement = el;\r\n        }\r\n      }\r\n    }\r\n    if (nearestElement) {\r\n      const tp = nearestElement.tooltipPosition();\r\n      x = tp.x;\r\n      y = tp.y;\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n};\r\nfunction pushOrConcat(base, toPush) {\r\n  if (toPush) {\r\n    if (isArray(toPush)) {\r\n      Array.prototype.push.apply(base, toPush);\r\n    } else {\r\n      base.push(toPush);\r\n    }\r\n  }\r\n  return base;\r\n}\r\nfunction splitNewlines(str) {\r\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n    return str.split('\\n');\r\n  }\r\n  return str;\r\n}\r\nfunction createTooltipItem(chart, item) {\r\n  const {element, datasetIndex, index} = item;\r\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n  const {label, value} = controller.getLabelAndValue(index);\r\n  return {\r\n    chart,\r\n    label,\r\n    parsed: controller.getParsed(index),\r\n    raw: chart.data.datasets[datasetIndex].data[index],\r\n    formattedValue: value,\r\n    dataset: controller.getDataset(),\r\n    dataIndex: index,\r\n    datasetIndex,\r\n    element\r\n  };\r\n}\r\nfunction getTooltipSize(tooltip, options) {\r\n  const ctx = tooltip.chart.ctx;\r\n  const {body, footer, title} = tooltip;\r\n  const {boxWidth, boxHeight} = options;\r\n  const bodyFont = toFont(options.bodyFont);\r\n  const titleFont = toFont(options.titleFont);\r\n  const footerFont = toFont(options.footerFont);\r\n  const titleLineCount = title.length;\r\n  const footerLineCount = footer.length;\r\n  const bodyLineItemCount = body.length;\r\n  const padding = toPadding(options.padding);\r\n  let height = padding.height;\r\n  let width = 0;\r\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n  if (titleLineCount) {\r\n    height += titleLineCount * titleFont.lineHeight\r\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\r\n\t\t\t+ options.titleMarginBottom;\r\n  }\r\n  if (combinedBodyLength) {\r\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n    height += bodyLineItemCount * bodyLineHeight\r\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\r\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\r\n  }\r\n  if (footerLineCount) {\r\n    height += options.footerMarginTop\r\n\t\t\t+ footerLineCount * footerFont.lineHeight\r\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\r\n  }\r\n  let widthPadding = 0;\r\n  const maxLineWidth = function(line) {\r\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n  };\r\n  ctx.save();\r\n  ctx.font = titleFont.string;\r\n  each(tooltip.title, maxLineWidth);\r\n  ctx.font = bodyFont.string;\r\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\r\n  each(body, (bodyItem) => {\r\n    each(bodyItem.before, maxLineWidth);\r\n    each(bodyItem.lines, maxLineWidth);\r\n    each(bodyItem.after, maxLineWidth);\r\n  });\r\n  widthPadding = 0;\r\n  ctx.font = footerFont.string;\r\n  each(tooltip.footer, maxLineWidth);\r\n  ctx.restore();\r\n  width += padding.width;\r\n  return {width, height};\r\n}\r\nfunction determineYAlign(chart, size) {\r\n  const {y, height} = size;\r\n  if (y < height / 2) {\r\n    return 'top';\r\n  } else if (y > (chart.height - height / 2)) {\r\n    return 'bottom';\r\n  }\r\n  return 'center';\r\n}\r\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\r\n  const {x, width} = size;\r\n  const caret = options.caretSize + options.caretPadding;\r\n  if (xAlign === 'left' && x + width + caret > chart.width) {\r\n    return true;\r\n  }\r\n  if (xAlign === 'right' && x - width - caret < 0) {\r\n    return true;\r\n  }\r\n}\r\nfunction determineXAlign(chart, options, size, yAlign) {\r\n  const {x, width} = size;\r\n  const {width: chartWidth, chartArea: {left, right}} = chart;\r\n  let xAlign = 'center';\r\n  if (yAlign === 'center') {\r\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n  } else if (x <= width / 2) {\r\n    xAlign = 'left';\r\n  } else if (x >= chartWidth - width / 2) {\r\n    xAlign = 'right';\r\n  }\r\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n    xAlign = 'center';\r\n  }\r\n  return xAlign;\r\n}\r\nfunction determineAlignment(chart, options, size) {\r\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\r\n  return {\r\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n    yAlign\r\n  };\r\n}\r\nfunction alignX(size, xAlign) {\r\n  let {x, width} = size;\r\n  if (xAlign === 'right') {\r\n    x -= width;\r\n  } else if (xAlign === 'center') {\r\n    x -= (width / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction alignY(size, yAlign, paddingAndSize) {\r\n  let {y, height} = size;\r\n  if (yAlign === 'top') {\r\n    y += paddingAndSize;\r\n  } else if (yAlign === 'bottom') {\r\n    y -= height + paddingAndSize;\r\n  } else {\r\n    y -= (height / 2);\r\n  }\r\n  return y;\r\n}\r\nfunction getBackgroundPoint(options, size, alignment, chart) {\r\n  const {caretSize, caretPadding, cornerRadius} = options;\r\n  const {xAlign, yAlign} = alignment;\r\n  const paddingAndSize = caretSize + caretPadding;\r\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n  let x = alignX(size, xAlign);\r\n  const y = alignY(size, yAlign, paddingAndSize);\r\n  if (yAlign === 'center') {\r\n    if (xAlign === 'left') {\r\n      x += paddingAndSize;\r\n    } else if (xAlign === 'right') {\r\n      x -= paddingAndSize;\r\n    }\r\n  } else if (xAlign === 'left') {\r\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\r\n  } else if (xAlign === 'right') {\r\n    x += Math.max(topRight, bottomRight) + caretSize;\r\n  }\r\n  return {\r\n    x: _limitValue(x, 0, chart.width - size.width),\r\n    y: _limitValue(y, 0, chart.height - size.height)\r\n  };\r\n}\r\nfunction getAlignedX(tooltip, align, options) {\r\n  const padding = toPadding(options.padding);\r\n  return align === 'center'\r\n    ? tooltip.x + tooltip.width / 2\r\n    : align === 'right'\r\n      ? tooltip.x + tooltip.width - padding.right\r\n      : tooltip.x + padding.left;\r\n}\r\nfunction getBeforeAfterBodyLines(callback) {\r\n  return pushOrConcat([], splitNewlines(callback));\r\n}\r\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\r\n  return createContext(parent, {\r\n    tooltip,\r\n    tooltipItems,\r\n    type: 'tooltip'\r\n  });\r\n}\r\nfunction overrideCallbacks(callbacks, context) {\r\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n  return override ? callbacks.override(override) : callbacks;\r\n}\r\nclass Tooltip extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.opacity = 0;\r\n    this._active = [];\r\n    this._eventPosition = undefined;\r\n    this._size = undefined;\r\n    this._cachedAnimations = undefined;\r\n    this._tooltipItems = [];\r\n    this.$animations = undefined;\r\n    this.$context = undefined;\r\n    this.chart = config.chart || config._chart;\r\n    this._chart = this.chart;\r\n    this.options = config.options;\r\n    this.dataPoints = undefined;\r\n    this.title = undefined;\r\n    this.beforeBody = undefined;\r\n    this.body = undefined;\r\n    this.afterBody = undefined;\r\n    this.footer = undefined;\r\n    this.xAlign = undefined;\r\n    this.yAlign = undefined;\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this.caretX = undefined;\r\n    this.caretY = undefined;\r\n    this.labelColors = undefined;\r\n    this.labelPointStyles = undefined;\r\n    this.labelTextColors = undefined;\r\n  }\r\n  initialize(options) {\r\n    this.options = options;\r\n    this._cachedAnimations = undefined;\r\n    this.$context = undefined;\r\n  }\r\n  _resolveAnimations() {\r\n    const cached = this._cachedAnimations;\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const chart = this.chart;\r\n    const options = this.options.setContext(this.getContext());\r\n    const opts = options.enabled && chart.options.animation && options.animations;\r\n    const animations = new Animations(this.chart, opts);\r\n    if (opts._cacheable) {\r\n      this._cachedAnimations = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getContext() {\r\n    return this.$context ||\r\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\r\n  }\r\n  getTitle(context, options) {\r\n    const {callbacks} = options;\r\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\r\n    const title = callbacks.title.apply(this, [context]);\r\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n    lines = pushOrConcat(lines, splitNewlines(title));\r\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n    return lines;\r\n  }\r\n  getBeforeBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\r\n  }\r\n  getBody(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const bodyItems = [];\r\n    each(tooltipItems, (context) => {\r\n      const bodyItem = {\r\n        before: [],\r\n        lines: [],\r\n        after: []\r\n      };\r\n      const scoped = overrideCallbacks(callbacks, context);\r\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\r\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\r\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\r\n      bodyItems.push(bodyItem);\r\n    });\r\n    return bodyItems;\r\n  }\r\n  getAfterBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\r\n  }\r\n  getFooter(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\r\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\r\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n    lines = pushOrConcat(lines, splitNewlines(footer));\r\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n    return lines;\r\n  }\r\n  _createItems(options) {\r\n    const active = this._active;\r\n    const data = this.chart.data;\r\n    const labelColors = [];\r\n    const labelPointStyles = [];\r\n    const labelTextColors = [];\r\n    let tooltipItems = [];\r\n    let i, len;\r\n    for (i = 0, len = active.length; i < len; ++i) {\r\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\r\n    }\r\n    if (options.filter) {\r\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\r\n    }\r\n    if (options.itemSort) {\r\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\r\n    }\r\n    each(tooltipItems, (context) => {\r\n      const scoped = overrideCallbacks(options.callbacks, context);\r\n      labelColors.push(scoped.labelColor.call(this, context));\r\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\r\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\r\n    });\r\n    this.labelColors = labelColors;\r\n    this.labelPointStyles = labelPointStyles;\r\n    this.labelTextColors = labelTextColors;\r\n    this.dataPoints = tooltipItems;\r\n    return tooltipItems;\r\n  }\r\n  update(changed, replay) {\r\n    const options = this.options.setContext(this.getContext());\r\n    const active = this._active;\r\n    let properties;\r\n    let tooltipItems = [];\r\n    if (!active.length) {\r\n      if (this.opacity !== 0) {\r\n        properties = {\r\n          opacity: 0\r\n        };\r\n      }\r\n    } else {\r\n      const position = positioners[options.position].call(this, active, this._eventPosition);\r\n      tooltipItems = this._createItems(options);\r\n      this.title = this.getTitle(tooltipItems, options);\r\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\r\n      this.body = this.getBody(tooltipItems, options);\r\n      this.afterBody = this.getAfterBody(tooltipItems, options);\r\n      this.footer = this.getFooter(tooltipItems, options);\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, size);\r\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\r\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\r\n      this.xAlign = alignment.xAlign;\r\n      this.yAlign = alignment.yAlign;\r\n      properties = {\r\n        opacity: 1,\r\n        x: backgroundPoint.x,\r\n        y: backgroundPoint.y,\r\n        width: size.width,\r\n        height: size.height,\r\n        caretX: position.x,\r\n        caretY: position.y\r\n      };\r\n    }\r\n    this._tooltipItems = tooltipItems;\r\n    this.$context = undefined;\r\n    if (properties) {\r\n      this._resolveAnimations().update(this, properties);\r\n    }\r\n    if (changed && options.external) {\r\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\r\n    }\r\n  }\r\n  drawCaret(tooltipPoint, ctx, size, options) {\r\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n  }\r\n  getCaretPosition(tooltipPoint, size, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {caretSize, cornerRadius} = options;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n    const {x: ptX, y: ptY} = tooltipPoint;\r\n    const {width, height} = size;\r\n    let x1, x2, x3, y1, y2, y3;\r\n    if (yAlign === 'center') {\r\n      y2 = ptY + (height / 2);\r\n      if (xAlign === 'left') {\r\n        x1 = ptX;\r\n        x2 = x1 - caretSize;\r\n        y1 = y2 + caretSize;\r\n        y3 = y2 - caretSize;\r\n      } else {\r\n        x1 = ptX + width;\r\n        x2 = x1 + caretSize;\r\n        y1 = y2 - caretSize;\r\n        y3 = y2 + caretSize;\r\n      }\r\n      x3 = x1;\r\n    } else {\r\n      if (xAlign === 'left') {\r\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\r\n      } else if (xAlign === 'right') {\r\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\r\n      } else {\r\n        x2 = this.caretX;\r\n      }\r\n      if (yAlign === 'top') {\r\n        y1 = ptY;\r\n        y2 = y1 - caretSize;\r\n        x1 = x2 - caretSize;\r\n        x3 = x2 + caretSize;\r\n      } else {\r\n        y1 = ptY + height;\r\n        y2 = y1 + caretSize;\r\n        x1 = x2 + caretSize;\r\n        x3 = x2 - caretSize;\r\n      }\r\n      y3 = y1;\r\n    }\r\n    return {x1, x2, x3, y1, y2, y3};\r\n  }\r\n  drawTitle(pt, ctx, options) {\r\n    const title = this.title;\r\n    const length = title.length;\r\n    let titleFont, titleSpacing, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.titleAlign, options);\r\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n      ctx.textBaseline = 'middle';\r\n      titleFont = toFont(options.titleFont);\r\n      titleSpacing = options.titleSpacing;\r\n      ctx.fillStyle = options.titleColor;\r\n      ctx.font = titleFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n        pt.y += titleFont.lineHeight + titleSpacing;\r\n        if (i + 1 === length) {\r\n          pt.y += options.titleMarginBottom - titleSpacing;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n    const labelColors = this.labelColors[i];\r\n    const labelPointStyle = this.labelPointStyles[i];\r\n    const {boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    const colorX = getAlignedX(this, 'left', options);\r\n    const rtlColorX = rtlHelper.x(colorX);\r\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n    const colorY = pt.y + yOffSet;\r\n    if (options.usePointStyle) {\r\n      const drawOptions = {\r\n        radius: Math.min(boxWidth, boxHeight) / 2,\r\n        pointStyle: labelPointStyle.pointStyle,\r\n        rotation: labelPointStyle.rotation,\r\n        borderWidth: 1\r\n      };\r\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n      const centerY = colorY + boxHeight / 2;\r\n      ctx.strokeStyle = options.multiKeyBackground;\r\n      ctx.fillStyle = options.multiKeyBackground;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.fillStyle = labelColors.backgroundColor;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n    } else {\r\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.setLineDash(labelColors.borderDash || []);\r\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\r\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\r\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\r\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        addRoundedRectPath(ctx, {\r\n          x: outerX,\r\n          y: colorY,\r\n          w: boxWidth,\r\n          h: boxHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: innerX,\r\n          y: colorY + 1,\r\n          w: boxWidth - 2,\r\n          h: boxHeight - 2,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\r\n      }\r\n    }\r\n    ctx.fillStyle = this.labelTextColors[i];\r\n  }\r\n  drawBody(pt, ctx, options) {\r\n    const {body} = this;\r\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    let bodyLineHeight = bodyFont.lineHeight;\r\n    let xLinePadding = 0;\r\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n    const fillLineOfText = function(line) {\r\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n      pt.y += bodyLineHeight + bodySpacing;\r\n    };\r\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n    ctx.textAlign = bodyAlign;\r\n    ctx.textBaseline = 'middle';\r\n    ctx.font = bodyFont.string;\r\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\r\n    ctx.fillStyle = options.bodyColor;\r\n    each(this.beforeBody, fillLineOfText);\r\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\r\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\r\n      : 0;\r\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\r\n      bodyItem = body[i];\r\n      textColor = this.labelTextColors[i];\r\n      ctx.fillStyle = textColor;\r\n      each(bodyItem.before, fillLineOfText);\r\n      lines = bodyItem.lines;\r\n      if (displayColors && lines.length) {\r\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n      }\r\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\r\n        fillLineOfText(lines[j]);\r\n        bodyLineHeight = bodyFont.lineHeight;\r\n      }\r\n      each(bodyItem.after, fillLineOfText);\r\n    }\r\n    xLinePadding = 0;\r\n    bodyLineHeight = bodyFont.lineHeight;\r\n    each(this.afterBody, fillLineOfText);\r\n    pt.y -= bodySpacing;\r\n  }\r\n  drawFooter(pt, ctx, options) {\r\n    const footer = this.footer;\r\n    const length = footer.length;\r\n    let footerFont, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.footerAlign, options);\r\n      pt.y += options.footerMarginTop;\r\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n      ctx.textBaseline = 'middle';\r\n      footerFont = toFont(options.footerFont);\r\n      ctx.fillStyle = options.footerColor;\r\n      ctx.font = footerFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n        pt.y += footerFont.lineHeight + options.footerSpacing;\r\n      }\r\n    }\r\n  }\r\n  drawBackground(pt, ctx, tooltipSize, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {x, y} = pt;\r\n    const {width, height} = tooltipSize;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + topLeft, y);\r\n    if (yAlign === 'top') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width - topRight, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\r\n    if (yAlign === 'center' && xAlign === 'right') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width, y + height - bottomRight);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\r\n    if (yAlign === 'bottom') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + bottomLeft, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\r\n    if (yAlign === 'center' && xAlign === 'left') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x, y + topLeft);\r\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    if (options.borderWidth > 0) {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n  _updateAnimationTarget(options) {\r\n    const chart = this.chart;\r\n    const anims = this.$animations;\r\n    const animX = anims && anims.x;\r\n    const animY = anims && anims.y;\r\n    if (animX || animY) {\r\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, this._size);\r\n      const alignment = determineAlignment(chart, options, positionAndSize);\r\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n      if (animX._to !== point.x || animY._to !== point.y) {\r\n        this.xAlign = alignment.xAlign;\r\n        this.yAlign = alignment.yAlign;\r\n        this.width = size.width;\r\n        this.height = size.height;\r\n        this.caretX = position.x;\r\n        this.caretY = position.y;\r\n        this._resolveAnimations().update(this, point);\r\n      }\r\n    }\r\n  }\r\n  _willRender() {\r\n    return !!this.opacity;\r\n  }\r\n  draw(ctx) {\r\n    const options = this.options.setContext(this.getContext());\r\n    let opacity = this.opacity;\r\n    if (!opacity) {\r\n      return;\r\n    }\r\n    this._updateAnimationTarget(options);\r\n    const tooltipSize = {\r\n      width: this.width,\r\n      height: this.height\r\n    };\r\n    const pt = {\r\n      x: this.x,\r\n      y: this.y\r\n    };\r\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n    const padding = toPadding(options.padding);\r\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\r\n    if (options.enabled && hasTooltipContent) {\r\n      ctx.save();\r\n      ctx.globalAlpha = opacity;\r\n      this.drawBackground(pt, ctx, tooltipSize, options);\r\n      overrideTextDirection(ctx, options.textDirection);\r\n      pt.y += padding.top;\r\n      this.drawTitle(pt, ctx, options);\r\n      this.drawBody(pt, ctx, options);\r\n      this.drawFooter(pt, ctx, options);\r\n      restoreTextDirection(ctx, options.textDirection);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements, eventPosition) {\r\n    const lastActive = this._active;\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.chart.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(lastActive, active);\r\n    const positionChanged = this._positionChanged(active, eventPosition);\r\n    if (changed || positionChanged) {\r\n      this._active = active;\r\n      this._eventPosition = eventPosition;\r\n      this._ignoreReplayEvents = true;\r\n      this.update(true);\r\n    }\r\n  }\r\n  handleEvent(e, replay, inChartArea = true) {\r\n    if (replay && this._ignoreReplayEvents) {\r\n      return false;\r\n    }\r\n    this._ignoreReplayEvents = false;\r\n    const options = this.options;\r\n    const lastActive = this._active || [];\r\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\r\n    const positionChanged = this._positionChanged(active, e);\r\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n    if (changed) {\r\n      this._active = active;\r\n      if (options.enabled || options.external) {\r\n        this._eventPosition = {\r\n          x: e.x,\r\n          y: e.y\r\n        };\r\n        this.update(true, replay);\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n  _getActiveElements(e, lastActive, replay, inChartArea) {\r\n    const options = this.options;\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n    if (!inChartArea) {\r\n      return lastActive;\r\n    }\r\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n    if (options.reverse) {\r\n      active.reverse();\r\n    }\r\n    return active;\r\n  }\r\n  _positionChanged(active, e) {\r\n    const {caretX, caretY, options} = this;\r\n    const position = positioners[options.position].call(this, active, e);\r\n    return position !== false && (caretX !== position.x || caretY !== position.y);\r\n  }\r\n}\r\nTooltip.positioners = positioners;\r\nvar plugin_tooltip = {\r\n  id: 'tooltip',\r\n  _element: Tooltip,\r\n  positioners,\r\n  afterInit(chart, _args, options) {\r\n    if (options) {\r\n      chart.tooltip = new Tooltip({chart, options});\r\n    }\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  reset(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  afterDraw(chart) {\r\n    const tooltip = chart.tooltip;\r\n    if (tooltip && tooltip._willRender()) {\r\n      const args = {\r\n        tooltip\r\n      };\r\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\r\n        return;\r\n      }\r\n      tooltip.draw(chart.ctx);\r\n      chart.notifyPlugins('afterTooltipDraw', args);\r\n    }\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (chart.tooltip) {\r\n      const useFinalPosition = args.replay;\r\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\r\n        args.changed = true;\r\n      }\r\n    }\r\n  },\r\n  defaults: {\r\n    enabled: true,\r\n    external: null,\r\n    position: 'average',\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    titleColor: '#fff',\r\n    titleFont: {\r\n      weight: 'bold',\r\n    },\r\n    titleSpacing: 2,\r\n    titleMarginBottom: 6,\r\n    titleAlign: 'left',\r\n    bodyColor: '#fff',\r\n    bodySpacing: 2,\r\n    bodyFont: {\r\n    },\r\n    bodyAlign: 'left',\r\n    footerColor: '#fff',\r\n    footerSpacing: 2,\r\n    footerMarginTop: 6,\r\n    footerFont: {\r\n      weight: 'bold',\r\n    },\r\n    footerAlign: 'left',\r\n    padding: 6,\r\n    caretPadding: 2,\r\n    caretSize: 5,\r\n    cornerRadius: 6,\r\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\r\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\r\n    multiKeyBackground: '#fff',\r\n    displayColors: true,\r\n    boxPadding: 0,\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    animation: {\r\n      duration: 400,\r\n      easing: 'easeOutQuart',\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\r\n      },\r\n      opacity: {\r\n        easing: 'linear',\r\n        duration: 200\r\n      }\r\n    },\r\n    callbacks: {\r\n      beforeTitle: noop,\r\n      title(tooltipItems) {\r\n        if (tooltipItems.length > 0) {\r\n          const item = tooltipItems[0];\r\n          const labels = item.chart.data.labels;\r\n          const labelCount = labels ? labels.length : 0;\r\n          if (this && this.options && this.options.mode === 'dataset') {\r\n            return item.dataset.label || '';\r\n          } else if (item.label) {\r\n            return item.label;\r\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n            return labels[item.dataIndex];\r\n          }\r\n        }\r\n        return '';\r\n      },\r\n      afterTitle: noop,\r\n      beforeBody: noop,\r\n      beforeLabel: noop,\r\n      label(tooltipItem) {\r\n        if (this && this.options && this.options.mode === 'dataset') {\r\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n        }\r\n        let label = tooltipItem.dataset.label || '';\r\n        if (label) {\r\n          label += ': ';\r\n        }\r\n        const value = tooltipItem.formattedValue;\r\n        if (!isNullOrUndef(value)) {\r\n          label += value;\r\n        }\r\n        return label;\r\n      },\r\n      labelColor(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          borderColor: options.borderColor,\r\n          backgroundColor: options.backgroundColor,\r\n          borderWidth: options.borderWidth,\r\n          borderDash: options.borderDash,\r\n          borderDashOffset: options.borderDashOffset,\r\n          borderRadius: 0,\r\n        };\r\n      },\r\n      labelTextColor() {\r\n        return this.options.bodyColor;\r\n      },\r\n      labelPointStyle(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          pointStyle: options.pointStyle,\r\n          rotation: options.rotation,\r\n        };\r\n      },\r\n      afterLabel: noop,\r\n      afterBody: noop,\r\n      beforeFooter: noop,\r\n      footer: noop,\r\n      afterFooter: noop\r\n    }\r\n  },\r\n  defaultRoutes: {\r\n    bodyFont: 'font',\r\n    footerFont: 'font',\r\n    titleFont: 'font'\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n    _indexable: false,\r\n    callbacks: {\r\n      _scriptable: false,\r\n      _indexable: false,\r\n    },\r\n    animation: {\r\n      _fallback: false\r\n    },\r\n    animations: {\r\n      _fallback: 'animation'\r\n    }\r\n  },\r\n  additionalOptionScopes: ['interaction']\r\n};\r\n\r\nvar plugins = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nDecimation: plugin_decimation,\r\nFiller: index,\r\nLegend: plugin_legend,\r\nSubTitle: plugin_subtitle,\r\nTitle: plugin_title,\r\nTooltip: plugin_tooltip\r\n});\r\n\r\nconst addIfString = (labels, raw, index, addedLabels) => {\r\n  if (typeof raw === 'string') {\r\n    index = labels.push(raw) - 1;\r\n    addedLabels.unshift({index, label: raw});\r\n  } else if (isNaN(raw)) {\r\n    index = null;\r\n  }\r\n  return index;\r\n};\r\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\r\n  const first = labels.indexOf(raw);\r\n  if (first === -1) {\r\n    return addIfString(labels, raw, index, addedLabels);\r\n  }\r\n  const last = labels.lastIndexOf(raw);\r\n  return first !== last ? index : first;\r\n}\r\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\r\nclass CategoryScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n    this._addedLabels = [];\r\n  }\r\n  init(scaleOptions) {\r\n    const added = this._addedLabels;\r\n    if (added.length) {\r\n      const labels = this.getLabels();\r\n      for (const {index, label} of added) {\r\n        if (labels[index] === label) {\r\n          labels.splice(index, 1);\r\n        }\r\n      }\r\n      this._addedLabels = [];\r\n    }\r\n    super.init(scaleOptions);\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    const labels = this.getLabels();\r\n    index = isFinite(index) && labels[index] === raw ? index\r\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\r\n    return validIndex(index, labels.length - 1);\r\n  }\r\n  determineDataLimits() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this.getMinMax(true);\r\n    if (this.options.bounds === 'ticks') {\r\n      if (!minDefined) {\r\n        min = 0;\r\n      }\r\n      if (!maxDefined) {\r\n        max = this.getLabels().length - 1;\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const offset = this.options.offset;\r\n    const ticks = [];\r\n    let labels = this.getLabels();\r\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\r\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n    this._startValue = this.min - (offset ? 0.5 : 0);\r\n    for (let value = min; value <= max; value++) {\r\n      ticks.push({value});\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    const labels = this.getLabels();\r\n    if (value >= 0 && value < labels.length) {\r\n      return labels[value];\r\n    }\r\n    return value;\r\n  }\r\n  configure() {\r\n    super.configure();\r\n    if (!this.isHorizontal()) {\r\n      this._reversePixels = !this._reversePixels;\r\n    }\r\n  }\r\n  getPixelForValue(value) {\r\n    if (typeof value !== 'number') {\r\n      value = this.parse(value);\r\n    }\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\r\n  }\r\n  getBasePixel() {\r\n    return this.bottom;\r\n  }\r\n}\r\nCategoryScale.id = 'category';\r\nCategoryScale.defaults = {\r\n  ticks: {\r\n    callback: CategoryScale.prototype.getLabelForValue\r\n  }\r\n};\r\n\r\nfunction generateTicks$1(generationOptions, dataRange) {\r\n  const ticks = [];\r\n  const MIN_SPACING = 1e-14;\r\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\r\n  const unit = step || 1;\r\n  const maxSpaces = maxTicks - 1;\r\n  const {min: rmin, max: rmax} = dataRange;\r\n  const minDefined = !isNullOrUndef(min);\r\n  const maxDefined = !isNullOrUndef(max);\r\n  const countDefined = !isNullOrUndef(count);\r\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\r\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n  let factor, niceMin, niceMax, numSpaces;\r\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n    return [{value: rmin}, {value: rmax}];\r\n  }\r\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n  if (numSpaces > maxSpaces) {\r\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n  }\r\n  if (!isNullOrUndef(precision)) {\r\n    factor = Math.pow(10, precision);\r\n    spacing = Math.ceil(spacing * factor) / factor;\r\n  }\r\n  if (bounds === 'ticks') {\r\n    niceMin = Math.floor(rmin / spacing) * spacing;\r\n    niceMax = Math.ceil(rmax / spacing) * spacing;\r\n  } else {\r\n    niceMin = rmin;\r\n    niceMax = rmax;\r\n  }\r\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\r\n    spacing = (max - min) / numSpaces;\r\n    niceMin = min;\r\n    niceMax = max;\r\n  } else if (countDefined) {\r\n    niceMin = minDefined ? min : niceMin;\r\n    niceMax = maxDefined ? max : niceMax;\r\n    numSpaces = count - 1;\r\n    spacing = (niceMax - niceMin) / numSpaces;\r\n  } else {\r\n    numSpaces = (niceMax - niceMin) / spacing;\r\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n      numSpaces = Math.round(numSpaces);\r\n    } else {\r\n      numSpaces = Math.ceil(numSpaces);\r\n    }\r\n  }\r\n  const decimalPlaces = Math.max(\r\n    _decimalPlaces(spacing),\r\n    _decimalPlaces(niceMin)\r\n  );\r\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\r\n  niceMin = Math.round(niceMin * factor) / factor;\r\n  niceMax = Math.round(niceMax * factor) / factor;\r\n  let j = 0;\r\n  if (minDefined) {\r\n    if (includeBounds && niceMin !== min) {\r\n      ticks.push({value: min});\r\n      if (niceMin < min) {\r\n        j++;\r\n      }\r\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\r\n        j++;\r\n      }\r\n    } else if (niceMin < min) {\r\n      j++;\r\n    }\r\n  }\r\n  for (; j < numSpaces; ++j) {\r\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\r\n  }\r\n  if (maxDefined && includeBounds && niceMax !== max) {\r\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\r\n      ticks[ticks.length - 1].value = max;\r\n    } else {\r\n      ticks.push({value: max});\r\n    }\r\n  } else if (!maxDefined || niceMax === max) {\r\n    ticks.push({value: niceMax});\r\n  }\r\n  return ticks;\r\n}\r\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\r\n  const rad = toRadians(minRotation);\r\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\r\n  const length = 0.75 * minSpacing * ('' + value).length;\r\n  return Math.min(minSpacing / ratio, length);\r\n}\r\nclass LinearScaleBase extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._endValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n      return null;\r\n    }\r\n    return +raw;\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {beginAtZero} = this.options;\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    if (beginAtZero) {\r\n      const minSign = sign(min);\r\n      const maxSign = sign(max);\r\n      if (minSign < 0 && maxSign < 0) {\r\n        setMax(0);\r\n      } else if (minSign > 0 && maxSign > 0) {\r\n        setMin(0);\r\n      }\r\n    }\r\n    if (min === max) {\r\n      let offset = 1;\r\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\r\n        offset = Math.abs(max * 0.05);\r\n      }\r\n      setMax(max + offset);\r\n      if (!beginAtZero) {\r\n        setMin(min - offset);\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  getTickLimit() {\r\n    const tickOpts = this.options.ticks;\r\n    let {maxTicksLimit, stepSize} = tickOpts;\r\n    let maxTicks;\r\n    if (stepSize) {\r\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\r\n      if (maxTicks > 1000) {\r\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\r\n        maxTicks = 1000;\r\n      }\r\n    } else {\r\n      maxTicks = this.computeTickLimit();\r\n      maxTicksLimit = maxTicksLimit || 11;\r\n    }\r\n    if (maxTicksLimit) {\r\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n    }\r\n    return maxTicks;\r\n  }\r\n  computeTickLimit() {\r\n    return Number.POSITIVE_INFINITY;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    let maxTicks = this.getTickLimit();\r\n    maxTicks = Math.max(2, maxTicks);\r\n    const numericGeneratorOptions = {\r\n      maxTicks,\r\n      bounds: opts.bounds,\r\n      min: opts.min,\r\n      max: opts.max,\r\n      precision: tickOpts.precision,\r\n      step: tickOpts.stepSize,\r\n      count: tickOpts.count,\r\n      maxDigits: this._maxDigits(),\r\n      horizontal: this.isHorizontal(),\r\n      minRotation: tickOpts.minRotation || 0,\r\n      includeBounds: tickOpts.includeBounds !== false\r\n    };\r\n    const dataRange = this._range || this;\r\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  configure() {\r\n    const ticks = this.ticks;\r\n    let start = this.min;\r\n    let end = this.max;\r\n    super.configure();\r\n    if (this.options.offset && ticks.length) {\r\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n      start -= offset;\r\n      end += offset;\r\n    }\r\n    this._startValue = start;\r\n    this._endValue = end;\r\n    this._valueRange = end - start;\r\n  }\r\n  getLabelForValue(value) {\r\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n}\r\n\r\nclass LinearScale extends LinearScaleBase {\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? min : 0;\r\n    this.max = isNumberFinite(max) ? max : 1;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    const horizontal = this.isHorizontal();\r\n    const length = horizontal ? this.width : this.height;\r\n    const minRotation = toRadians(this.options.ticks.minRotation);\r\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\r\n    const tickFont = this._resolveTickFontOptions(0);\r\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\r\n  }\r\n  getPixelForValue(value) {\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n  }\r\n}\r\nLinearScale.id = 'linear';\r\nLinearScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.numeric\r\n  }\r\n};\r\n\r\nfunction isMajor(tickVal) {\r\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\r\n  return remain === 1;\r\n}\r\nfunction generateTicks(generationOptions, dataRange) {\r\n  const endExp = Math.floor(log10(dataRange.max));\r\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n  const ticks = [];\r\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\r\n  let exp = Math.floor(log10(tickVal));\r\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\r\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n  do {\r\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\r\n    ++significand;\r\n    if (significand === 10) {\r\n      significand = 1;\r\n      ++exp;\r\n      precision = exp >= 0 ? 1 : precision;\r\n    }\r\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\r\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\r\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\r\n  return ticks;\r\n}\r\nclass LogarithmicScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\r\n    if (value === 0) {\r\n      this._zero = true;\r\n      return undefined;\r\n    }\r\n    return isNumberFinite(value) && value > 0 ? value : null;\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\r\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\r\n    if (this.options.beginAtZero) {\r\n      this._zero = true;\r\n    }\r\n    this.handleTickRangeOptions();\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let min = this.min;\r\n    let max = this.max;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\r\n    if (min === max) {\r\n      if (min <= 0) {\r\n        setMin(1);\r\n        setMax(10);\r\n      } else {\r\n        setMin(exp(min, -1));\r\n        setMax(exp(max, +1));\r\n      }\r\n    }\r\n    if (min <= 0) {\r\n      setMin(exp(max, -1));\r\n    }\r\n    if (max <= 0) {\r\n      setMax(exp(min, +1));\r\n    }\r\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\r\n      setMin(exp(min, -1));\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const generationOptions = {\r\n      min: this._userMin,\r\n      max: this._userMax\r\n    };\r\n    const ticks = generateTicks(generationOptions, this);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    return value === undefined\r\n      ? '0'\r\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n  configure() {\r\n    const start = this.min;\r\n    super.configure();\r\n    this._startValue = log10(start);\r\n    this._valueRange = log10(this.max) - log10(start);\r\n  }\r\n  getPixelForValue(value) {\r\n    if (value === undefined || value === 0) {\r\n      value = this.min;\r\n    }\r\n    if (value === null || isNaN(value)) {\r\n      return NaN;\r\n    }\r\n    return this.getPixelForDecimal(value === this.min\r\n      ? 0\r\n      : (log10(value) - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const decimal = this.getDecimalForPixel(pixel);\r\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\r\n  }\r\n}\r\nLogarithmicScale.id = 'logarithmic';\r\nLogarithmicScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.logarithmic,\r\n    major: {\r\n      enabled: true\r\n    }\r\n  }\r\n};\r\n\r\nfunction getTickBackdropHeight(opts) {\r\n  const tickOpts = opts.ticks;\r\n  if (tickOpts.display && opts.display) {\r\n    const padding = toPadding(tickOpts.backdropPadding);\r\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n  }\r\n  return 0;\r\n}\r\nfunction measureLabelSize(ctx, font, label) {\r\n  label = isArray(label) ? label : [label];\r\n  return {\r\n    w: _longestText(ctx, font.string, label),\r\n    h: label.length * font.lineHeight\r\n  };\r\n}\r\nfunction determineLimits(angle, pos, size, min, max) {\r\n  if (angle === min || angle === max) {\r\n    return {\r\n      start: pos - (size / 2),\r\n      end: pos + (size / 2)\r\n    };\r\n  } else if (angle < min || angle > max) {\r\n    return {\r\n      start: pos - size,\r\n      end: pos\r\n    };\r\n  }\r\n  return {\r\n    start: pos,\r\n    end: pos + size\r\n  };\r\n}\r\nfunction fitWithPointLabels(scale) {\r\n  const orig = {\r\n    l: scale.left + scale._padding.left,\r\n    r: scale.right - scale._padding.right,\r\n    t: scale.top + scale._padding.top,\r\n    b: scale.bottom - scale._padding.bottom\r\n  };\r\n  const limits = Object.assign({}, orig);\r\n  const labelSizes = [];\r\n  const padding = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const pointLabelOpts = scale.options.pointLabels;\r\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\r\n    padding[i] = opts.padding;\r\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\r\n    const plFont = toFont(opts.font);\r\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\r\n    labelSizes[i] = textSize;\r\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\r\n    const angle = Math.round(toDegrees(angleRadians));\r\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\r\n  }\r\n  scale.setCenterPoint(\r\n    orig.l - limits.l,\r\n    limits.r - orig.r,\r\n    orig.t - limits.t,\r\n    limits.b - orig.b\r\n  );\r\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\r\n}\r\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\r\n  const sin = Math.abs(Math.sin(angle));\r\n  const cos = Math.abs(Math.cos(angle));\r\n  let x = 0;\r\n  let y = 0;\r\n  if (hLimits.start < orig.l) {\r\n    x = (orig.l - hLimits.start) / sin;\r\n    limits.l = Math.min(limits.l, orig.l - x);\r\n  } else if (hLimits.end > orig.r) {\r\n    x = (hLimits.end - orig.r) / sin;\r\n    limits.r = Math.max(limits.r, orig.r + x);\r\n  }\r\n  if (vLimits.start < orig.t) {\r\n    y = (orig.t - vLimits.start) / cos;\r\n    limits.t = Math.min(limits.t, orig.t - y);\r\n  } else if (vLimits.end > orig.b) {\r\n    y = (vLimits.end - orig.b) / cos;\r\n    limits.b = Math.max(limits.b, orig.b + y);\r\n  }\r\n}\r\nfunction buildPointLabelItems(scale, labelSizes, padding) {\r\n  const items = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const opts = scale.options;\r\n  const extra = getTickBackdropHeight(opts) / 2;\r\n  const outerDistance = scale.drawingArea;\r\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\r\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\r\n    const size = labelSizes[i];\r\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\r\n    const textAlign = getTextAlignForAngle(angle);\r\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\r\n    items.push({\r\n      x: pointLabelPosition.x,\r\n      y,\r\n      textAlign,\r\n      left,\r\n      top: y,\r\n      right: left + size.w,\r\n      bottom: y + size.h\r\n    });\r\n  }\r\n  return items;\r\n}\r\nfunction getTextAlignForAngle(angle) {\r\n  if (angle === 0 || angle === 180) {\r\n    return 'center';\r\n  } else if (angle < 180) {\r\n    return 'left';\r\n  }\r\n  return 'right';\r\n}\r\nfunction leftForTextAlign(x, w, align) {\r\n  if (align === 'right') {\r\n    x -= w;\r\n  } else if (align === 'center') {\r\n    x -= (w / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction yForAngle(y, h, angle) {\r\n  if (angle === 90 || angle === 270) {\r\n    y -= (h / 2);\r\n  } else if (angle > 270 || angle < 90) {\r\n    y -= h;\r\n  }\r\n  return y;\r\n}\r\nfunction drawPointLabels(scale, labelCount) {\r\n  const {ctx, options: {pointLabels}} = scale;\r\n  for (let i = labelCount - 1; i >= 0; i--) {\r\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\r\n    const plFont = toFont(optsAtIndex.font);\r\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\r\n    const {backdropColor} = optsAtIndex;\r\n    if (!isNullOrUndef(backdropColor)) {\r\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\r\n      const padding = toPadding(optsAtIndex.backdropPadding);\r\n      ctx.fillStyle = backdropColor;\r\n      const backdropLeft = left - padding.left;\r\n      const backdropTop = top - padding.top;\r\n      const backdropWidth = right - left + padding.width;\r\n      const backdropHeight = bottom - top + padding.height;\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: backdropLeft,\r\n          y: backdropTop,\r\n          w: backdropWidth,\r\n          h: backdropHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\r\n      }\r\n    }\r\n    renderText(\r\n      ctx,\r\n      scale._pointLabels[i],\r\n      x,\r\n      y + (plFont.lineHeight / 2),\r\n      plFont,\r\n      {\r\n        color: optsAtIndex.color,\r\n        textAlign: textAlign,\r\n        textBaseline: 'middle'\r\n      }\r\n    );\r\n  }\r\n}\r\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\r\n  const {ctx} = scale;\r\n  if (circular) {\r\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n  } else {\r\n    let pointPosition = scale.getPointPosition(0, radius);\r\n    ctx.moveTo(pointPosition.x, pointPosition.y);\r\n    for (let i = 1; i < labelCount; i++) {\r\n      pointPosition = scale.getPointPosition(i, radius);\r\n      ctx.lineTo(pointPosition.x, pointPosition.y);\r\n    }\r\n  }\r\n}\r\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\r\n  const ctx = scale.ctx;\r\n  const circular = gridLineOpts.circular;\r\n  const {color, lineWidth} = gridLineOpts;\r\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\r\n    return;\r\n  }\r\n  ctx.save();\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.setLineDash(gridLineOpts.borderDash);\r\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\r\n  ctx.beginPath();\r\n  pathRadiusLine(scale, radius, circular, labelCount);\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n  ctx.restore();\r\n}\r\nfunction createPointLabelContext(parent, index, label) {\r\n  return createContext(parent, {\r\n    label,\r\n    index,\r\n    type: 'pointLabel'\r\n  });\r\n}\r\nclass RadialLinearScale extends LinearScaleBase {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.xCenter = undefined;\r\n    this.yCenter = undefined;\r\n    this.drawingArea = undefined;\r\n    this._pointLabels = [];\r\n    this._pointLabelItems = [];\r\n  }\r\n  setDimensions() {\r\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\r\n    const w = this.width = this.maxWidth - padding.width;\r\n    const h = this.height = this.maxHeight - padding.height;\r\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\r\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\r\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(false);\r\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\r\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n  }\r\n  generateTickLabels(ticks) {\r\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\r\n    this._pointLabels = this.getLabels()\r\n      .map((value, index) => {\r\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\r\n        return label || label === 0 ? label : '';\r\n      })\r\n      .filter((v, i) => this.chart.getDataVisibility(i));\r\n  }\r\n  fit() {\r\n    const opts = this.options;\r\n    if (opts.display && opts.pointLabels.display) {\r\n      fitWithPointLabels(this);\r\n    } else {\r\n      this.setCenterPoint(0, 0, 0, 0);\r\n    }\r\n  }\r\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\r\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\r\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\r\n  }\r\n  getIndexAngle(index) {\r\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\r\n    const startAngle = this.options.startAngle || 0;\r\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n  }\r\n  getDistanceFromCenterForValue(value) {\r\n    if (isNullOrUndef(value)) {\r\n      return NaN;\r\n    }\r\n    const scalingFactor = this.drawingArea / (this.max - this.min);\r\n    if (this.options.reverse) {\r\n      return (this.max - value) * scalingFactor;\r\n    }\r\n    return (value - this.min) * scalingFactor;\r\n  }\r\n  getValueForDistanceFromCenter(distance) {\r\n    if (isNullOrUndef(distance)) {\r\n      return NaN;\r\n    }\r\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\r\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\r\n  }\r\n  getPointLabelContext(index) {\r\n    const pointLabels = this._pointLabels || [];\r\n    if (index >= 0 && index < pointLabels.length) {\r\n      const pointLabel = pointLabels[index];\r\n      return createPointLabelContext(this.getContext(), index, pointLabel);\r\n    }\r\n  }\r\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\r\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\r\n    return {\r\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\r\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\r\n      angle\r\n    };\r\n  }\r\n  getPointPositionForValue(index, value) {\r\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n  }\r\n  getBasePosition(index) {\r\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n  }\r\n  getPointLabelPosition(index) {\r\n    const {left, top, right, bottom} = this._pointLabelItems[index];\r\n    return {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    };\r\n  }\r\n  drawBackground() {\r\n    const {backgroundColor, grid: {circular}} = this.options;\r\n    if (backgroundColor) {\r\n      const ctx = this.ctx;\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\r\n      ctx.closePath();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawGrid() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const {angleLines, grid} = opts;\r\n    const labelCount = this._pointLabels.length;\r\n    let i, offset, position;\r\n    if (opts.pointLabels.display) {\r\n      drawPointLabels(this, labelCount);\r\n    }\r\n    if (grid.display) {\r\n      this.ticks.forEach((tick, index) => {\r\n        if (index !== 0) {\r\n          offset = this.getDistanceFromCenterForValue(tick.value);\r\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\r\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\r\n        }\r\n      });\r\n    }\r\n    if (angleLines.display) {\r\n      ctx.save();\r\n      for (i = labelCount - 1; i >= 0; i--) {\r\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\r\n        const {color, lineWidth} = optsAtIndex;\r\n        if (!lineWidth || !color) {\r\n          continue;\r\n        }\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = color;\r\n        ctx.setLineDash(optsAtIndex.borderDash);\r\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\r\n        position = this.getPointPosition(i, offset);\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.xCenter, this.yCenter);\r\n        ctx.lineTo(position.x, position.y);\r\n        ctx.stroke();\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawBorder() {}\r\n  drawLabels() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    if (!tickOpts.display) {\r\n      return;\r\n    }\r\n    const startAngle = this.getIndexAngle(0);\r\n    let offset, width;\r\n    ctx.save();\r\n    ctx.translate(this.xCenter, this.yCenter);\r\n    ctx.rotate(startAngle);\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    this.ticks.forEach((tick, index) => {\r\n      if (index === 0 && !opts.reverse) {\r\n        return;\r\n      }\r\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\r\n      const tickFont = toFont(optsAtIndex.font);\r\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        ctx.font = tickFont.string;\r\n        width = ctx.measureText(tick.label).width;\r\n        ctx.fillStyle = optsAtIndex.backdropColor;\r\n        const padding = toPadding(optsAtIndex.backdropPadding);\r\n        ctx.fillRect(\r\n          -width / 2 - padding.left,\r\n          -offset - tickFont.size / 2 - padding.top,\r\n          width + padding.width,\r\n          tickFont.size + padding.height\r\n        );\r\n      }\r\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n        color: optsAtIndex.color,\r\n      });\r\n    });\r\n    ctx.restore();\r\n  }\r\n  drawTitle() {}\r\n}\r\nRadialLinearScale.id = 'radialLinear';\r\nRadialLinearScale.defaults = {\r\n  display: true,\r\n  animate: true,\r\n  position: 'chartArea',\r\n  angleLines: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0\r\n  },\r\n  grid: {\r\n    circular: false\r\n  },\r\n  startAngle: 0,\r\n  ticks: {\r\n    showLabelBackdrop: true,\r\n    callback: Ticks.formatters.numeric\r\n  },\r\n  pointLabels: {\r\n    backdropColor: undefined,\r\n    backdropPadding: 2,\r\n    display: true,\r\n    font: {\r\n      size: 10\r\n    },\r\n    callback(label) {\r\n      return label;\r\n    },\r\n    padding: 5,\r\n    centerPointLabels: false\r\n  }\r\n};\r\nRadialLinearScale.defaultRoutes = {\r\n  'angleLines.color': 'borderColor',\r\n  'pointLabels.color': 'color',\r\n  'ticks.color': 'color'\r\n};\r\nRadialLinearScale.descriptors = {\r\n  angleLines: {\r\n    _fallback: 'grid'\r\n  }\r\n};\r\n\r\nconst INTERVALS = {\r\n  millisecond: {common: true, size: 1, steps: 1000},\r\n  second: {common: true, size: 1000, steps: 60},\r\n  minute: {common: true, size: 60000, steps: 60},\r\n  hour: {common: true, size: 3600000, steps: 24},\r\n  day: {common: true, size: 86400000, steps: 30},\r\n  week: {common: false, size: 604800000, steps: 4},\r\n  month: {common: true, size: 2.628e9, steps: 12},\r\n  quarter: {common: false, size: 7.884e9, steps: 4},\r\n  year: {common: true, size: 3.154e10}\r\n};\r\nconst UNITS = (Object.keys(INTERVALS));\r\nfunction sorter(a, b) {\r\n  return a - b;\r\n}\r\nfunction parse(scale, input) {\r\n  if (isNullOrUndef(input)) {\r\n    return null;\r\n  }\r\n  const adapter = scale._adapter;\r\n  const {parser, round, isoWeekday} = scale._parseOpts;\r\n  let value = input;\r\n  if (typeof parser === 'function') {\r\n    value = parser(value);\r\n  }\r\n  if (!isNumberFinite(value)) {\r\n    value = typeof parser === 'string'\r\n      ? adapter.parse(value, parser)\r\n      : adapter.parse(value);\r\n  }\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n  if (round) {\r\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\r\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\r\n      : adapter.startOf(value, round);\r\n  }\r\n  return +value;\r\n}\r\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n  const ilen = UNITS.length;\r\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\r\n    const interval = INTERVALS[UNITS[i]];\r\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n  return UNITS[ilen - 1];\r\n}\r\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\r\n    const unit = UNITS[i];\r\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n      return unit;\r\n    }\r\n  }\r\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n}\r\nfunction determineMajorUnit(unit) {\r\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\r\n    if (INTERVALS[UNITS[i]].common) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n}\r\nfunction addTick(ticks, time, timestamps) {\r\n  if (!timestamps) {\r\n    ticks[time] = true;\r\n  } else if (timestamps.length) {\r\n    const {lo, hi} = _lookup(timestamps, time);\r\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n    ticks[timestamp] = true;\r\n  }\r\n}\r\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\r\n  const adapter = scale._adapter;\r\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n  const last = ticks[ticks.length - 1].value;\r\n  let major, index;\r\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\r\n    index = map[major];\r\n    if (index >= 0) {\r\n      ticks[index].major = true;\r\n    }\r\n  }\r\n  return ticks;\r\n}\r\nfunction ticksFromTimestamps(scale, values, majorUnit) {\r\n  const ticks = [];\r\n  const map = {};\r\n  const ilen = values.length;\r\n  let i, value;\r\n  for (i = 0; i < ilen; ++i) {\r\n    value = values[i];\r\n    map[value] = i;\r\n    ticks.push({\r\n      value,\r\n      major: false\r\n    });\r\n  }\r\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n}\r\nclass TimeScale extends Scale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n    this._unit = 'day';\r\n    this._majorUnit = undefined;\r\n    this._offsets = {};\r\n    this._normalized = false;\r\n    this._parseOpts = undefined;\r\n  }\r\n  init(scaleOpts, opts) {\r\n    const time = scaleOpts.time || (scaleOpts.time = {});\r\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\r\n    adapter.init(opts);\r\n    mergeIf(time.displayFormats, adapter.formats());\r\n    this._parseOpts = {\r\n      parser: time.parser,\r\n      round: time.round,\r\n      isoWeekday: time.isoWeekday\r\n    };\r\n    super.init(scaleOpts);\r\n    this._normalized = opts.normalized;\r\n  }\r\n  parse(raw, index) {\r\n    if (raw === undefined) {\r\n      return null;\r\n    }\r\n    return parse(this, raw);\r\n  }\r\n  beforeLayout() {\r\n    super.beforeLayout();\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n  }\r\n  determineDataLimits() {\r\n    const options = this.options;\r\n    const adapter = this._adapter;\r\n    const unit = options.time.unit || 'day';\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    function _applyBounds(bounds) {\r\n      if (!minDefined && !isNaN(bounds.min)) {\r\n        min = Math.min(min, bounds.min);\r\n      }\r\n      if (!maxDefined && !isNaN(bounds.max)) {\r\n        max = Math.max(max, bounds.max);\r\n      }\r\n    }\r\n    if (!minDefined || !maxDefined) {\r\n      _applyBounds(this._getLabelBounds());\r\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n        _applyBounds(this.getMinMax(false));\r\n      }\r\n    }\r\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n    this.min = Math.min(min, max - 1);\r\n    this.max = Math.max(min + 1, max);\r\n  }\r\n  _getLabelBounds() {\r\n    const arr = this.getLabelTimestamps();\r\n    let min = Number.POSITIVE_INFINITY;\r\n    let max = Number.NEGATIVE_INFINITY;\r\n    if (arr.length) {\r\n      min = arr[0];\r\n      max = arr[arr.length - 1];\r\n    }\r\n    return {min, max};\r\n  }\r\n  buildTicks() {\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const tickOpts = options.ticks;\r\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\r\n    if (options.bounds === 'ticks' && timestamps.length) {\r\n      this.min = this._userMin || timestamps[0];\r\n      this.max = this._userMax || timestamps[timestamps.length - 1];\r\n    }\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const ticks = _filterBetween(timestamps, min, max);\r\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\r\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\r\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\r\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\r\n      : determineMajorUnit(this._unit);\r\n    this.initOffsets(timestamps);\r\n    if (options.reverse) {\r\n      ticks.reverse();\r\n    }\r\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\r\n  }\r\n  afterAutoSkip() {\r\n    if (this.options.offsetAfterAutoskip) {\r\n      this.initOffsets(this.ticks.map(tick => +tick.value));\r\n    }\r\n  }\r\n  initOffsets(timestamps) {\r\n    let start = 0;\r\n    let end = 0;\r\n    let first, last;\r\n    if (this.options.offset && timestamps.length) {\r\n      first = this.getDecimalForValue(timestamps[0]);\r\n      if (timestamps.length === 1) {\r\n        start = 1 - first;\r\n      } else {\r\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\r\n      }\r\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n      if (timestamps.length === 1) {\r\n        end = last;\r\n      } else {\r\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n      }\r\n    }\r\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n    start = _limitValue(start, 0, limit);\r\n    end = _limitValue(end, 0, limit);\r\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\r\n  }\r\n  _generate() {\r\n    const adapter = this._adapter;\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\r\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\r\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n    const hasWeekday = isNumber(weekday) || weekday === true;\r\n    const ticks = {};\r\n    let first = min;\r\n    let time, count;\r\n    if (hasWeekday) {\r\n      first = +adapter.startOf(first, 'isoWeek', weekday);\r\n    }\r\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n    }\r\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\r\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    if (time === max || options.bounds === 'ticks' || count === 1) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\r\n  }\r\n  getLabelForValue(value) {\r\n    const adapter = this._adapter;\r\n    const timeOpts = this.options.time;\r\n    if (timeOpts.tooltipFormat) {\r\n      return adapter.format(value, timeOpts.tooltipFormat);\r\n    }\r\n    return adapter.format(value, timeOpts.displayFormats.datetime);\r\n  }\r\n  _tickFormatFunction(time, index, ticks, format) {\r\n    const options = this.options;\r\n    const formats = options.time.displayFormats;\r\n    const unit = this._unit;\r\n    const majorUnit = this._majorUnit;\r\n    const minorFormat = unit && formats[unit];\r\n    const majorFormat = majorUnit && formats[majorUnit];\r\n    const tick = ticks[index];\r\n    const major = majorUnit && majorFormat && tick && tick.major;\r\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n    const formatter = options.ticks.callback;\r\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\r\n  }\r\n  generateTickLabels(ticks) {\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n    }\r\n  }\r\n  getDecimalForValue(value) {\r\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\r\n  }\r\n  getPixelForValue(value) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForValue(value);\r\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return this.min + pos * (this.max - this.min);\r\n  }\r\n  _getLabelSize(label) {\r\n    const ticksOpts = this.options.ticks;\r\n    const tickLabelWidth = this.ctx.measureText(label).width;\r\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n    const cosRotation = Math.cos(angle);\r\n    const sinRotation = Math.sin(angle);\r\n    const tickFontSize = this._resolveTickFontOptions(0).size;\r\n    return {\r\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\r\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\r\n    };\r\n  }\r\n  _getLabelCapacity(exampleTime) {\r\n    const timeOpts = this.options.time;\r\n    const displayFormats = timeOpts.displayFormats;\r\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\r\n    const size = this._getLabelSize(exampleLabel);\r\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\r\n    return capacity > 0 ? capacity : 1;\r\n  }\r\n  getDataTimestamps() {\r\n    let timestamps = this._cache.data || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    if (this._normalized && metas.length) {\r\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\r\n    }\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\r\n    }\r\n    return (this._cache.data = this.normalize(timestamps));\r\n  }\r\n  getLabelTimestamps() {\r\n    const timestamps = this._cache.labels || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const labels = this.getLabels();\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      timestamps.push(parse(this, labels[i]));\r\n    }\r\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\r\n  }\r\n  normalize(values) {\r\n    return _arrayUnique(values.sort(sorter));\r\n  }\r\n}\r\nTimeScale.id = 'time';\r\nTimeScale.defaults = {\r\n  bounds: 'data',\r\n  adapters: {},\r\n  time: {\r\n    parser: false,\r\n    unit: false,\r\n    round: false,\r\n    isoWeekday: false,\r\n    minUnit: 'millisecond',\r\n    displayFormats: {}\r\n  },\r\n  ticks: {\r\n    source: 'auto',\r\n    major: {\r\n      enabled: false\r\n    }\r\n  }\r\n};\r\n\r\nfunction interpolate(table, val, reverse) {\r\n  let lo = 0;\r\n  let hi = table.length - 1;\r\n  let prevSource, nextSource, prevTarget, nextTarget;\r\n  if (reverse) {\r\n    if (val >= table[lo].pos && val <= table[hi].pos) {\r\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\r\n    }\r\n    ({pos: prevSource, time: prevTarget} = table[lo]);\r\n    ({pos: nextSource, time: nextTarget} = table[hi]);\r\n  } else {\r\n    if (val >= table[lo].time && val <= table[hi].time) {\r\n      ({lo, hi} = _lookupByKey(table, 'time', val));\r\n    }\r\n    ({time: prevSource, pos: prevTarget} = table[lo]);\r\n    ({time: nextSource, pos: nextTarget} = table[hi]);\r\n  }\r\n  const span = nextSource - prevSource;\r\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n}\r\nclass TimeSeriesScale extends TimeScale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._table = [];\r\n    this._minPos = undefined;\r\n    this._tableRange = undefined;\r\n  }\r\n  initOffsets() {\r\n    const timestamps = this._getTimestampsForTable();\r\n    const table = this._table = this.buildLookupTable(timestamps);\r\n    this._minPos = interpolate(table, this.min);\r\n    this._tableRange = interpolate(table, this.max) - this._minPos;\r\n    super.initOffsets(timestamps);\r\n  }\r\n  buildLookupTable(timestamps) {\r\n    const {min, max} = this;\r\n    const items = [];\r\n    const table = [];\r\n    let i, ilen, prev, curr, next;\r\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\r\n      curr = timestamps[i];\r\n      if (curr >= min && curr <= max) {\r\n        items.push(curr);\r\n      }\r\n    }\r\n    if (items.length < 2) {\r\n      return [\r\n        {time: min, pos: 0},\r\n        {time: max, pos: 1}\r\n      ];\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      next = items[i + 1];\r\n      prev = items[i - 1];\r\n      curr = items[i];\r\n      if (Math.round((next + prev) / 2) !== curr) {\r\n        table.push({time: curr, pos: i / (ilen - 1)});\r\n      }\r\n    }\r\n    return table;\r\n  }\r\n  _getTimestampsForTable() {\r\n    let timestamps = this._cache.all || [];\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const data = this.getDataTimestamps();\r\n    const label = this.getLabelTimestamps();\r\n    if (data.length && label.length) {\r\n      timestamps = this.normalize(data.concat(label));\r\n    } else {\r\n      timestamps = data.length ? data : label;\r\n    }\r\n    timestamps = this._cache.all = timestamps;\r\n    return timestamps;\r\n  }\r\n  getDecimalForValue(value) {\r\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\r\n  }\r\n}\r\nTimeSeriesScale.id = 'timeseries';\r\nTimeSeriesScale.defaults = TimeScale.defaults;\r\n\r\nvar scales = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nCategoryScale: CategoryScale,\r\nLinearScale: LinearScale,\r\nLogarithmicScale: LogarithmicScale,\r\nRadialLinearScale: RadialLinearScale,\r\nTimeScale: TimeScale,\r\nTimeSeriesScale: TimeSeriesScale\r\n});\r\n\r\nconst registerables = [\r\n  controllers,\r\n  elements,\r\n  plugins,\r\n  scales,\r\n];\r\n\r\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}