{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import'./MFI.css';import{LoginCredentialsAndQueries}from\"../../../Services/loginCredentialsAndQueries\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function MFI(prop){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),accessToken=_useState2[0],setAccessToken=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),dataDisplay=_useState4[0],setDataDisplay=_useState4[1];var currentPlant=prop.currentPlant;console.log(\"MFI1\",currentPlant[0].plantid,accessToken);useEffect(function(){var fetchDataz=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return LoginCredentialsAndQueries();case 3:response=_context.sent;if(response.length>0){console.log(\"responseMFI\",response);setAccessToken(response);}_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 10:case\"end\":return _context.stop();}},_callee,null,[[0,7]]);}));return function fetchDataz(){return _ref.apply(this,arguments);};}();fetchDataz();},[]);var plantid=currentPlant[0].plantid;useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response,data,key;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"https://api-idap.infinite-uptime.com/api/3.0/idap-api/service-requests?plantIds=\"+plantid,{method:\"GET\",headers:{accept:\"application/json\",Authorization:\"Bearer \"+accessToken}});case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:data=_context2.sent;key=Object.keys(data.data);setDataDisplay(data.data[key]);_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);case 14:case\"end\":return _context2.stop();}},_callee2,null,[[0,11]]);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();var interval=setInterval(fetchData,30000);// Fetch data every 30 seconds\nreturn function(){clearInterval(interval);// Clean up the interval on component unmount\n};},[currentPlant,accessToken]);var i=1;//const check=(new Date().getTime()-new Date(ele.serviceReqMachineDetails[0].createdDate).getTime()/3600000)<=48;\n// if(ele.status==\"NEW\")i++;\n// \nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"content-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"head\",children:\"Machine with Faults\"}),/*#__PURE__*/_jsx(\"div\",{className:\"content-container\",children:dataDisplay?dataDisplay.map(function(ele){{if(ele.status==\"NEW\")return ele.serviceReqMachineDetails.map(function(srmd){return/*#__PURE__*/_jsxs(\"div\",{className:\"machine-name\",children:[srmd.machineName?i++ +\".\"+\" \"+srmd.machineName+\" \"+srmd.createdDate:'',srmd.machineServiceDetails.map(function(msd,index){return/*#__PURE__*/_jsx(\"ol\",{className:\"monitor-name\",children:String.fromCharCode(97+index)+\". \"+msd.serviceName});})]});});}}):/*#__PURE__*/_jsx(_Fragment,{children:\"No Faults observed in machines \"})})]});}export default MFI;","map":{"version":3,"names":["React","useState","useEffect","LoginCredentialsAndQueries","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MFI","prop","_useState","_useState2","_slicedToArray","accessToken","setAccessToken","_useState3","_useState4","dataDisplay","setDataDisplay","currentPlant","console","log","plantid","fetchDataz","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","sent","length","t0","error","stop","apply","arguments","fetchData","_ref2","_callee2","data","key","_callee2$","_context2","fetch","method","headers","accept","Authorization","json","Object","keys","interval","setInterval","clearInterval","i","className","children","map","ele","status","serviceReqMachineDetails","srmd","machineName","createdDate","machineServiceDetails","msd","index","String","fromCharCode","serviceName"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Components/Containers/MFI/MFI.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './MFI.css';\r\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\r\n\r\nfunction MFI(prop) {\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [dataDisplay, setDataDisplay] = useState();\r\n\r\n  const currentPlant = prop.currentPlant;\r\n  console.log(\"MFI1\", currentPlant[0].plantid, accessToken);\r\n\r\n  useEffect(() => {\r\n    const fetchDataz = async () => {\r\n      try {\r\n        const response = await LoginCredentialsAndQueries();\r\n        if (response.length > 0) {\r\n          console.log(\"responseMFI\", response);\r\n          setAccessToken(response);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchDataz();\r\n  }, []);\r\n\r\n  let plantid = currentPlant[0].plantid;\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api-idap.infinite-uptime.com/api/3.0/idap-api/service-requests?plantIds=\" + plantid,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              accept: \"application/json\",\r\n              Authorization: \"Bearer \" + accessToken,\r\n            },\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n\r\n        let key = Object.keys(data.data);\r\n        setDataDisplay(data.data[key]);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    const interval = setInterval(fetchData, 30000); // Fetch data every 30 seconds\r\n\r\n    return () => {\r\n      clearInterval(interval); // Clean up the interval on component unmount\r\n    };\r\n  }, [currentPlant, accessToken]);\r\n  let i = 1;\r\n  //const check=(new Date().getTime()-new Date(ele.serviceReqMachineDetails[0].createdDate).getTime()/3600000)<=48;\r\n  // if(ele.status==\"NEW\")i++;\r\n  // \r\n  return (\r\n    <div className=\"content-box\">\r\n      <div className=\"head\">Machine with Faults</div>\r\n      <div className=\"content-container\">\r\n        {dataDisplay ? (\r\n          dataDisplay.map((ele) => {\r\n            {if(ele.status==\"NEW\")\r\n            return(\r\n            ele.serviceReqMachineDetails.map((srmd) => {\r\n              \r\n              return(\r\n              <div className=\"machine-name\">\r\n                \r\n                {srmd.machineName ?i+++\".\"+\" \"+ srmd.machineName + \" \" + srmd.createdDate : ''}\r\n                {srmd.machineServiceDetails.map((msd,index) => {\r\n                  return (\r\n                    <ol className=\"monitor-name\">\r\n                      {String.fromCharCode(97+index)+\". \"+msd.serviceName}\r\n                    </ol>\r\n                  );\r\n\r\n                })}\r\n              </div>\r\n              \r\n              )\r\n            })\r\n          )\r\n            }\r\n\r\n          })\r\n        ) : (\r\n          <>No Faults observed in machines </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MFI;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}