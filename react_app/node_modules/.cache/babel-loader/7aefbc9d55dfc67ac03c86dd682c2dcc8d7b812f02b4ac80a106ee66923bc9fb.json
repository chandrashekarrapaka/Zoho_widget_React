{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\zoho-creator-widget-starter-template-reactJS\\\\react_app\\\\src\\\\Components\\\\Containers\\\\AA\\\\AA.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './AA.css';\n// import { LoginCredentialsAndQueries } from \"../../../Services/LoginCredentialsAndQueries\";\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AA(prop) {\n  _s();\n  const [accessToken, setAccessToken] = useState(\"\");\n  let params = \"\";\n  const currentPlant = prop.currentPlant;\n  useEffect(() => {\n    const fetchDataz = async () => {\n      try {\n        const response = await LoginCredentialsAndQueries();\n        if (response.length > 0) {\n          console.log(\"responseAA\" + response);\n          setAccessToken(response);\n          //  params=response.queryParams\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchDataz();\n  }, []);\n  console.log(\"AA1\" + currentPlant[0].plantid, accessToken);\n  let plantid = currentPlant[0].plantid;\n  useEffect(() => {\n    const fetchData = async () => {\n      let now = new Date();\n      let dtTo = now.toISOString().replace(\"T\", \" \").replace(\"Z\", \"\");\n      let dtFrom = now.getHours() - 48;\n      now.setHours(dtFrom);\n      dtFrom = now.toISOString().replace(\"T\", \" \").replace(\"Z\", \"\");\n      try {\n        const response = await fetch(\"https://api-idap.infinite-uptime.com/api/3.0/idap-api/anomaly-alerts?plantIds=\" + plantid + \"&from=\" + dtFrom + \"&to=\" + dtTo, {\n          method: \"GET\",\n          headers: {\n            accept: \"application/json\",\n            Authorization: \"Bearer \" + accessToken\n          }\n        });\n        const data = await response.json();\n        console.log(\"alerts\" + data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head\",\n      children: \"Anomaly Alert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: \"list elements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(AA, \"TIDTbhIDpVwLgN3f3nmoQsYMfSQ=\");\n_c = AA;\nexport default AA;\nvar _c;\n$RefreshReg$(_c, \"AA\");","map":{"version":3,"names":["React","useState","useEffect","LoginCredentialsAndQueries","jsxDEV","_jsxDEV","AA","prop","_s","accessToken","setAccessToken","params","currentPlant","fetchDataz","response","length","console","log","error","plantid","fetchData","now","Date","dtTo","toISOString","replace","dtFrom","getHours","setHours","fetch","method","headers","accept","Authorization","data","json","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Components/Containers/AA/AA.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './AA.css';\r\n// import { LoginCredentialsAndQueries } from \"../../../Services/LoginCredentialsAndQueries\";\r\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\r\n\r\nfunction AA(prop) {\r\n    const [accessToken, setAccessToken] = useState(\"\");\r\n    let params = \"\";\r\n    const currentPlant = prop.currentPlant;\r\n    useEffect(() => {\r\n        const fetchDataz = async () => {\r\n            try {\r\n                const response = await LoginCredentialsAndQueries();\r\n                if (response.length > 0) {\r\n                    console.log(\"responseAA\" + response);\r\n                    setAccessToken(response);\r\n                    //  params=response.queryParams\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchDataz();\r\n    }, []);\r\n\r\n    console.log(\"AA1\" + currentPlant[0].plantid, accessToken);\r\n    let plantid = currentPlant[0].plantid;\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let now = new Date();\r\n            let dtTo = now.toISOString().replace(\"T\", \" \").replace(\"Z\", \"\");\r\n            let dtFrom = now.getHours() - 48;\r\n            now.setHours(dtFrom);\r\n            dtFrom = now.toISOString().replace(\"T\", \" \").replace(\"Z\", \"\");\r\n            \r\n            try {\r\n              const response = await fetch(\r\n                \"https://api-idap.infinite-uptime.com/api/3.0/idap-api/anomaly-alerts?plantIds=\" + plantid + \"&from=\" + dtFrom +\"&to=\" + dtTo,\r\n                {\r\n                  method: \"GET\",\r\n                  headers: {\r\n                    accept: \"application/json\",\r\n                    Authorization: \"Bearer \" + accessToken,\r\n                  },\r\n                }\r\n              );\r\n            \r\n              const data = await response.json();\r\n              console.log(\"alerts\"+data);\r\n            } catch (error) {\r\n              console.error(error);\r\n            }\r\n            \r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <div className=\"head\">\r\n                Anomaly Alert\r\n            </div>\r\n            <div className=\"content\">\r\n                list elements\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AA;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}