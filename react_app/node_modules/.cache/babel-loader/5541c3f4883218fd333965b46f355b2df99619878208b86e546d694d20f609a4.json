{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\zoho-creator-widget-starter-template-reactJS\\\\react_app\\\\src\\\\Components\\\\Containers\\\\MFI\\\\MFI.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './MFI.css';\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MFI(prop) {\n  _s();\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [dataDisplay, setDataDisplay] = useState();\n  const currentPlant = prop.currentPlant;\n  console.log(\"AA1\" + currentPlant[0].plantid, accessToken);\n  useEffect(() => {\n    const fetchDataz = async () => {\n      try {\n        const response = await LoginCredentialsAndQueries();\n        if (response.length > 0) {\n          console.log(\"responseAA\", response);\n          setAccessToken(response);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchDataz();\n  }, []);\n  let plantid = currentPlant[0].plantid;\n  useEffect(() => {\n    const fetchData = async () => {\n      let now = new Date();\n      let dtTo = now.toISOString().replace(/\\.\\d+Z$/, \"Z\").replace(/:/g, \"%3A\");\n      let dtFrom = new Date(now.getTime() - 48 * 60 * 60 * 1000).toISOString().replace(/\\.\\d+Z$/, \"Z\").replace(/:/g, \"%3A\");\n      try {\n        const response = await fetch(\"https://api-idap.infinite-uptime.com/api/3.0/idap-api/anomaly-alerts?plantIds=\" + plantid + \"&from=\" + dtFrom + \"&to=\" + dtTo, {\n          method: \"GET\",\n          headers: {\n            accept: \"application/json\",\n            Authorization: \"Bearer \" + accessToken\n          }\n        });\n        const data = await response.json();\n        setDataDisplay(data);\n        console.log(\"alerts\" + JSON.stringify(data));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, [prop.currentPlant]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head\",\n      children: \"Machine with Faults\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: \"list elements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(MFI, \"B93Hc3g8AdsbkHs38nKMGA1OHdM=\");\n_c = MFI;\nexport default MFI;\nvar _c;\n$RefreshReg$(_c, \"MFI\");","map":{"version":3,"names":["React","LoginCredentialsAndQueries","jsxDEV","_jsxDEV","MFI","prop","_s","accessToken","setAccessToken","useState","dataDisplay","setDataDisplay","currentPlant","console","log","plantid","useEffect","fetchDataz","response","length","error","fetchData","now","Date","dtTo","toISOString","replace","dtFrom","getTime","fetch","method","headers","accept","Authorization","data","json","JSON","stringify","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Components/Containers/MFI/MFI.js"],"sourcesContent":["import React from \"react\";\r\nimport './MFI.css';\r\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\r\n\r\n\r\nfunction MFI(prop){\r\n    const [accessToken, setAccessToken] = useState(\"\");\r\n    const [dataDisplay,setDataDisplay]=useState();\r\n    \r\n    const currentPlant = prop.currentPlant;\r\n    console.log(\"AA1\" + currentPlant[0].plantid, accessToken);\r\n    useEffect(() => {\r\n        const fetchDataz = async () => {\r\n          try {\r\n            const response = await LoginCredentialsAndQueries();\r\n            if (response.length > 0) {\r\n              console.log(\"responseAA\", response);\r\n              setAccessToken(response);\r\n            }\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        };\r\n      \r\n        fetchDataz();\r\n      }, []);\r\n      let plantid = currentPlant[0].plantid;\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let now = new Date();\r\nlet dtTo = now.toISOString().replace(/\\.\\d+Z$/, \"Z\").replace(/:/g, \"%3A\");\r\nlet dtFrom = new Date(now.getTime() - 48 * 60 * 60 * 1000)\r\n  .toISOString()\r\n  .replace(/\\.\\d+Z$/, \"Z\")\r\n  .replace(/:/g, \"%3A\");\r\n            \r\n            try {\r\n              const response = await fetch(\r\n                \"https://api-idap.infinite-uptime.com/api/3.0/idap-api/anomaly-alerts?plantIds=\" + plantid + \"&from=\" + dtFrom +\"&to=\" + dtTo,\r\n                {\r\n                  method: \"GET\",\r\n                  headers: {\r\n                    accept: \"application/json\",\r\n                    Authorization: \"Bearer \" + accessToken,\r\n                  },\r\n                }\r\n              );\r\n            \r\n              const data = await response.json();\r\n              setDataDisplay(data);\r\n              console.log(\"alerts\"+JSON.stringify(data));\r\n            } catch (error) {\r\n              console.error(error);\r\n            }\r\n            \r\n        };\r\n\r\n        fetchData();\r\n    }, [prop.currentPlant]);\r\n    \r\n    return(\r\n        <div>\r\n        <div className=\"head\">\r\n        Machine with Faults\r\n        </div>\r\n        <div className=\"content\">\r\n        list elements\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MFI;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAASC,0BAA0B,QAAQ,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1F,SAASC,GAAGA,CAACC,IAAI,EAAC;EAAAC,EAAA;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAACF,QAAQ,CAAC,CAAC;EAE7C,MAAMG,YAAY,GAAGP,IAAI,CAACO,YAAY;EACtCC,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGF,YAAY,CAAC,CAAC,CAAC,CAACG,OAAO,EAAER,WAAW,CAAC;EACzDS,SAAS,CAAC,MAAM;IACZ,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,0BAA0B,CAAC,CAAC;QACnD,IAAIiB,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;UACvBN,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEI,QAAQ,CAAC;UACnCV,cAAc,CAACU,QAAQ,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDH,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EACN,IAAIF,OAAO,GAAGH,YAAY,CAAC,CAAC,CAAC,CAACG,OAAO;EACvCC,SAAS,CAAC,MAAM;IACZ,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAIC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MAChC,IAAIC,IAAI,GAAGF,GAAG,CAACG,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;MACzE,IAAIC,MAAM,GAAG,IAAIJ,IAAI,CAACD,GAAG,CAACM,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CACvDH,WAAW,CAAC,CAAC,CACbC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CACvBA,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;MAEX,IAAI;QACF,MAAMR,QAAQ,GAAG,MAAMW,KAAK,CAC1B,gFAAgF,GAAGd,OAAO,GAAG,QAAQ,GAAGY,MAAM,GAAE,MAAM,GAAGH,IAAI,EAC7H;UACEM,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,MAAM,EAAE,kBAAkB;YAC1BC,aAAa,EAAE,SAAS,GAAG1B;UAC7B;QACF,CACF,CAAC;QAED,MAAM2B,IAAI,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;QAClCxB,cAAc,CAACuB,IAAI,CAAC;QACpBrB,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACsB,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;MAC5C,CAAC,CAAC,OAAOd,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;MACtB;IAEJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAAChB,IAAI,CAACO,YAAY,CAAC,CAAC;EAEvB,oBACIT,OAAA;IAAAmC,QAAA,gBACAnC,OAAA;MAAKoC,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAC;IAEtB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNxC,OAAA;MAAKoC,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAC;IAEzB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACrC,EAAA,CAjEQF,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAkEZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}