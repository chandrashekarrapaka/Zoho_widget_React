{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\zoho-creator-widget-starter-template-reactJS\\\\react_app\\\\src\\\\Components\\\\Header\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Header.css\";\nimport KPI from \"./KPI\";\nimport { Image } from \"../../Services/image\";\nimport { LoginCredentialsAndQueries } from \"../../Services/loginCredentialsAndQueries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header(prop) {\n  _s();\n  const [imageUrl, setImageUrl] = useState(\"\");\n  // Initialize with the initial kipobj value\n  //console.log(\"kpimachines\"+prop.kpimachines)\n  const initialKipobj = {\n    kpi1: {\n      title: prop.kpimonitors ? prop.kpimonitors : \"1\",\n      value: \"Total Devices Installed\"\n    },\n    kpi2: {\n      title: prop.kpimachines ? JSON.stringify(prop.kpimachines) : \"2\",\n      value: \"Total Machines Digitized\"\n    },\n    kpi3: {\n      title: \"3\",\n      value: \"Total Faults Identified\"\n    },\n    kpi4: {\n      title: \"4\",\n      value: \"Reports Closed\"\n    },\n    kpi5: {\n      title: \"5\",\n      value: \"Downtime Saved (Hrs)\"\n    }\n  };\n  console.log(\"kpimonitors\" + prop.kpimonitors, initialKipobj.kpi1.title);\n  const [kipobj, setKipobj] = useState(initialKipobj);\n  useEffect(() => {\n    const fetchDataz = async () => {\n      try {\n        const response = await Image();\n        if (response.length > 0) {\n          console.log(\"imageurl\", response);\n          setImageUrl(response);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchDataz();\n  }, []);\n  useEffect(() => {\n    const fetchPlantDetails = async () => {\n      try {\n        let plantid = prop.currentPlant[0].plantid;\n        let token = await LoginCredentialsAndQueries();\n        const kpidatafinal = await fetch('https://api-idap.infinite-uptime.com/api/3.0/idap-api/service-requests/analytics?plantIds=' + plantid, {\n          method: 'GET',\n          headers: {\n            'Authorization': 'Bearer ' + token,\n            'accept': 'application/json'\n          }\n        });\n\n        // const data = await window.ZOHO.CREATOR.init();\n        // const plantid = prop.currentPlant[0].plantid;\n        // const config = {\n        //   appName: \"infinite-control-room\",\n        //   reportName: \"All_Plants\",\n        //   criteria: `plantId == \"${plantid}\"`,\n        //   page: \"1\",\n        //   pageSize: \"100\",\n        // };\n\n        // const response = await window.ZOHO.CREATOR.API.getAllRecords(config);\n        // const plantdetails = response.data[0];\n        // const plantidCre = plantdetails.ID;\n        // console.log(\n        //   \"plantidCre\" +\n        //     plantidCre +\n        //     \" \" +\n        //     plantdetails.Close_Reports +\n        //     \" \" +\n        //     plantdetails.Down_Time +\n        //     \" \" +\n        //     (Number(plantdetails.Close_Reports) +\n        //       Number(plantdetails.Number_of_Fault_Identifier))\n        // );\n        // const configz = {\n        //     appName: \"infinite-control-room\",\n        //     reportName: \"All_Machines\",\n        //      criteria: `Plants.contains(\"${plantidCre}\")`,\n        //      //criteria: `Machine_ID == \"${4260}\"`,\n        //     page: \"1\",\n        //     pageSize: \"100\",\n        //   };\n\n        //   const machine = await window.ZOHO.CREATOR.API.getAllRecords(configz);\n        //   const machinedetails = machine.data.length;\n        //   console.log(\"kpimachine\"+machinedetails)\n        // //   const plantidCre = plantdetails.ID;//Total_Device_Installed\n        // const configd = {\n        //     appName: \"infinite-control-room\",\n        //     reportName: \"Total_Device_Installed_Report\",\n        //      criteria: `Name_of_Plant.contains(\"${plantidCre}\")`,\n        //      //criteria: `Machine_ID == \"${4260}\"`,\n        //     page: \"1\",\n        //     pageSize: \"200\",\n        //   };\n\n        //   const totaldevices = await window.ZOHO.CREATOR.API.getAllRecords(configd);\n        //   let totaldevicesinstalled = totaldevices.data.length;\n        //   console.log(\"totaldevicesinstalled\"+totaldevicesinstalled)\n        //   if(totaldevicesinstalled==200){\n        //     const configd = {\n        //         appName: \"infinite-control-room\",\n        //         reportName: \"Total_Device_Installed_Report\",\n        //          criteria: `Name_of_Plant.contains(\"${plantidCre}\")`,\n        //          //criteria: `Machine_ID == \"${4260}\"`,\n        //         page: \"2\",\n        //         pageSize: \"200\",\n        //       };\n\n        //       const totaldevices = await window.ZOHO.CREATOR.API.getAllRecords(configd);\n        //        totaldevicesinstalled = 200+totaldevices.data.length;\n\n        //   }\n\n        const updatedKipobj = {\n          // ...kipobj,\n          // kpi4: {\n          //   ...kipobj.kpi4,\n          //   title: plantdetails.Close_Reports,\n          // },\n          // kpi5: {\n          //   ...kipobj.kpi5,\n          //   title: plantdetails.Down_Time,\n          // },\n          kpi2: {\n            ...kipobj.kpi2,\n            title: prop.kpimachines\n          },\n          //   kpi3: {\n          //     ...kipobj.kpi3,\n          //     title:\n          //       Number(plantdetails.Close_Reports) +\n          //       Number(plantdetails.Number_of_Fault_Identifier),\n          //   },\n          //  //totaldevicesinstalled\n          kpi1: {\n            ...kipobj.kpi1,\n            title: prop.kpimonitors\n          }\n        };\n        setKipobj(updatedKipobj);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchPlantDetails();\n  }, [prop.currentPlant]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kpis\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Plant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), Object.keys(kipobj).map(function (ele) {\n      return /*#__PURE__*/_jsxDEV(KPI, {\n        data: kipobj[ele]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"1ut2NzDXeYg+DE9WbwE0jTxSrlA=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","KPI","Image","LoginCredentialsAndQueries","jsxDEV","_jsxDEV","Header","prop","_s","imageUrl","setImageUrl","initialKipobj","kpi1","title","kpimonitors","value","kpi2","kpimachines","JSON","stringify","kpi3","kpi4","kpi5","console","log","kipobj","setKipobj","fetchDataz","response","length","error","fetchPlantDetails","plantid","currentPlant","token","kpidatafinal","fetch","method","headers","updatedKipobj","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","ele","data","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Components/Header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Header.css\";\r\nimport KPI from \"./KPI\";\r\nimport { Image } from \"../../Services/image\";\r\nimport { LoginCredentialsAndQueries } from \"../../Services/loginCredentialsAndQueries\";\r\n\r\n\r\n  \r\nfunction Header(prop) {\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n   // Initialize with the initial kipobj value\r\n  //console.log(\"kpimachines\"+prop.kpimachines)\r\n  const initialKipobj = {\r\n    kpi1: {\r\n      title: prop.kpimonitors?prop.kpimonitors:\"1\",\r\n      value: \"Total Devices Installed\",\r\n    },\r\n    kpi2: { title: prop.kpimachines?JSON.stringify(prop.kpimachines):\"2\", value: \"Total Machines Digitized\" },\r\n    kpi3: { title: \"3\", value: \"Total Faults Identified\" },\r\n    kpi4: { title: \"4\", value: \"Reports Closed\" },\r\n    kpi5: { title: \"5\", value: \"Downtime Saved (Hrs)\" },\r\n  };\r\n  console.log(\"kpimonitors\"+prop.kpimonitors,initialKipobj.kpi1.title)\r\n  const [kipobj, setKipobj] = useState(initialKipobj);\r\n  useEffect(() => {\r\n    const fetchDataz = async () => {\r\n      try {\r\n        const response = await Image();\r\n        if (response.length > 0) {\r\n          console.log(\"imageurl\", response);\r\n          setImageUrl(response);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchDataz();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchPlantDetails = async () => {\r\n      try {\r\n        let plantid = prop.currentPlant[0].plantid;\r\n        let token=await LoginCredentialsAndQueries();\r\n        \r\n         const kpidatafinal= await fetch('https://api-idap.infinite-uptime.com/api/3.0/idap-api/service-requests/analytics?plantIds='+plantid,{\r\n            method: 'GET',\r\n            headers:{\r\n              'Authorization':'Bearer '+ token,\r\n              'accept': 'application/json',\r\n            },\r\n\r\n          });\r\n        \r\n        // const data = await window.ZOHO.CREATOR.init();\r\n        // const plantid = prop.currentPlant[0].plantid;\r\n        // const config = {\r\n        //   appName: \"infinite-control-room\",\r\n        //   reportName: \"All_Plants\",\r\n        //   criteria: `plantId == \"${plantid}\"`,\r\n        //   page: \"1\",\r\n        //   pageSize: \"100\",\r\n        // };\r\n\r\n        // const response = await window.ZOHO.CREATOR.API.getAllRecords(config);\r\n        // const plantdetails = response.data[0];\r\n        // const plantidCre = plantdetails.ID;\r\n        // console.log(\r\n        //   \"plantidCre\" +\r\n        //     plantidCre +\r\n        //     \" \" +\r\n        //     plantdetails.Close_Reports +\r\n        //     \" \" +\r\n        //     plantdetails.Down_Time +\r\n        //     \" \" +\r\n        //     (Number(plantdetails.Close_Reports) +\r\n        //       Number(plantdetails.Number_of_Fault_Identifier))\r\n        // );\r\n        // const configz = {\r\n        //     appName: \"infinite-control-room\",\r\n        //     reportName: \"All_Machines\",\r\n        //      criteria: `Plants.contains(\"${plantidCre}\")`,\r\n        //      //criteria: `Machine_ID == \"${4260}\"`,\r\n        //     page: \"1\",\r\n        //     pageSize: \"100\",\r\n        //   };\r\n  \r\n        //   const machine = await window.ZOHO.CREATOR.API.getAllRecords(configz);\r\n        //   const machinedetails = machine.data.length;\r\n        //   console.log(\"kpimachine\"+machinedetails)\r\n        // //   const plantidCre = plantdetails.ID;//Total_Device_Installed\r\n        // const configd = {\r\n        //     appName: \"infinite-control-room\",\r\n        //     reportName: \"Total_Device_Installed_Report\",\r\n        //      criteria: `Name_of_Plant.contains(\"${plantidCre}\")`,\r\n        //      //criteria: `Machine_ID == \"${4260}\"`,\r\n        //     page: \"1\",\r\n        //     pageSize: \"200\",\r\n        //   };\r\n  \r\n        //   const totaldevices = await window.ZOHO.CREATOR.API.getAllRecords(configd);\r\n        //   let totaldevicesinstalled = totaldevices.data.length;\r\n        //   console.log(\"totaldevicesinstalled\"+totaldevicesinstalled)\r\n        //   if(totaldevicesinstalled==200){\r\n        //     const configd = {\r\n        //         appName: \"infinite-control-room\",\r\n        //         reportName: \"Total_Device_Installed_Report\",\r\n        //          criteria: `Name_of_Plant.contains(\"${plantidCre}\")`,\r\n        //          //criteria: `Machine_ID == \"${4260}\"`,\r\n        //         page: \"2\",\r\n        //         pageSize: \"200\",\r\n        //       };\r\n      \r\n        //       const totaldevices = await window.ZOHO.CREATOR.API.getAllRecords(configd);\r\n        //        totaldevicesinstalled = 200+totaldevices.data.length;\r\n      \r\n        //   }\r\n\r\n        const updatedKipobj = {\r\n          // ...kipobj,\r\n          // kpi4: {\r\n          //   ...kipobj.kpi4,\r\n          //   title: plantdetails.Close_Reports,\r\n          // },\r\n          // kpi5: {\r\n          //   ...kipobj.kpi5,\r\n          //   title: plantdetails.Down_Time,\r\n          // },\r\n          kpi2:{\r\n            ...kipobj.kpi2,\r\n            title:prop.kpimachines\r\n          },\r\n        //   kpi3: {\r\n        //     ...kipobj.kpi3,\r\n        //     title:\r\n        //       Number(plantdetails.Close_Reports) +\r\n        //       Number(plantdetails.Number_of_Fault_Identifier),\r\n        //   },\r\n        //  //totaldevicesinstalled\r\n          kpi1: {\r\n            ...kipobj.kpi1,\r\n            title:\r\n            prop.kpimonitors\r\n          }\r\n        };\r\n\r\n        setKipobj(updatedKipobj);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchPlantDetails();\r\n  }, [prop.currentPlant]);\r\n\r\n  return (\r\n    <div className=\"kpis\">\r\n      <img src={imageUrl} alt=\"Plant\" />\r\n      {/* <div className=\"PlantName\"></div> */}\r\n      {/* 5kpi boxes with plant data */}\r\n      {Object.keys(kipobj).map(function (ele) {\r\n        return <KPI data={kipobj[ele]} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}