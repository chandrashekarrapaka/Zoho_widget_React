{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatternStorage = props => {\n  _s();\n  const [pattern, setPattern] = useState([]);\n  const curPlId = props.cp[0].plantid;\n  //console.log(props.cp[0].plantid,props.cp[0].plantName);\n\n  useEffect(() => {\n    // console.log(\"PatternStorage Working\");\n    const newPattern = [];\n    props.plantsData.forEach(item => {\n      if (item !== undefined) {\n        const newItems = item[0].plantid;\n        newPattern.push(newItems);\n      }\n    });\n\n    // Reorder the pattern if cp changes\n    const currentIndex = newPattern.indexOf(props.cp[0].plantid);\n    if (currentIndex !== -1) {\n      newPattern.splice(currentIndex, 1);\n      newPattern.unshift(props.cp[0].plantid);\n    }\n    setPattern(newPattern);\n    // Store the pattern in sessionStorage\n    // sessionStorage.setItem('plantPattern', JSON.stringify(newPattern));\n    const loginResponse = window.ZOHO.CREATOR.init().then(function (data) {\n      let accessTokenz = \"\";\n      let userid = window.ZOHO.CREATOR.UTIL.getQueryParams().user;\n      var config = {\n        appName: \"infinite-control-room\",\n        reportName: \"My_Profile_Data\",\n        criteria: \"Username == \\\"\" + userid + \"\\\"\",\n        page: \"1\",\n        pageSize: \"100\"\n      };\n      const access = window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\n        const idx = response.data[0].ID;\n        console.log(idx);\n        const formData = {\n          \"data\": {\n            \"PlantPattern\": JSON.stringify(newPattern)\n          }\n        };\n        const config = {\n          appName: \"infinite-control-room\",\n          reportName: \"My_Profile_Data\",\n          id: idx,\n          data: formData\n        };\n        const acce = window.ZOHO.CREATOR.API.updateRecord(config).then(function (response) {\n          console.log(response);\n          if (response.code == 3000 && response.message == \"Data Updated Successfully\") {\n            console.log(\"working\");\n          }\n        });\n      });\n    });\n    //console.log(access);\n  }, [props.plantsData, curPlId]);\n\n  // console.log(sessionStorage.getItem('plantPattern'));\n  //sessionStorage.clear();\n  // Render your component\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(PatternStorage, \"kWllvVyyKRwWyKPAKV1sg+Wqw2A=\");\n_c = PatternStorage;\nexport default PatternStorage;\nvar _c;\n$RefreshReg$(_c, \"PatternStorage\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","PatternStorage","props","_s","pattern","setPattern","curPlId","cp","plantid","newPattern","plantsData","forEach","item","undefined","newItems","push","currentIndex","indexOf","splice","unshift","loginResponse","window","ZOHO","CREATOR","init","then","data","accessTokenz","userid","UTIL","getQueryParams","user","config","appName","reportName","criteria","page","pageSize","access","API","getAllRecords","response","idx","ID","console","log","formData","JSON","stringify","id","acce","updateRecord","code","message","_c","$RefreshReg$"],"sources":["C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/src/Components/Containers/PatternStorage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst PatternStorage = (props) => {\r\n    const [pattern, setPattern] = useState([]);\r\n    const curPlId=props.cp[0].plantid;\r\n    //console.log(props.cp[0].plantid,props.cp[0].plantName);\r\n\r\n    useEffect(() => {\r\n       // console.log(\"PatternStorage Working\");\r\n        const newPattern = [];\r\n        props.plantsData.forEach((item) => {\r\n            if (item !== undefined) {\r\n                const newItems = item[0].plantid;\r\n                newPattern.push(newItems);\r\n            }\r\n        });\r\n\r\n        // Reorder the pattern if cp changes\r\n        const currentIndex = newPattern.indexOf(props.cp[0].plantid);\r\n        if (currentIndex !== -1) {\r\n            newPattern.splice(currentIndex, 1);\r\n            newPattern.unshift(props.cp[0].plantid);\r\n        }\r\n\r\n        setPattern(newPattern);\r\n        // Store the pattern in sessionStorage\r\n       // sessionStorage.setItem('plantPattern', JSON.stringify(newPattern));\r\n        const loginResponse =  window.ZOHO.CREATOR.init().then(function (data) {\r\n            let accessTokenz = \"\";\r\n            let userid = window.ZOHO.CREATOR.UTIL.getQueryParams().user;\r\n      \r\n            var config = {\r\n              appName: \"infinite-control-room\",\r\n              reportName: \"My_Profile_Data\",\r\n              criteria: \"Username == \\\"\" + userid + \"\\\"\",\r\n              page: \"1\",\r\n              pageSize: \"100\"\r\n            };\r\n      \r\n            const access = window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n            const idx=response.data[0].ID;\r\n            console.log(idx);\r\n            const formData={\r\n                \"data\": {\r\n                  \"PlantPattern\": JSON.stringify(newPattern)\r\n                }\r\n            }\r\n           const  config = {\r\n                appName : \"infinite-control-room\",\r\n                reportName  : \"My_Profile_Data\",\r\n                id: idx,\r\n                data : formData\r\n              };\r\n              const acce=window.ZOHO.CREATOR.API.updateRecord(config).then(function(response){\r\n               \r\n            console.log(response);\r\n\r\n                if(response.code == 3000 && response.message == \"Data Updated Successfully\"){\r\n                   console.log(\"working\");\r\n                }\r\n              });\r\n            });\r\n           \r\n          });\r\n          //console.log(access);\r\n    }, [props.plantsData, curPlId]);\r\n\r\n   // console.log(sessionStorage.getItem('plantPattern'));\r\n//sessionStorage.clear();\r\n    // Render your component\r\n    return <></>;\r\n};\r\n\r\nexport default PatternStorage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}