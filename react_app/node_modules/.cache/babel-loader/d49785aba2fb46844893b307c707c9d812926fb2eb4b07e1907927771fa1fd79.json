{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\zoho-creator-widget-starter-template-reactJS\\\\react_app\\\\src\\\\Components\\\\Containers\\\\MFI\\\\MFI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './MFI.css';\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MFI(prop) {\n  _s();\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [dataDisplay, setDataDisplay] = useState();\n  const currentPlant = prop.currentPlant;\n  console.log(\"MFI1\", currentPlant[0].plantid, accessToken);\n  useEffect(() => {\n    const fetchDataz = async () => {\n      try {\n        const response = await LoginCredentialsAndQueries();\n        if (response.length > 0) {\n          console.log(\"responseMFI\", response);\n          setAccessToken(response);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchDataz();\n  }, []);\n  let plantid = currentPlant[0].plantid;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://api-idap.infinite-uptime.com/api/3.0/idap-api/service-requests?plantIds=\" + plantid, {\n          method: \"GET\",\n          headers: {\n            accept: \"application/json\",\n            Authorization: \"Bearer \" + accessToken\n          }\n        });\n        const data = await response.json();\n        let key = Object.keys(data.data);\n        setDataDisplay(data.data[key]);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 30000); // Fetch data every 30 seconds\n\n    return () => {\n      clearInterval(interval); // Clean up the interval on component unmount\n    };\n  }, [currentPlant, accessToken]);\n  let i = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head\",\n      children: \"Machine with Faults\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: dataDisplay ? dataDisplay.map(ele => {\n        const check = new Date().getTime() - new Date(ele.serviceReqMachineDetails[0].createdDate).getTime() / 3600000 <= 48;\n        if (ele.status == \"NEW\") i++;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-itemZ\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"machine-name\",\n            children: ele.status === \"NEW\" && ele.serviceReqMachineDetails[0].machineName ? i + \".\" + ele.serviceReqMachineDetails[0].machineName + \" \" + ele.serviceReqMachineDetails[0].createdDate : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"monitor-name\",\n            children: ele.status === \"NEW\" ? ele.serviceReqMachineDetails[0].machineServiceDetails[0].serviceName : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"monitor-name\",\n            children: ele.status === \"NEW\" && new Date().getTime() - new Date(ele.serviceReqMachineDetails[0].createdDate).getTime() / 3600000 <= 48 ? ele.serviceReqMachineDetails[0].createdDate : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"No Faults observed in machines \"\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(MFI, \"pGVATS9a8mwHYNXZrJrxb9m2Sa0=\");\n_c = MFI;\nexport default MFI;\nvar _c;\n$RefreshReg$(_c, \"MFI\");","map":{"version":3,"names":["React","useState","useEffect","LoginCredentialsAndQueries","jsxDEV","_jsxDEV","Fragment","_Fragment","MFI","prop","_s","accessToken","setAccessToken","dataDisplay","setDataDisplay","currentPlant","console","log","plantid","fetchDataz","response","length","error","fetchData","fetch","method","headers","accept","Authorization","data","json","key","Object","keys","interval","setInterval","clearInterval","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ele","check","Date","getTime","serviceReqMachineDetails","createdDate","status","machineName","machineServiceDetails","serviceName","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Components/Containers/MFI/MFI.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './MFI.css';\r\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\r\n\r\nfunction MFI(prop) {\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [dataDisplay, setDataDisplay] = useState();\r\n\r\n  const currentPlant = prop.currentPlant;\r\n  console.log(\"MFI1\", currentPlant[0].plantid, accessToken);\r\n\r\n  useEffect(() => {\r\n    const fetchDataz = async () => {\r\n      try {\r\n        const response = await LoginCredentialsAndQueries();\r\n        if (response.length > 0) {\r\n          console.log(\"responseMFI\", response);\r\n          setAccessToken(response);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchDataz();\r\n  }, []);\r\n\r\n  let plantid = currentPlant[0].plantid;\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api-idap.infinite-uptime.com/api/3.0/idap-api/service-requests?plantIds=\" + plantid,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              accept: \"application/json\",\r\n              Authorization: \"Bearer \" + accessToken,\r\n            },\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n\r\n        let key = Object.keys(data.data);\r\n        setDataDisplay(data.data[key]);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    const interval = setInterval(fetchData, 30000); // Fetch data every 30 seconds\r\n\r\n    return () => {\r\n      clearInterval(interval); // Clean up the interval on component unmount\r\n    };\r\n  }, [currentPlant, accessToken]);\r\n  let i=0;\r\n  return (\r\n    <div className=\"content-box\">\r\n      <div className=\"head\">Machine with Faults</div>\r\n      <div className=\"content-container\">\r\n        {dataDisplay ? (\r\n          dataDisplay.map((ele) => {\r\n            const check=(new Date().getTime()-new Date(ele.serviceReqMachineDetails[0].createdDate).getTime()/3600000)<=48;\r\n            if(ele.status==\"NEW\")i++;\r\n\r\n            return (\r\n              \r\n              <div className=\"content-itemZ\">\r\n                <div className=\"machine-name\">\r\n                  {ele.status === \"NEW\" && ele.serviceReqMachineDetails[0].machineName ?i+\".\"+ ele.serviceReqMachineDetails[0].machineName+\" \"+ele.serviceReqMachineDetails[0].createdDate : ''}\r\n                </div>\r\n\r\n                <div className=\"monitor-name\">\r\n                  {ele.status === \"NEW\" ? ele.serviceReqMachineDetails[0].machineServiceDetails[0].serviceName : null}\r\n                </div>\r\n                <div className=\"monitor-name\">\r\n                  {ele.status === \"NEW\" &&(new Date().getTime()-new Date(ele.serviceReqMachineDetails[0].createdDate).getTime()/3600000)<=48? ele.serviceReqMachineDetails[0].createdDate : null}\r\n                </div>\r\n              </div>\r\n            );\r\n           \r\n          })\r\n        ) : (\r\n          <>No Faults observed in machines </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MFI;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}