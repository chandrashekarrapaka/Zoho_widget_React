{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\demo\\\\Desktop\\\\CRV\\\\Zoho_widget_React\\\\react_app\\\\src\\\\Components\\\\Containers\\\\Container.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Container.css\";\nimport Pagination from \"../Pagination/Pagination\";\nimport Plant from \"./Plant/Plant\";\nimport { Plants } from \"../../Services/Json\";\nimport Header from \"../Header/Header\";\nimport Footer from './Footer';\nimport Footerhs from './Footerhs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Container() {\n  _s();\n  var _currentPlant$;\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const [timeIn, setTimeIn] = useState(30000);\n  const [plantsData, setPlantsData] = useState([]);\n  const [currentPlantIndex, setCurrentPlantIndex] = useState(0);\n  const [noData, setNoData] = useState('');\n  const [apicall, setApiCall] = useState(true);\n  const [autoPagination, setAutoPagination] = useState(true);\n  const [PlantSelection, setPlantSelection] = useState(false);\n  const [footerContent, setFooterContent] = useState(true);\n  const [board, SetBoard] = useState(\"insta\");\n\n  //screen things\n  ////console.log(\"insidecontainer.js\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await Plants();\n        if (response[1]) {\n          let plants = [];\n          if (response[0]) {\n            response[0].forEach(element => {\n              if (element.length > 0) plants.push(element);\n            });\n            const storedPattern = await fetchProfile();\n            if (storedPattern && storedPattern !== undefined) {\n              const uniqueOrderedIds = [...new Set(JSON.parse(storedPattern))];\n              const uniquePlantIds = plants.map(plant => plant[0].plantid);\n              const patternsMatch = JSON.stringify(uniqueOrderedIds.sort()) === JSON.stringify(uniquePlantIds.sort());\n              if (storedPattern && storedPattern.length > 1 && patternsMatch) {\n                const orderedPattern = JSON.parse(storedPattern);\n                const reorderedPlantsData = orderedPattern.map(plantId => {\n                  const plant = plants.find(plant => plant[0].plantid === plantId);\n                  return plant ? plant : null;\n                }).filter(plant => plant !== null);\n                setPlantsData(reorderedPlantsData);\n              } else {\n                setPlantsData(plants);\n              }\n            } else {\n              setPlantsData(plants);\n            }\n            if (plants.length === 0) {\n              setNoData('No data found');\n            }\n          } else {\n            setNoData('No data found');\n          }\n        } else {\n          setApiCall(false);\n        }\n      } catch (error) {\n        console.error(error);\n        setNoData('Error occurred while fetching data.');\n      }\n    };\n    fetchData();\n  }, [timeIn]);\n  const fetchProfile = async () => {\n    try {\n      const data = await window.ZOHO.CREATOR.init();\n      let userid = window.ZOHO.CREATOR.UTIL.getQueryParams().user;\n      var config = {\n        appName: \"infinite-control-room\",\n        reportName: \"My_Profile_Data\",\n        criteria: \"Username == \\\"\" + userid + \"\\\"\",\n        page: \"1\",\n        pageSize: \"100\"\n      };\n      const response = await window.ZOHO.CREATOR.API.getAllRecords(config);\n      const idx = response.data[0].PlantPattern;\n      console.log(idx);\n      return idx;\n    } catch (error) {\n      console.error(error);\n      // Handle error cases\n      return null; // Or any appropriate value indicating error\n    }\n  };\n\n  const handleButtonClick = (content, type) => {\n    console.log(content, type);\n    setFooterContent(!footerContent);\n    if (type == \"insta\") {\n      SetBoard(\"hs\");\n    } else {\n      SetBoard(\"insta\");\n    }\n  };\n  useEffect(() => {\n    let timeout;\n    if (autoPagination && plantsData.length > 0 && PlantSelection == false) {\n      const currentPlant = plantsData[currentPlantIndex];\n      const totalPages = Math.ceil((currentPlant === null || currentPlant === void 0 ? void 0 : currentPlant.length) / itemsPerPage);\n      if (currentPage > totalPages) {\n        if (currentPlantIndex === plantsData.length - 1) {\n          timeout = setTimeout(() => {\n            setCurrentPage(1);\n            setCurrentPlantIndex(0);\n          }, 0);\n        } else {\n          timeout = setTimeout(() => {\n            setCurrentPage(1);\n            setCurrentPlantIndex(prevIndex => prevIndex + 1);\n          }, 0);\n        }\n      } else {\n        timeout = setTimeout(() => {\n          setCurrentPage(prevPage => prevPage + 1);\n        }, timeIn);\n      }\n    }\n    return () => clearTimeout(timeout);\n  }, [currentPage, currentPlantIndex, plantsData, autoPagination]);\n  const handleNextPlant = () => {\n    const nextPage = currentPage + 1;\n\n    // If we're at the end of the current plant, switch to the next plant\n    const nextPlantIndex = (currentPlantIndex + 1) % plantsData.length;\n    if (nextPlantIndex > plantsData.length - 1) {\n      setCurrentPlantIndex(nextPlantIndex);\n      setCurrentPage(1);\n    } else {\n      setCurrentPlantIndex(nextPlantIndex);\n      setCurrentPage(1);\n    } // Reset currentPage for the new plant\n    const currentPlant = plantsData[currentPlantIndex];\n    let kpimonitorsnew = 0;\n    let kpidisconnectednew = 0;\n    plantsData[currentPlantIndex].forEach(mon => {\n      mon.monitors.forEach(ele => {\n        if (ele.status == 5) {\n          kpidisconnectednew++;\n        }\n      });\n      kpimonitorsnew += mon.monitors.length;\n    });\n  };\n  const handlePageChange = pageNumber => {\n    const totalPages = Math.ceil(plantsData[currentPlantIndex].length / itemsPerPage);\n    if (pageNumber <= totalPages) {\n      setCurrentPage(pageNumber);\n      if (pageNumber === totalPages && currentPlantIndex !== plantsData.length - 1) {\n        setTimeout(() => {\n          const nextPlantIndex = currentPlantIndex + 1;\n          setCurrentPage(1);\n          setCurrentPlantIndex(nextPlantIndex);\n        }, timeIn);\n      }\n    }\n  };\n  const handleCheck = () => {\n    setAutoPagination(prevState => !prevState);\n  };\n  const currentPlant = plantsData[currentPlantIndex];\n  const totalPages = Math.ceil((currentPlant === null || currentPlant === void 0 ? void 0 : currentPlant.length) / itemsPerPage);\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = currentPlant ? currentPlant.slice(indexOfFirstItem, indexOfLastItem) : [];\n\n  //  style={{ transform: `scale(${1 + zoomLevel / 100})` }}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentPlant && apicall ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard-sec\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"title-section d-flex mb-2 align-items-center justify-content-center py-2 px-3 bg-white br-10\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0 fs-18 fw-600 text-center\",\n                    children: ((_currentPlant$ = currentPlant[0]) === null || _currentPlant$ === void 0 ? void 0 : _currentPlant$.plantName) || \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Plant, {\n                  board: board,\n                  currentItems: currentItems,\n                  NextPlant: plantsData[currentPlantIndex + 1] !== undefined ? plantsData[currentPlantIndex + 1][0].plantName : plantsData[0][0].plantName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pagination-sec\",\n                  style: {\n                    paddingBottom: \"10px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"pagination-section\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"pagination-inner-sec\",\n                        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                          className: \"pagination-block\",\n                          children: /*#__PURE__*/_jsxDEV(Pagination, {\n                            items: currentItems,\n                            currentPage: currentPage,\n                            totalPages: totalPages,\n                            onPageChange: handlePageChange\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 237,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 236,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"stop-auto-pagination\",\n                          children: /*#__PURE__*/_jsxDEV(\"form\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                              onClick: handleCheck,\n                              type: \"checkbox\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 246,\n                              columnNumber: 33\n                            }, this), \"Stop Auto Pagination\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 245,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 244,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"button-container d-flex justify-content-center gap-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary\",\n                    onClick: () => handleButtonClick(true, \"insta\"),\n                    children: \"Instantenous\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary\",\n                    onClick: () => handleButtonClick(false, \"hs\"),\n                    children: \"HealthScore\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 27\n                }, this), footerContent ? /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 36\n                }, this) : /*#__PURE__*/_jsxDEV(Footerhs, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this) : apicall === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: `loading....${noData}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-again\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Invalid Token, Please Login here`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://crv.infinite-uptime.com/#Profile\",\n        target: \"_blank\",\n        children: \"Please click here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n_s(Container, \"PPwkFvTLEJRRNTtpfIpHDHdJbtA=\");\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","Pagination","Plant","Plants","Header","Footer","Footerhs","jsxDEV","_jsxDEV","Container","_s","_currentPlant$","currentPage","setCurrentPage","itemsPerPage","timeIn","setTimeIn","plantsData","setPlantsData","currentPlantIndex","setCurrentPlantIndex","noData","setNoData","apicall","setApiCall","autoPagination","setAutoPagination","PlantSelection","setPlantSelection","footerContent","setFooterContent","board","SetBoard","fetchData","response","plants","forEach","element","length","push","storedPattern","fetchProfile","undefined","uniqueOrderedIds","Set","JSON","parse","uniquePlantIds","map","plant","plantid","patternsMatch","stringify","sort","orderedPattern","reorderedPlantsData","plantId","find","filter","error","console","data","window","ZOHO","CREATOR","init","userid","UTIL","getQueryParams","user","config","appName","reportName","criteria","page","pageSize","API","getAllRecords","idx","PlantPattern","log","handleButtonClick","content","type","timeout","currentPlant","totalPages","Math","ceil","setTimeout","prevIndex","prevPage","clearTimeout","handleNextPlant","nextPage","nextPlantIndex","kpimonitorsnew","kpidisconnectednew","mon","monitors","ele","status","handlePageChange","pageNumber","handleCheck","prevState","indexOfLastItem","indexOfFirstItem","currentItems","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","plantName","NextPlant","style","paddingBottom","class","items","onPageChange","onClick","textAlign","href","target","_c","$RefreshReg$"],"sources":["C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/src/Components/Containers/Container.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Container.css\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport Plant from \"./Plant/Plant\";\r\nimport { Plants } from \"../../Services/Json\";\r\nimport Header from \"../Header/Header\";\r\nimport Footer from './Footer';\r\nimport Footerhs from './Footerhs';\r\n\r\n\r\n\r\nfunction Container() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 10;\r\n  const [timeIn, setTimeIn] = useState(30000);\r\n  const [plantsData, setPlantsData] = useState([]);\r\n  const [currentPlantIndex, setCurrentPlantIndex] = useState(0);\r\n  const [noData, setNoData] = useState('');\r\n  const [apicall, setApiCall] = useState(true);\r\n  const [autoPagination, setAutoPagination] = useState(true);\r\n  const [PlantSelection, setPlantSelection] = useState(false);\r\n  const [footerContent, setFooterContent] = useState(true);\r\n  const [board,SetBoard]=useState(\"insta\");\r\n\r\n\r\n\r\n  //screen things\r\n  ////console.log(\"insidecontainer.js\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await Plants();\r\n\r\n        if (response[1]) {\r\n          let plants = [];\r\n\r\n          if (response[0]) {\r\n            response[0].forEach(element => {\r\n              if (element.length > 0) plants.push(element);\r\n            });\r\n\r\n            const storedPattern = await fetchProfile();\r\n\r\n            if (storedPattern && storedPattern !== undefined) {\r\n              const uniqueOrderedIds = [...new Set(JSON.parse(storedPattern))];\r\n              const uniquePlantIds = plants.map(plant => plant[0].plantid);\r\n              const patternsMatch = JSON.stringify(uniqueOrderedIds.sort()) === JSON.stringify(uniquePlantIds.sort());\r\n\r\n              if (storedPattern && storedPattern.length > 1 && patternsMatch) {\r\n                const orderedPattern = JSON.parse(storedPattern);\r\n                const reorderedPlantsData = orderedPattern.map((plantId) => {\r\n                  const plant = plants.find((plant) => plant[0].plantid === plantId);\r\n                  return plant ? plant : null;\r\n                }).filter((plant) => plant !== null);\r\n\r\n                setPlantsData(reorderedPlantsData);\r\n              } else {\r\n                setPlantsData(plants);\r\n              }\r\n            } else {\r\n              setPlantsData(plants);\r\n            }\r\n\r\n            if (plants.length === 0) {\r\n              setNoData('No data found');\r\n            }\r\n          } else {\r\n            setNoData('No data found');\r\n          }\r\n        } else {\r\n          setApiCall(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        setNoData('Error occurred while fetching data.');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [timeIn]);\r\n\r\n  const fetchProfile = async () => {\r\n    try {\r\n      const data = await window.ZOHO.CREATOR.init();\r\n      let userid = window.ZOHO.CREATOR.UTIL.getQueryParams().user;\r\n      var config = {\r\n        appName: \"infinite-control-room\",\r\n        reportName: \"My_Profile_Data\",\r\n        criteria: \"Username == \\\"\" + userid + \"\\\"\",\r\n        page: \"1\",\r\n        pageSize: \"100\"\r\n      };\r\n      const response = await window.ZOHO.CREATOR.API.getAllRecords(config);\r\n      const idx = response.data[0].PlantPattern;\r\n      console.log(idx);\r\n      return idx;\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle error cases\r\n      return null; // Or any appropriate value indicating error\r\n    }\r\n  };\r\n  const handleButtonClick = (content,type) => {\r\n    console.log(content,type);\r\n    setFooterContent(!footerContent);\r\n    if(type==\"insta\"){\r\n      SetBoard(\"hs\");\r\n    }\r\n    else{\r\n      SetBoard(\"insta\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let timeout;\r\n\r\n    if (autoPagination && plantsData.length > 0 && PlantSelection == false) {\r\n      const currentPlant = plantsData[currentPlantIndex];\r\n\r\n      const totalPages = Math.ceil(currentPlant?.length / itemsPerPage);\r\n\r\n      if (currentPage > totalPages) {\r\n        if (currentPlantIndex === plantsData.length - 1) {\r\n          timeout = setTimeout(() => {\r\n            setCurrentPage(1);\r\n            setCurrentPlantIndex(0);\r\n          }, 0);\r\n        } else {\r\n          timeout = setTimeout(() => {\r\n            setCurrentPage(1);\r\n            setCurrentPlantIndex((prevIndex) => prevIndex + 1);\r\n          }, 0);\r\n        }\r\n      } else {\r\n        timeout = setTimeout(() => {\r\n          setCurrentPage((prevPage) => prevPage + 1);\r\n        }, timeIn);\r\n      }\r\n    }\r\n\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [currentPage, currentPlantIndex, plantsData, autoPagination]);\r\n\r\n  const handleNextPlant = () => {\r\n    const nextPage = currentPage + 1;\r\n\r\n\r\n\r\n    // If we're at the end of the current plant, switch to the next plant\r\n    const nextPlantIndex = (currentPlantIndex + 1) % plantsData.length;\r\n    if (nextPlantIndex > plantsData.length - 1) {\r\n      setCurrentPlantIndex(nextPlantIndex);\r\n      setCurrentPage(1);\r\n    } else {\r\n      setCurrentPlantIndex(nextPlantIndex);\r\n      setCurrentPage(1);\r\n    } // Reset currentPage for the new plant\r\n    const currentPlant = plantsData[currentPlantIndex];\r\n\r\n\r\n    let kpimonitorsnew = 0;\r\n    let kpidisconnectednew = 0;\r\n\r\n    plantsData[currentPlantIndex].forEach((mon) => {\r\n\r\n      mon.monitors.forEach((ele) => {\r\n        if (ele.status == 5) {\r\n\r\n          kpidisconnectednew++;\r\n\r\n        }\r\n      })\r\n      kpimonitorsnew += mon.monitors.length;\r\n    });\r\n\r\n\r\n\r\n  };\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    const totalPages = Math.ceil(plantsData[currentPlantIndex].length / itemsPerPage);\r\n\r\n    if (pageNumber <= totalPages) {\r\n      setCurrentPage(pageNumber);\r\n\r\n      if (pageNumber === totalPages && currentPlantIndex !== plantsData.length - 1) {\r\n        setTimeout(() => {\r\n          const nextPlantIndex = currentPlantIndex + 1;\r\n          setCurrentPage(1);\r\n          setCurrentPlantIndex(nextPlantIndex);\r\n        }, timeIn);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    setAutoPagination((prevState) => !prevState);\r\n  }\r\n\r\n\r\n  const currentPlant = plantsData[currentPlantIndex];\r\n  const totalPages = Math.ceil(currentPlant?.length / itemsPerPage);\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = currentPlant ? currentPlant.slice(indexOfFirstItem, indexOfLastItem) : [];\r\n\r\n  //  style={{ transform: `scale(${1 + zoomLevel / 100})` }}\r\n  return (\r\n    <div>\r\n\r\n      {(currentPlant && apicall) ? (\r\n\r\n        <section className=\"dashboard-sec\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"header\">\r\n\r\n            </div>\r\n\r\n            <div className=\"main-content\">\r\n              <div >\r\n                <div >\r\n                  <div >\r\n                      <div className=\"title-section d-flex mb-2 align-items-center justify-content-center py-2 px-3 bg-white br-10\">\r\n                    <p className=\"mb-0 fs-18 fw-600 text-center\">{currentPlant[0]?.plantName || \"\"}</p>\r\n                   </div>\r\n\r\n\r\n\r\n                    <Plant board={board} currentItems={currentItems} NextPlant={plantsData[currentPlantIndex + 1] !== undefined ? plantsData[currentPlantIndex + 1][0].plantName : plantsData[0][0].plantName} />\r\n\r\n                    <div className=\"pagination-sec\" style={{ paddingBottom: \"10px\" }}>\r\n                      <div className=\"row\">\r\n                        <div class=\"pagination-section\">\r\n                          <div class=\"pagination-inner-sec\">\r\n                            <ul className=\"pagination-block\">\r\n                              <Pagination\r\n                                items={currentItems}\r\n                                currentPage={currentPage}\r\n                                totalPages={totalPages}\r\n                                onPageChange={handlePageChange}\r\n                              />\r\n                            </ul>\r\n                            <div className=\"stop-auto-pagination\" >\r\n                              <form>\r\n                                <input onClick={handleCheck} type=\"checkbox\" />\r\n                                Stop Auto Pagination\r\n                              </form>\r\n\r\n                            </div>\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"button-container d-flex justify-content-center gap-3\">\r\n                      <button className=\"btn btn-primary\" onClick={() => handleButtonClick(true,\"insta\")}>Instantenous</button>\r\n                      <button className=\"btn btn-primary\" onClick={() => handleButtonClick(false,\"hs\")}>HealthScore</button>\r\n                    </div><br/>\r\n                    {footerContent?<Footer/>:<Footerhs/>}\r\n\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n\r\n            {/* <AlertsBar  currentPlant={currentPlant} plantsData={plantsData}/> */}\r\n          </div>\r\n        </section>\r\n      ) : ((apicall === true) ?\r\n\r\n        (<div style={{ textAlign: \"center\" }}><h1>{`loading....${noData}`}</h1></div>)\r\n        : (<div className=\"login-again\">\r\n          <p>{`Invalid Token, Please Login here`}</p>\r\n          <a href=\"https://crv.infinite-uptime.com/#Profile\" target=\"_blank\">Please click here</a>\r\n        </div>)\r\n\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}