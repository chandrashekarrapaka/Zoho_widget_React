{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chandrashekar.rapaka\\\\Desktop\\\\git\\\\Zoho_widget_React\\\\react_app\\\\src\\\\Components\\\\Containers\\\\Plant\\\\Machine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Velocity } from \"../../../Services/Velocity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Machine(prop) {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [apiData, setApiData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await Velocity();\n        setApiData(response); // Update state with API data\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n\n    // Fetch API data every 30 seconds\n    const interval = setInterval(fetchData, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const getChartData = () => {\n    const machines = prop.machine.length;\n    const monitors = prop.machine.reduce((acc, ele) => acc + ele.monitors.length, 0);\n    const healthScores = prop.machine.flatMap(ele => ele.monitors.map(monitor => monitor.healthScore)).filter(healthScore => healthScore !== undefined);\n    console.log(healthScores);\n    const healthScorePercentages = [healthScores.filter(score => score < 100).length, healthScores.filter(score => score < 75).length, healthScores.filter(score => score < 50).length, healthScores.filter(score => score < 25).length];\n    const chartData = {\n      labels: ['Healthy', 'Warning', 'Critical', 'Undefined'],\n      datasets: [{\n        data: healthScorePercentages,\n        backgroundColor: ['#64DD17', '#FFC107', '#FF5722', '#9E9E9E']\n      }]\n    };\n    console.log(chartData);\n    return chartData;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cement-mill-sec\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cement-mill-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n          data: getChartData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          id: \"exampleModal\",\n          tabIndex: \"-1\",\n          \"aria-labelledby\": \"exampleModalLabel\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Machine, \"eoTXHDXX6B5oJ4bNysck6aLuBPQ=\");\n_c = Machine;\nexport default Machine;\nvar _c;\n$RefreshReg$(_c, \"Machine\");","map":{"version":3,"names":["React","useState","useEffect","Doughnut","Velocity","jsxDEV","_jsxDEV","Machine","prop","_s","showPopup","setShowPopup","apiData","setApiData","fetchData","response","error","console","log","interval","setInterval","clearInterval","getChartData","machines","machine","length","monitors","reduce","acc","ele","healthScores","flatMap","map","monitor","healthScore","filter","undefined","healthScorePercentages","score","chartData","labels","datasets","data","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","tabIndex","_c","$RefreshReg$"],"sources":["C:/Users/chandrashekar.rapaka/Desktop/git/Zoho_widget_React/react_app/src/Components/Containers/Plant/Machine.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { Velocity } from \"../../../Services/Velocity\";\r\n\r\nfunction Machine(prop) {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [apiData, setApiData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await Velocity();\r\n        setApiData(response); // Update state with API data\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    // Fetch API data every 30 seconds\r\n    const interval = setInterval(fetchData, 30000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getChartData = () => {\r\n    const machines = prop.machine.length;\r\n    const monitors = prop.machine.reduce((acc, ele) => acc + ele.monitors.length, 0);\r\n\r\n    const healthScores = prop.machine\r\n      .flatMap((ele) => ele.monitors.map((monitor) => monitor.healthScore))\r\n      .filter((healthScore) => healthScore !== undefined);\r\n    console.log(healthScores);\r\n    const healthScorePercentages = [\r\n      healthScores.filter((score) => score < 100).length,\r\n      healthScores.filter((score) => score < 75).length,\r\n      healthScores.filter((score) => score <50).length,\r\n      healthScores.filter((score) => score < 25).length,\r\n    ];\r\n\r\n    const chartData = {\r\n      labels: ['Healthy', 'Warning', 'Critical', 'Undefined'],\r\n      datasets: [\r\n        {\r\n          data: healthScorePercentages,\r\n          backgroundColor: ['#64DD17', '#FFC107', '#FF5722', '#9E9E9E'],\r\n        },\r\n      ],\r\n    };\r\n    console.log(chartData);\r\n    return chartData;\r\n  };\r\n\r\n  return (\r\n    <div className=\"cement-mill-sec\">\r\n      <div className=\"cement-mill-wrapper\">\r\n        <div className=\"row\">\r\n          <Doughnut data={getChartData()} />\r\n          {showPopup && (\r\n            <div\r\n              className=\"popup\"\r\n              id=\"exampleModal\"\r\n              tabIndex=\"-1\"\r\n              aria-labelledby=\"exampleModalLabel\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              {/* ... Popup content ... */}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Machine;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}