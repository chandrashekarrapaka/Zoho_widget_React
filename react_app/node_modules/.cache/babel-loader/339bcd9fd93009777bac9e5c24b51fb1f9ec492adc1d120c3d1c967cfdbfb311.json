{"ast":null,"code":"export async function Plants() {\n  let accessToken = \"\";\n  //   const handleScriptLoad = async() => {\n\n  //     console.log(\"hero\")\n  //     // await window.ZOHO.CREATOR.init().then(function(data) {\n\n  //     //  // var queryParams = window.ZOHO.CREATOR.UTIL.getQueryParams();\n  //     //  const email=\"rapaka.chandrashekar@gmail.com\";//Stage == \\\"Open\\\"\n  //     //    var config = {\n  //     //     appName: \"infinite-control-room\",\n  //     //     reportName: \"All_Users\",\n  //     //     criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\n  //     //     page: \"1\",\n  //     //     pageSize: \"100\"\n  //     //   }\n\n  //     //   //get all records API\n  //     //   window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\n  //     //     //callback block\n  //     //     let userData = response;\n\n  //     //     accessToken=JSON.stringify(userData.data[0].Access_Token);\n  //     //     console.log(\"userData\"+JSON.stringify(userData.data[0].Access_Token));\n  //     //    // console.log(\"check\"+accessToken);\n  //     //    // return accessToken;\n  //     //   });\n\n  //     // });\n\n  //   };\n  //  await handleScriptLoad();\n\n  try {\n    const loginResponse = await window.ZOHO.CREATOR.init().then(function (data) {\n      let accessTokenz = \"\";\n      var config = {\n        appName: \"infinite-control-room\",\n        reportName: \"All_Users\",\n        criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\n        page: \"1\",\n        pageSize: \"100\"\n      };\n      const access = window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\n        let userData = response;\n        accessTokenz = userData.data[0].Access_Token;\n        console.log(\"userData\" + JSON.stringify(userData.data[0].Access_Token));\n        // console.log(\"check\"+accessToken);\n        // return accessToken;\n        return accessTokenz;\n      });\n      return access;\n    });\n    const queryParams = await window.ZOHO.CREATOR.init().then(function (data) {\n      return window.ZOHO.CREATOR.UTIL.getQueryParams();\n    });\n    const plantsData = [];\n    const loginData = await loginResponse;\n    console.log(\"loginData\" + loginData);\n    accessToken = loginData;\n    //accessToken=\"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIyY0NxRnpxRXJrNU5GS1RjTi1YSk1IdE9NS2tWVTZXS1hIdHZFMF8xZE5ZIn0.eyJleHAiOjE2ODY5NTQ5OTEsImlhdCI6MTY4NjkxMTc5MSwianRpIjoiNDU0MGQ1MTctNjE1ZS00NDZmLTgxOTgtNTc1YzY1ZjUwZmM3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5pbmZpbml0ZS11cHRpbWUuY29tL3JlYWxtcy9pZGFwIiwic3ViIjoiZjo2MGNhNzY4Yy1iMTA0LTQ0OTktYjU4Yy05MzliOTdlNzAzM2Q6ODcxMSIsInR5cCI6IkJlYXJlciIsImF6cCI6ImlkYXAiLCJzZXNzaW9uX3N0YXRlIjoiNGQ0YjUzMDAtM2NlZC00ZTk5LTlmNDEtYmRjMDI0ZjJkMzhlIiwic2NvcGUiOiJlbWFpbCIsInNpZCI6IjRkNGI1MzAwLTNjZWQtNGU5OS05ZjQxLWJkYzAyNGYyZDM4ZSIsImlzX2FkbWluIjoiZmFsc2UiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImlkYXBfcm9sZSI6IlJPTEVfVVNFUiIsImVtYWlsIjoiUmFwYWthLmNoYW5kcmFzaGVrYXJAZ21haWwuY29tIn0.l8NL7t1Kqf77hOHo_kGSpcKzDoSjFFYmKdyn3y6-fC45B_ICvvYz_FLMfazPMOxVzMG0nb0nD88y_J45wFYTjLnfwbZbIzw--vbVKt1EMe4qK6ko4wv1jTRrjg97m7PaQL3FLcv1JSPafJ8ukPm1z4BPo0tpoHlbZX1vCGwm1ZgdJqTBM6bJrtrLyB1EcABWsXIbd7r_756vua7sOO_7ZkAppAiHTV3qqjM5N0cjHaKTkMXYAiVkl6kBpsZf7N8CCdwkZTKV3rapK_zQGJhS2VxSNkeiERF2Y16nyPxSjxyzQFBB6I0AB2xqSSWlhJ6Shk2yaaI1MB9_cdt8oOgJPg\";\n    console.log(\"queryParamsnew\" + JSON.stringify(queryParams.PlantId.split(\",\")[0]));\n\n    //console.log(\"accessToken\"+accessToken);\n    //console.log(\"check\"+ accessToken);\n    const orgIdAll = queryParams.PlantId.split(\",\");\n    orgIdAll.map(async org => {\n      const arrayOfPlants = [];\n      let orgid = org;\n      console.log(\"ordid\", orgid);\n      const plantsResponse = await fetch(`https://api-idap.infinite-uptime.com/api/3.0/idap-api/plants/${orgid}/machine-group-stats`, {\n        method: 'GET',\n        headers: {\n          'accept': 'application/json',\n          'Authorization': 'Bearer ' + accessToken\n        }\n      });\n      let plantsDataz = await plantsResponse.json();\n      //const newMachines=[];\n      arrayOfPlants.push(plantsDataz.data);\n      console.log(\"plantsdata\", plantsDataz.data);\n      // arrayOfPlants.\n      //  plantsData.data.machineGroups.forEach(element => {\n      //   element.machines.forEach(ele=>{\n      //     newMachines.push(ele);\n      //   })\n      //  });\n    });\n\n    return plantsData.data;\n    //console.log(\"check\"+ headers);\n\n    // console.log(\"newMachines\"+JSON.stringify(newMachines));\n    // return newMachines;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n_c = Plants;\nvar _c;\n$RefreshReg$(_c, \"Plants\");","map":{"version":3,"names":["Plants","accessToken","loginResponse","window","ZOHO","CREATOR","init","then","data","accessTokenz","config","appName","reportName","criteria","page","pageSize","access","API","getAllRecords","response","userData","Access_Token","console","log","JSON","stringify","queryParams","UTIL","getQueryParams","plantsData","loginData","PlantId","split","orgIdAll","map","org","arrayOfPlants","orgid","plantsResponse","fetch","method","headers","plantsDataz","json","push","error","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Services/Json.js"],"sourcesContent":["\r\nexport async function Plants() {\r\n  let accessToken = \"\";\r\n  //   const handleScriptLoad = async() => {\r\n\r\n  //     console.log(\"hero\")\r\n  //     // await window.ZOHO.CREATOR.init().then(function(data) {\r\n\r\n  //     //  // var queryParams = window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n  //     //  const email=\"rapaka.chandrashekar@gmail.com\";//Stage == \\\"Open\\\"\r\n  //     //    var config = {\r\n  //     //     appName: \"infinite-control-room\",\r\n  //     //     reportName: \"All_Users\",\r\n  //     //     criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\r\n  //     //     page: \"1\",\r\n  //     //     pageSize: \"100\"\r\n  //     //   }\r\n\r\n  //     //   //get all records API\r\n  //     //   window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n  //     //     //callback block\r\n  //     //     let userData = response;\r\n\r\n  //     //     accessToken=JSON.stringify(userData.data[0].Access_Token);\r\n  //     //     console.log(\"userData\"+JSON.stringify(userData.data[0].Access_Token));\r\n  //     //    // console.log(\"check\"+accessToken);\r\n  //     //    // return accessToken;\r\n  //     //   });\r\n\r\n\r\n  //     // });\r\n\r\n\r\n  //   };\r\n  //  await handleScriptLoad();\r\n\r\n\r\n\r\n  try {\r\n\r\n    const loginResponse = await window.ZOHO.CREATOR.init().then(function (data) {\r\n      let accessTokenz = \"\";\r\n\r\n\r\n      var config = {\r\n        appName: \"infinite-control-room\",\r\n        reportName: \"All_Users\",\r\n        criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\r\n        page: \"1\",\r\n        pageSize: \"100\"\r\n      }\r\n      const access = window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n        let userData = response;\r\n\r\n        accessTokenz = userData.data[0].Access_Token;\r\n        console.log(\"userData\" + JSON.stringify(userData.data[0].Access_Token));\r\n        // console.log(\"check\"+accessToken);\r\n        // return accessToken;\r\n        return accessTokenz;\r\n      });\r\n      return access;\r\n    });\r\n    const queryParams = await window.ZOHO.CREATOR.init().then(function (data) {\r\n      return window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n    });\r\n    const plantsData=[];\r\n    const loginData = await loginResponse;\r\n    console.log(\"loginData\" + loginData);\r\n    accessToken = loginData;\r\n    //accessToken=\"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIyY0NxRnpxRXJrNU5GS1RjTi1YSk1IdE9NS2tWVTZXS1hIdHZFMF8xZE5ZIn0.eyJleHAiOjE2ODY5NTQ5OTEsImlhdCI6MTY4NjkxMTc5MSwianRpIjoiNDU0MGQ1MTctNjE1ZS00NDZmLTgxOTgtNTc1YzY1ZjUwZmM3IiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5pbmZpbml0ZS11cHRpbWUuY29tL3JlYWxtcy9pZGFwIiwic3ViIjoiZjo2MGNhNzY4Yy1iMTA0LTQ0OTktYjU4Yy05MzliOTdlNzAzM2Q6ODcxMSIsInR5cCI6IkJlYXJlciIsImF6cCI6ImlkYXAiLCJzZXNzaW9uX3N0YXRlIjoiNGQ0YjUzMDAtM2NlZC00ZTk5LTlmNDEtYmRjMDI0ZjJkMzhlIiwic2NvcGUiOiJlbWFpbCIsInNpZCI6IjRkNGI1MzAwLTNjZWQtNGU5OS05ZjQxLWJkYzAyNGYyZDM4ZSIsImlzX2FkbWluIjoiZmFsc2UiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImlkYXBfcm9sZSI6IlJPTEVfVVNFUiIsImVtYWlsIjoiUmFwYWthLmNoYW5kcmFzaGVrYXJAZ21haWwuY29tIn0.l8NL7t1Kqf77hOHo_kGSpcKzDoSjFFYmKdyn3y6-fC45B_ICvvYz_FLMfazPMOxVzMG0nb0nD88y_J45wFYTjLnfwbZbIzw--vbVKt1EMe4qK6ko4wv1jTRrjg97m7PaQL3FLcv1JSPafJ8ukPm1z4BPo0tpoHlbZX1vCGwm1ZgdJqTBM6bJrtrLyB1EcABWsXIbd7r_756vua7sOO_7ZkAppAiHTV3qqjM5N0cjHaKTkMXYAiVkl6kBpsZf7N8CCdwkZTKV3rapK_zQGJhS2VxSNkeiERF2Y16nyPxSjxyzQFBB6I0AB2xqSSWlhJ6Shk2yaaI1MB9_cdt8oOgJPg\";\r\n    console.log(\"queryParamsnew\" + JSON.stringify(queryParams.PlantId.split(\",\")[0]));\r\n\r\n    //console.log(\"accessToken\"+accessToken);\r\n    //console.log(\"check\"+ accessToken);\r\n    const orgIdAll = queryParams.PlantId.split(\",\");\r\n    orgIdAll.map(async (org) => {\r\n      const arrayOfPlants=[];\r\n      let orgid = org;\r\n      console.log(\"ordid\", orgid);\r\n\r\n      const plantsResponse = await fetch(`https://api-idap.infinite-uptime.com/api/3.0/idap-api/plants/${orgid}/machine-group-stats`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'accept': 'application/json',\r\n          'Authorization': 'Bearer ' + accessToken,\r\n        },\r\n      });\r\n     let plantsDataz = await plantsResponse.json();\r\n      //const newMachines=[];\r\n      arrayOfPlants.push(plantsDataz.data);\r\n      console.log(\"plantsdata\", plantsDataz.data);\r\n      // arrayOfPlants.\r\n      //  plantsData.data.machineGroups.forEach(element => {\r\n      //   element.machines.forEach(ele=>{\r\n      //     newMachines.push(ele);\r\n      //   })\r\n      //  });\r\n\r\n\r\n      \r\n\r\n    })\r\n    return plantsData.data;\r\n    //console.log(\"check\"+ headers);\r\n\r\n\r\n    // console.log(\"newMachines\"+JSON.stringify(newMachines));\r\n    // return newMachines;\r\n\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}