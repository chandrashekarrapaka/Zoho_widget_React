{"ast":null,"code":"export async function LoginCredentialsAndQueries() {\n  let accessToken = \"\";\n  try {\n    const loginResponse = await window.ZOHO.CREATOR.init().then(function (data) {\n      let accessTokenz = \"\";\n      var config = {\n        appName: \"infinite-control-room\",\n        reportName: \"All_Users\",\n        criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\n        page: \"1\",\n        pageSize: \"100\"\n      };\n      const access = window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\n        let userData = response;\n        accessTokenz = userData.data[0].Access_Token;\n        console.log(\"userData\" + JSON.stringify(userData.data[0].Access_Token));\n        // console.log(\"check\"+accessToken);\n        // return accessToken;\n        return accessTokenz;\n      });\n      return access;\n    });\n    const queryParams = await window.ZOHO.CREATOR.init().then(function (data) {\n      return window.ZOHO.CREATOR.UTIL.getQueryParams();\n    });\n    const loginData = await loginResponse;\n    accessToken = loginData;\n    console.log(\"queryParamsLOGIN\" + JSON.stringify(queryParams));\n    console.log(\"dataused\" + JSON.stringify(accessToken), queryParams);\n    const lqp = {\n      \"accessToken\": accessToken,\n      \"queryParams\": queryParams\n    };\n    // let orgid=queryParams.PlantId.split(\",\")[1];\n    // const orgidAll=queryParams.PlantId.split(\",\");\n    //console.log(\"dataused\"+accessToken,queryParams)\n    return lqp;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n_c = LoginCredentialsAndQueries;\nvar _c;\n$RefreshReg$(_c, \"LoginCredentialsAndQueries\");","map":{"version":3,"names":["LoginCredentialsAndQueries","accessToken","loginResponse","window","ZOHO","CREATOR","init","then","data","accessTokenz","config","appName","reportName","criteria","page","pageSize","access","API","getAllRecords","response","userData","Access_Token","console","log","JSON","stringify","queryParams","UTIL","getQueryParams","loginData","lqp","error","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Services/loginCredentialsAndQueries.js"],"sourcesContent":["\r\nexport async function LoginCredentialsAndQueries() {\r\n    let accessToken=\"\";\r\n    \r\n      try {\r\n         \r\n        const loginResponse =  await window.ZOHO.CREATOR.init().then(function(data) {\r\n          let accessTokenz=\"\";\r\n        \r\n        \r\n         var config = {\r\n          appName: \"infinite-control-room\",\r\n          reportName: \"All_Users\",\r\n          criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\r\n          page: \"1\",\r\n          pageSize: \"100\"\r\n        }\r\n        const access=window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n          let userData = response;\r\n          \r\n          accessTokenz=userData.data[0].Access_Token;\r\n          console.log(\"userData\"+JSON.stringify(userData.data[0].Access_Token));\r\n         // console.log(\"check\"+accessToken);\r\n         // return accessToken;\r\n        return accessTokenz;\r\n        });\r\n        return access;\r\n      });\r\n      const queryParams =  await window.ZOHO.CREATOR.init().then(function(data) { \r\n        return window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n      });\r\n    \r\n        const loginData = await loginResponse;\r\n\r\n       accessToken = loginData;\r\n         console.log(\"queryParamsLOGIN\"+JSON.stringify(queryParams));\r\n         console.log(\"dataused\"+JSON.stringify(accessToken),queryParams)\r\n        \r\n        const lqp={\"accessToken\":accessToken,\"queryParams\":queryParams};\r\n        // let orgid=queryParams.PlantId.split(\",\")[1];\r\n        // const orgidAll=queryParams.PlantId.split(\",\");\r\n      //console.log(\"dataused\"+accessToken,queryParams)\r\n        return lqp;\r\n      } catch (error) {\r\n        console.error(error);\r\n        throw error;\r\n      }\r\n    }\r\n    "],"mappings":"AACA,OAAO,eAAeA,0BAA0BA,CAAA,EAAG;EAC/C,IAAIC,WAAW,GAAC,EAAE;EAEhB,IAAI;IAEF,MAAMC,aAAa,GAAI,MAAMC,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,UAASC,IAAI,EAAE;MAC1E,IAAIC,YAAY,GAAC,EAAE;MAGpB,IAAIC,MAAM,GAAG;QACZC,OAAO,EAAE,uBAAuB;QAChCC,UAAU,EAAE,WAAW;QACvBC,QAAQ,EAAE,+CAA+C;QACzDC,IAAI,EAAE,GAAG;QACTC,QAAQ,EAAE;MACZ,CAAC;MACD,MAAMC,MAAM,GAACb,MAAM,CAACC,IAAI,CAACC,OAAO,CAACY,GAAG,CAACC,aAAa,CAACR,MAAM,CAAC,CAACH,IAAI,CAAC,UAAUY,QAAQ,EAAE;QAClF,IAAIC,QAAQ,GAAGD,QAAQ;QAEvBV,YAAY,GAACW,QAAQ,CAACZ,IAAI,CAAC,CAAC,CAAC,CAACa,YAAY;QAC1CC,OAAO,CAACC,GAAG,CAAC,UAAU,GAACC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAACZ,IAAI,CAAC,CAAC,CAAC,CAACa,YAAY,CAAC,CAAC;QACtE;QACA;QACD,OAAOZ,YAAY;MACnB,CAAC,CAAC;MACF,OAAOO,MAAM;IACf,CAAC,CAAC;IACF,MAAMU,WAAW,GAAI,MAAMvB,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,UAASC,IAAI,EAAE;MACxE,OAAOL,MAAM,CAACC,IAAI,CAACC,OAAO,CAACsB,IAAI,CAACC,cAAc,CAAC,CAAC;IAClD,CAAC,CAAC;IAEA,MAAMC,SAAS,GAAG,MAAM3B,aAAa;IAEtCD,WAAW,GAAG4B,SAAS;IACrBP,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAACC,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC;IAC3DJ,OAAO,CAACC,GAAG,CAAC,UAAU,GAACC,IAAI,CAACC,SAAS,CAACxB,WAAW,CAAC,EAACyB,WAAW,CAAC;IAEhE,MAAMI,GAAG,GAAC;MAAC,aAAa,EAAC7B,WAAW;MAAC,aAAa,EAACyB;IAAW,CAAC;IAC/D;IACA;IACF;IACE,OAAOI,GAAG;EACZ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF;AAACC,EAAA,GA9CiBhC,0BAA0B;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}