{"ast":null,"code":"/*!\r\n * Chart.js v3.9.1\r\n * https://www.chartjs.org\r\n * (c) 2022 Chart.js Contributors\r\n * Released under the MIT License\r\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {\n      sharedOptions,\n      includeOptions\n    };\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = arr => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  let {\n    inflateAmount\n  } = _ref;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {\n      iScale\n    } = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type).filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = meta => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nclass PieController extends DoughnutController {}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n          case 'bottom':\n            top -= height;\n            break;\n        }\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n          case 'right':\n            left -= width;\n            break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {\n      textAlign,\n      x\n    };\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    this._each('register', args);\n  }\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    this._each('unregister', args);\n  }\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    this._each('register', args, this.controllers);\n  }\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    this._each('register', args, this.elements);\n  }\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    this._each('register', args, this.plugins);\n  }\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      data: points = []\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {\n        dataset: line,\n        _dataset\n      } = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {\n      showLine\n    } = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {\n      startAngle,\n      endAngle\n    } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {\n      angle\n    } = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    });\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {}\n}\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {\n    plugins,\n    localIds\n  };\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, _ref2, options, all) {\n  let {\n    plugins,\n    localIds\n  } = _ref2;\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {\n        plugin,\n        local: localIds[id]\n      }, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, _ref3, opts, context) {\n  let {\n    plugin,\n    local\n  } = _ref3;\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n  return false;\n}\nvar version = \"3.9.1\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {\n      _active,\n      _lastEvent\n    } = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {\n      _hiddenIndices\n    } = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {\n      method,\n      start,\n      count\n    } of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n      method: a[1],\n      start: +a[2],\n      count: +a[3]\n    }));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {\n      canvas,\n      ctx\n    } = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, type => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(_ref4 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref4;\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: function () {\n      registry.add(...arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: function () {\n      registry.remove(...arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {\n    options\n  } = element;\n  const {\n    borderWidth,\n    borderJoinStyle\n  } = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return betweenAngles && withinRadius;\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start,\n    count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property,\n    start,\n    end\n  };\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(_ref5 => {\n    let {\n      start,\n      end\n    } = _ref5;\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction _buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first,\n    last,\n    point\n  };\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction _getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {\n    segments,\n    points\n  } = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {\n      start,\n      end\n    } = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {\n      move: lineLoop\n    });\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n  const segments = _segments(line, target, property);\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this.chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(_ref6 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref6;\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    let inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart,\n        options\n      });\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {\n        index,\n        label\n      } of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref7) {\n  let {\n    horizontal,\n    minRotation\n  } = _ref7;\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    }).filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    let additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {\n      min,\n      max\n    };\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return this._cache.data = this.normalize(timestamps);\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","_getStartAndCountOfVisiblePoints","w","_scaleRangesChanged","x","isNumber","y","_parseObjectDataRadialScale","z","log10","A","_factorize","B","finiteOrDefault","C","callback","D","_addGrace","E","_limitValue","F","toDegrees","G","_measureText","I","_int16Range","J","_alignPixel","K","toPadding","L","clipArea","M","renderText","N","unclipArea","O","toFont","Q","each","R","_toLeftRightCenter","S","_alignStartEnd","U","overrides","V","merge","W","_capitalize","X","getRelativePosition","Y","_rlookupByKey","Z","_lookupByKey","$","_isPointInArea","a0","getAngleFromPoint","a1","getMaximumSize","a2","_getParentNode","a3","readUsedSize","a4","throttled","a5","supportsEventListenerOptions","a6","_isDomSupported","a7","descriptors","a8","isFunction","a9","_attachContext","aa","_createResolver","ab","_descriptors","ac","mergeIf","ad","uid","ae","debounce","af","retinaScale","ag","clearCanvas","ah","setsEqual","ai","_elementsEqual","aj","_isClickEvent","ak","_isBetween","al","_readValueToProps","am","_updateBezierControlPoints","an","_computeSegments","ao","_boundSegments","ap","_steppedInterpolation","aq","_bezierInterpolation","ar","_pointInLine","as","_steppedLineTo","at","_bezierCurveTo","au","drawPoint","av","addRoundedRectPath","aw","toTRBL","ax","toTRBLCorners","ay","_boundSegment","az","_normalizeAngle","aA","getRtlAdapter","aB","overrideTextDirection","aC","_textX","aD","restoreTextDirection","aE","drawPointLegend","aF","noop","aG","distanceBetweenPoints","aH","_setMinAndMaxByKey","aI","niceNum","aJ","almostWhole","aK","almostEquals","aL","_decimalPlaces","aM","_longestText","aN","_filterBetween","aO","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","call","window","_update","arguments","length","Date","now","remaining","running","items","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","visibleMetas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","_ref","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","Element","tooltipPosition","useFinalPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","format","logarithmic","pow","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","position","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","sqrt","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","_layers","tz","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","Error","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","ScatterController","interaction","__proto__","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","el","getRange","lo","hi","evaluateInteractionItems","handler","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","getIntersectItems","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","_ref2","pluginOpts","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_ref5","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_ref7","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\r\n * Chart.js v3.9.1\r\n * https://www.chartjs.org\r\n * (c) 2022 Chart.js Contributors\r\n * Released under the MIT License\r\n */\r\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\r\nexport { d as defaults } from './chunks/helpers.segment.mjs';\r\n\r\nclass Animator {\r\n  constructor() {\r\n    this._request = null;\r\n    this._charts = new Map();\r\n    this._running = false;\r\n    this._lastDate = undefined;\r\n  }\r\n  _notify(chart, anims, date, type) {\r\n    const callbacks = anims.listeners[type];\r\n    const numSteps = anims.duration;\r\n    callbacks.forEach(fn => fn({\r\n      chart,\r\n      initial: anims.initial,\r\n      numSteps,\r\n      currentStep: Math.min(date - anims.start, numSteps)\r\n    }));\r\n  }\r\n  _refresh() {\r\n    if (this._request) {\r\n      return;\r\n    }\r\n    this._running = true;\r\n    this._request = requestAnimFrame.call(window, () => {\r\n      this._update();\r\n      this._request = null;\r\n      if (this._running) {\r\n        this._refresh();\r\n      }\r\n    });\r\n  }\r\n  _update(date = Date.now()) {\r\n    let remaining = 0;\r\n    this._charts.forEach((anims, chart) => {\r\n      if (!anims.running || !anims.items.length) {\r\n        return;\r\n      }\r\n      const items = anims.items;\r\n      let i = items.length - 1;\r\n      let draw = false;\r\n      let item;\r\n      for (; i >= 0; --i) {\r\n        item = items[i];\r\n        if (item._active) {\r\n          if (item._total > anims.duration) {\r\n            anims.duration = item._total;\r\n          }\r\n          item.tick(date);\r\n          draw = true;\r\n        } else {\r\n          items[i] = items[items.length - 1];\r\n          items.pop();\r\n        }\r\n      }\r\n      if (draw) {\r\n        chart.draw();\r\n        this._notify(chart, anims, date, 'progress');\r\n      }\r\n      if (!items.length) {\r\n        anims.running = false;\r\n        this._notify(chart, anims, date, 'complete');\r\n        anims.initial = false;\r\n      }\r\n      remaining += items.length;\r\n    });\r\n    this._lastDate = date;\r\n    if (remaining === 0) {\r\n      this._running = false;\r\n    }\r\n  }\r\n  _getAnims(chart) {\r\n    const charts = this._charts;\r\n    let anims = charts.get(chart);\r\n    if (!anims) {\r\n      anims = {\r\n        running: false,\r\n        initial: true,\r\n        items: [],\r\n        listeners: {\r\n          complete: [],\r\n          progress: []\r\n        }\r\n      };\r\n      charts.set(chart, anims);\r\n    }\r\n    return anims;\r\n  }\r\n  listen(chart, event, cb) {\r\n    this._getAnims(chart).listeners[event].push(cb);\r\n  }\r\n  add(chart, items) {\r\n    if (!items || !items.length) {\r\n      return;\r\n    }\r\n    this._getAnims(chart).items.push(...items);\r\n  }\r\n  has(chart) {\r\n    return this._getAnims(chart).items.length > 0;\r\n  }\r\n  start(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims) {\r\n      return;\r\n    }\r\n    anims.running = true;\r\n    anims.start = Date.now();\r\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\r\n    this._refresh();\r\n  }\r\n  running(chart) {\r\n    if (!this._running) {\r\n      return false;\r\n    }\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.running || !anims.items.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  stop(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.items.length) {\r\n      return;\r\n    }\r\n    const items = anims.items;\r\n    let i = items.length - 1;\r\n    for (; i >= 0; --i) {\r\n      items[i].cancel();\r\n    }\r\n    anims.items = [];\r\n    this._notify(chart, anims, Date.now(), 'complete');\r\n  }\r\n  remove(chart) {\r\n    return this._charts.delete(chart);\r\n  }\r\n}\r\nvar animator = new Animator();\r\n\r\nconst transparent = 'transparent';\r\nconst interpolators = {\r\n  boolean(from, to, factor) {\r\n    return factor > 0.5 ? to : from;\r\n  },\r\n  color(from, to, factor) {\r\n    const c0 = color(from || transparent);\r\n    const c1 = c0.valid && color(to || transparent);\r\n    return c1 && c1.valid\r\n      ? c1.mix(c0, factor).hexString()\r\n      : to;\r\n  },\r\n  number(from, to, factor) {\r\n    return from + (to - from) * factor;\r\n  }\r\n};\r\nclass Animation {\r\n  constructor(cfg, target, prop, to) {\r\n    const currentValue = target[prop];\r\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n    const from = resolve([cfg.from, currentValue, to]);\r\n    this._active = true;\r\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n    this._easing = effects[cfg.easing] || effects.linear;\r\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n    this._duration = this._total = Math.floor(cfg.duration);\r\n    this._loop = !!cfg.loop;\r\n    this._target = target;\r\n    this._prop = prop;\r\n    this._from = from;\r\n    this._to = to;\r\n    this._promises = undefined;\r\n  }\r\n  active() {\r\n    return this._active;\r\n  }\r\n  update(cfg, to, date) {\r\n    if (this._active) {\r\n      this._notify(false);\r\n      const currentValue = this._target[this._prop];\r\n      const elapsed = date - this._start;\r\n      const remain = this._duration - elapsed;\r\n      this._start = date;\r\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\r\n      this._total += elapsed;\r\n      this._loop = !!cfg.loop;\r\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n      this._from = resolve([cfg.from, currentValue, to]);\r\n    }\r\n  }\r\n  cancel() {\r\n    if (this._active) {\r\n      this.tick(Date.now());\r\n      this._active = false;\r\n      this._notify(false);\r\n    }\r\n  }\r\n  tick(date) {\r\n    const elapsed = date - this._start;\r\n    const duration = this._duration;\r\n    const prop = this._prop;\r\n    const from = this._from;\r\n    const loop = this._loop;\r\n    const to = this._to;\r\n    let factor;\r\n    this._active = from !== to && (loop || (elapsed < duration));\r\n    if (!this._active) {\r\n      this._target[prop] = to;\r\n      this._notify(true);\r\n      return;\r\n    }\r\n    if (elapsed < 0) {\r\n      this._target[prop] = from;\r\n      return;\r\n    }\r\n    factor = (elapsed / duration) % 2;\r\n    factor = loop && factor > 1 ? 2 - factor : factor;\r\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\r\n    this._target[prop] = this._fn(from, to, factor);\r\n  }\r\n  wait() {\r\n    const promises = this._promises || (this._promises = []);\r\n    return new Promise((res, rej) => {\r\n      promises.push({res, rej});\r\n    });\r\n  }\r\n  _notify(resolved) {\r\n    const method = resolved ? 'res' : 'rej';\r\n    const promises = this._promises || [];\r\n    for (let i = 0; i < promises.length; i++) {\r\n      promises[i][method]();\r\n    }\r\n  }\r\n}\r\n\r\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\nconst colors = ['color', 'borderColor', 'backgroundColor'];\r\ndefaults.set('animation', {\r\n  delay: undefined,\r\n  duration: 1000,\r\n  easing: 'easeOutQuart',\r\n  fn: undefined,\r\n  from: undefined,\r\n  loop: undefined,\r\n  to: undefined,\r\n  type: undefined,\r\n});\r\nconst animationOptions = Object.keys(defaults.animation);\r\ndefaults.describe('animation', {\r\n  _fallback: false,\r\n  _indexable: false,\r\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n});\r\ndefaults.set('animations', {\r\n  colors: {\r\n    type: 'color',\r\n    properties: colors\r\n  },\r\n  numbers: {\r\n    type: 'number',\r\n    properties: numbers\r\n  },\r\n});\r\ndefaults.describe('animations', {\r\n  _fallback: 'animation',\r\n});\r\ndefaults.set('transitions', {\r\n  active: {\r\n    animation: {\r\n      duration: 400\r\n    }\r\n  },\r\n  resize: {\r\n    animation: {\r\n      duration: 0\r\n    }\r\n  },\r\n  show: {\r\n    animations: {\r\n      colors: {\r\n        from: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        duration: 0\r\n      },\r\n    }\r\n  },\r\n  hide: {\r\n    animations: {\r\n      colors: {\r\n        to: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        easing: 'linear',\r\n        fn: v => v | 0\r\n      },\r\n    }\r\n  }\r\n});\r\nclass Animations {\r\n  constructor(chart, config) {\r\n    this._chart = chart;\r\n    this._properties = new Map();\r\n    this.configure(config);\r\n  }\r\n  configure(config) {\r\n    if (!isObject(config)) {\r\n      return;\r\n    }\r\n    const animatedProps = this._properties;\r\n    Object.getOwnPropertyNames(config).forEach(key => {\r\n      const cfg = config[key];\r\n      if (!isObject(cfg)) {\r\n        return;\r\n      }\r\n      const resolved = {};\r\n      for (const option of animationOptions) {\r\n        resolved[option] = cfg[option];\r\n      }\r\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\r\n        if (prop === key || !animatedProps.has(prop)) {\r\n          animatedProps.set(prop, resolved);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  _animateOptions(target, values) {\r\n    const newOptions = values.options;\r\n    const options = resolveTargetOptions(target, newOptions);\r\n    if (!options) {\r\n      return [];\r\n    }\r\n    const animations = this._createAnimations(options, newOptions);\r\n    if (newOptions.$shared) {\r\n      awaitAll(target.options.$animations, newOptions).then(() => {\r\n        target.options = newOptions;\r\n      }, () => {\r\n      });\r\n    }\r\n    return animations;\r\n  }\r\n  _createAnimations(target, values) {\r\n    const animatedProps = this._properties;\r\n    const animations = [];\r\n    const running = target.$animations || (target.$animations = {});\r\n    const props = Object.keys(values);\r\n    const date = Date.now();\r\n    let i;\r\n    for (i = props.length - 1; i >= 0; --i) {\r\n      const prop = props[i];\r\n      if (prop.charAt(0) === '$') {\r\n        continue;\r\n      }\r\n      if (prop === 'options') {\r\n        animations.push(...this._animateOptions(target, values));\r\n        continue;\r\n      }\r\n      const value = values[prop];\r\n      let animation = running[prop];\r\n      const cfg = animatedProps.get(prop);\r\n      if (animation) {\r\n        if (cfg && animation.active()) {\r\n          animation.update(cfg, value, date);\r\n          continue;\r\n        } else {\r\n          animation.cancel();\r\n        }\r\n      }\r\n      if (!cfg || !cfg.duration) {\r\n        target[prop] = value;\r\n        continue;\r\n      }\r\n      running[prop] = animation = new Animation(cfg, target, prop, value);\r\n      animations.push(animation);\r\n    }\r\n    return animations;\r\n  }\r\n  update(target, values) {\r\n    if (this._properties.size === 0) {\r\n      Object.assign(target, values);\r\n      return;\r\n    }\r\n    const animations = this._createAnimations(target, values);\r\n    if (animations.length) {\r\n      animator.add(this._chart, animations);\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction awaitAll(animations, properties) {\r\n  const running = [];\r\n  const keys = Object.keys(properties);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const anim = animations[keys[i]];\r\n    if (anim && anim.active()) {\r\n      running.push(anim.wait());\r\n    }\r\n  }\r\n  return Promise.all(running);\r\n}\r\nfunction resolveTargetOptions(target, newOptions) {\r\n  if (!newOptions) {\r\n    return;\r\n  }\r\n  let options = target.options;\r\n  if (!options) {\r\n    target.options = newOptions;\r\n    return;\r\n  }\r\n  if (options.$shared) {\r\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\r\n  }\r\n  return options;\r\n}\r\n\r\nfunction scaleClip(scale, allowedOverflow) {\r\n  const opts = scale && scale.options || {};\r\n  const reverse = opts.reverse;\r\n  const min = opts.min === undefined ? allowedOverflow : 0;\r\n  const max = opts.max === undefined ? allowedOverflow : 0;\r\n  return {\r\n    start: reverse ? max : min,\r\n    end: reverse ? min : max\r\n  };\r\n}\r\nfunction defaultClip(xScale, yScale, allowedOverflow) {\r\n  if (allowedOverflow === false) {\r\n    return false;\r\n  }\r\n  const x = scaleClip(xScale, allowedOverflow);\r\n  const y = scaleClip(yScale, allowedOverflow);\r\n  return {\r\n    top: y.end,\r\n    right: x.end,\r\n    bottom: y.start,\r\n    left: x.start\r\n  };\r\n}\r\nfunction toClip(value) {\r\n  let t, r, b, l;\r\n  if (isObject(value)) {\r\n    t = value.top;\r\n    r = value.right;\r\n    b = value.bottom;\r\n    l = value.left;\r\n  } else {\r\n    t = r = b = l = value;\r\n  }\r\n  return {\r\n    top: t,\r\n    right: r,\r\n    bottom: b,\r\n    left: l,\r\n    disabled: value === false\r\n  };\r\n}\r\nfunction getSortedDatasetIndices(chart, filterVisible) {\r\n  const keys = [];\r\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n  let i, ilen;\r\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    keys.push(metasets[i].index);\r\n  }\r\n  return keys;\r\n}\r\nfunction applyStack(stack, value, dsIndex, options = {}) {\r\n  const keys = stack.keys;\r\n  const singleMode = options.mode === 'single';\r\n  let i, ilen, datasetIndex, otherValue;\r\n  if (value === null) {\r\n    return;\r\n  }\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    datasetIndex = +keys[i];\r\n    if (datasetIndex === dsIndex) {\r\n      if (options.all) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    otherValue = stack.values[datasetIndex];\r\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\r\n      value += otherValue;\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction convertObjectDataToArray(data) {\r\n  const keys = Object.keys(data);\r\n  const adata = new Array(keys.length);\r\n  let i, ilen, key;\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    key = keys[i];\r\n    adata[i] = {\r\n      x: key,\r\n      y: data[key]\r\n    };\r\n  }\r\n  return adata;\r\n}\r\nfunction isStacked(scale, meta) {\r\n  const stacked = scale && scale.options.stacked;\r\n  return stacked || (stacked === undefined && meta.stack !== undefined);\r\n}\r\nfunction getStackKey(indexScale, valueScale, meta) {\r\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\r\n}\r\nfunction getUserBounds(scale) {\r\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\r\n  return {\r\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n  };\r\n}\r\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\r\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n  return subStack[indexValue] || (subStack[indexValue] = {});\r\n}\r\nfunction getLastIndexInStack(stack, vScale, positive, type) {\r\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\r\n    const value = stack[meta.index];\r\n    if ((positive && value > 0) || (!positive && value < 0)) {\r\n      return meta.index;\r\n    }\r\n  }\r\n  return null;\r\n}\r\nfunction updateStacks(controller, parsed) {\r\n  const {chart, _cachedMeta: meta} = controller;\r\n  const stacks = chart._stacks || (chart._stacks = {});\r\n  const {iScale, vScale, index: datasetIndex} = meta;\r\n  const iAxis = iScale.axis;\r\n  const vAxis = vScale.axis;\r\n  const key = getStackKey(iScale, vScale, meta);\r\n  const ilen = parsed.length;\r\n  let stack;\r\n  for (let i = 0; i < ilen; ++i) {\r\n    const item = parsed[i];\r\n    const {[iAxis]: index, [vAxis]: value} = item;\r\n    const itemStacks = item._stacks || (item._stacks = {});\r\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n    stack[datasetIndex] = value;\r\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\r\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\r\n  }\r\n}\r\nfunction getFirstScaleId(chart, axis) {\r\n  const scales = chart.scales;\r\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\r\n}\r\nfunction createDatasetContext(parent, index) {\r\n  return createContext(parent,\r\n    {\r\n      active: false,\r\n      dataset: undefined,\r\n      datasetIndex: index,\r\n      index,\r\n      mode: 'default',\r\n      type: 'dataset'\r\n    }\r\n  );\r\n}\r\nfunction createDataContext(parent, index, element) {\r\n  return createContext(parent, {\r\n    active: false,\r\n    dataIndex: index,\r\n    parsed: undefined,\r\n    raw: undefined,\r\n    element,\r\n    index,\r\n    mode: 'default',\r\n    type: 'data'\r\n  });\r\n}\r\nfunction clearStacks(meta, items) {\r\n  const datasetIndex = meta.controller.index;\r\n  const axis = meta.vScale && meta.vScale.axis;\r\n  if (!axis) {\r\n    return;\r\n  }\r\n  items = items || meta._parsed;\r\n  for (const parsed of items) {\r\n    const stacks = parsed._stacks;\r\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\r\n      return;\r\n    }\r\n    delete stacks[axis][datasetIndex];\r\n  }\r\n}\r\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\r\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\r\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\r\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\r\nclass DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    this.chart = chart;\r\n    this._ctx = chart.ctx;\r\n    this.index = datasetIndex;\r\n    this._cachedDataOpts = {};\r\n    this._cachedMeta = this.getMeta();\r\n    this._type = this._cachedMeta.type;\r\n    this.options = undefined;\r\n    this._parsing = false;\r\n    this._data = undefined;\r\n    this._objectData = undefined;\r\n    this._sharedOptions = undefined;\r\n    this._drawStart = undefined;\r\n    this._drawCount = undefined;\r\n    this.enableOptionSharing = false;\r\n    this.supportsDecimation = false;\r\n    this.$context = undefined;\r\n    this._syncList = [];\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    const meta = this._cachedMeta;\r\n    this.configure();\r\n    this.linkScales();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    this.addElements();\r\n  }\r\n  updateIndex(datasetIndex) {\r\n    if (this.index !== datasetIndex) {\r\n      clearStacks(this._cachedMeta);\r\n    }\r\n    this.index = datasetIndex;\r\n  }\r\n  linkScales() {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\r\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n    const indexAxis = meta.indexAxis;\r\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n    meta.xScale = this.getScaleForId(xid);\r\n    meta.yScale = this.getScaleForId(yid);\r\n    meta.rScale = this.getScaleForId(rid);\r\n    meta.iScale = this.getScaleForId(iid);\r\n    meta.vScale = this.getScaleForId(vid);\r\n  }\r\n  getDataset() {\r\n    return this.chart.data.datasets[this.index];\r\n  }\r\n  getMeta() {\r\n    return this.chart.getDatasetMeta(this.index);\r\n  }\r\n  getScaleForId(scaleID) {\r\n    return this.chart.scales[scaleID];\r\n  }\r\n  _getOtherScale(scale) {\r\n    const meta = this._cachedMeta;\r\n    return scale === meta.iScale\r\n      ? meta.vScale\r\n      : meta.iScale;\r\n  }\r\n  reset() {\r\n    this._update('reset');\r\n  }\r\n  _destroy() {\r\n    const meta = this._cachedMeta;\r\n    if (this._data) {\r\n      unlistenArrayEvents(this._data, this);\r\n    }\r\n    if (meta._stacked) {\r\n      clearStacks(meta);\r\n    }\r\n  }\r\n  _dataCheck() {\r\n    const dataset = this.getDataset();\r\n    const data = dataset.data || (dataset.data = []);\r\n    const _data = this._data;\r\n    if (isObject(data)) {\r\n      this._data = convertObjectDataToArray(data);\r\n    } else if (_data !== data) {\r\n      if (_data) {\r\n        unlistenArrayEvents(_data, this);\r\n        const meta = this._cachedMeta;\r\n        clearStacks(meta);\r\n        meta._parsed = [];\r\n      }\r\n      if (data && Object.isExtensible(data)) {\r\n        listenArrayEvents(data, this);\r\n      }\r\n      this._syncList = [];\r\n      this._data = data;\r\n    }\r\n  }\r\n  addElements() {\r\n    const meta = this._cachedMeta;\r\n    this._dataCheck();\r\n    if (this.datasetElementType) {\r\n      meta.dataset = new this.datasetElementType();\r\n    }\r\n  }\r\n  buildOrUpdateElements(resetNewElements) {\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    let stackChanged = false;\r\n    this._dataCheck();\r\n    const oldStacked = meta._stacked;\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    if (meta.stack !== dataset.stack) {\r\n      stackChanged = true;\r\n      clearStacks(meta);\r\n      meta.stack = dataset.stack;\r\n    }\r\n    this._resyncElements(resetNewElements);\r\n    if (stackChanged || oldStacked !== meta._stacked) {\r\n      updateStacks(this, meta._parsed);\r\n    }\r\n  }\r\n  configure() {\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetScopeKeys(this._type);\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\r\n    this.options = config.createResolver(scopes, this.getContext());\r\n    this._parsing = this.options.parsing;\r\n    this._cachedDataOpts = {};\r\n  }\r\n  parse(start, count) {\r\n    const {_cachedMeta: meta, _data: data} = this;\r\n    const {iScale, _stacked} = meta;\r\n    const iAxis = iScale.axis;\r\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n    let prev = start > 0 && meta._parsed[start - 1];\r\n    let i, cur, parsed;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n      meta._sorted = true;\r\n      parsed = data;\r\n    } else {\r\n      if (isArray(data[start])) {\r\n        parsed = this.parseArrayData(meta, data, start, count);\r\n      } else if (isObject(data[start])) {\r\n        parsed = this.parseObjectData(meta, data, start, count);\r\n      } else {\r\n        parsed = this.parsePrimitiveData(meta, data, start, count);\r\n      }\r\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\r\n      for (i = 0; i < count; ++i) {\r\n        meta._parsed[i + start] = cur = parsed[i];\r\n        if (sorted) {\r\n          if (isNotInOrderComparedToPrev()) {\r\n            sorted = false;\r\n          }\r\n          prev = cur;\r\n        }\r\n      }\r\n      meta._sorted = sorted;\r\n    }\r\n    if (_stacked) {\r\n      updateStacks(this, parsed);\r\n    }\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const labels = iScale.getLabels();\r\n    const singleScale = iScale === vScale;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      parsed[i] = {\r\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n        [vAxis]: vScale.parse(data[index], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(item[0], index),\r\n        y: yScale.parse(item[1], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  getParsed(index) {\r\n    return this._cachedMeta._parsed[index];\r\n  }\r\n  getDataElement(index) {\r\n    return this._cachedMeta.data[index];\r\n  }\r\n  applyStack(scale, parsed, mode) {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const value = parsed[scale.axis];\r\n    const stack = {\r\n      keys: getSortedDatasetIndices(chart, true),\r\n      values: parsed._stacks[scale.axis]\r\n    };\r\n    return applyStack(stack, value, meta.index, {mode});\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    const parsedValue = parsed[scale.axis];\r\n    let value = parsedValue === null ? NaN : parsedValue;\r\n    const values = stack && parsed._stacks[scale.axis];\r\n    if (stack && values) {\r\n      stack.values = values;\r\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\r\n    }\r\n    range.min = Math.min(range.min, value);\r\n    range.max = Math.max(range.max, value);\r\n  }\r\n  getMinMax(scale, canStack) {\r\n    const meta = this._cachedMeta;\r\n    const _parsed = meta._parsed;\r\n    const sorted = meta._sorted && scale === meta.iScale;\r\n    const ilen = _parsed.length;\r\n    const otherScale = this._getOtherScale(scale);\r\n    const stack = createStack(canStack, meta, this.chart);\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\r\n    let i, parsed;\r\n    function _skip() {\r\n      parsed = _parsed[i];\r\n      const otherValue = parsed[otherScale.axis];\r\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\r\n    }\r\n    for (i = 0; i < ilen; ++i) {\r\n      if (_skip()) {\r\n        continue;\r\n      }\r\n      this.updateRangeFromParsed(range, scale, parsed, stack);\r\n      if (sorted) {\r\n        break;\r\n      }\r\n    }\r\n    if (sorted) {\r\n      for (i = ilen - 1; i >= 0; --i) {\r\n        if (_skip()) {\r\n          continue;\r\n        }\r\n        this.updateRangeFromParsed(range, scale, parsed, stack);\r\n        break;\r\n      }\r\n    }\r\n    return range;\r\n  }\r\n  getAllParsedValues(scale) {\r\n    const parsed = this._cachedMeta._parsed;\r\n    const values = [];\r\n    let i, ilen, value;\r\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\r\n      value = parsed[i][scale.axis];\r\n      if (isNumberFinite(value)) {\r\n        values.push(value);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n  getMaxOverflow() {\r\n    return false;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const vScale = meta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n    };\r\n  }\r\n  _update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.update(mode || 'default');\r\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\r\n  }\r\n  update(mode) {}\r\n  draw() {\r\n    const ctx = this._ctx;\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const elements = meta.data || [];\r\n    const area = chart.chartArea;\r\n    const active = [];\r\n    const start = this._drawStart || 0;\r\n    const count = this._drawCount || (elements.length - start);\r\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\r\n    let i;\r\n    if (meta.dataset) {\r\n      meta.dataset.draw(ctx, area, start, count);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const element = elements[i];\r\n      if (element.hidden) {\r\n        continue;\r\n      }\r\n      if (element.active && drawActiveElementsOnTop) {\r\n        active.push(element);\r\n      } else {\r\n        element.draw(ctx, area);\r\n      }\r\n    }\r\n    for (i = 0; i < active.length; ++i) {\r\n      active[i].draw(ctx, area);\r\n    }\r\n  }\r\n  getStyle(index, active) {\r\n    const mode = active ? 'active' : 'default';\r\n    return index === undefined && this._cachedMeta.dataset\r\n      ? this.resolveDatasetElementOptions(mode)\r\n      : this.resolveDataElementOptions(index || 0, mode);\r\n  }\r\n  getContext(index, active, mode) {\r\n    const dataset = this.getDataset();\r\n    let context;\r\n    if (index >= 0 && index < this._cachedMeta.data.length) {\r\n      const element = this._cachedMeta.data[index];\r\n      context = element.$context ||\r\n        (element.$context = createDataContext(this.getContext(), index, element));\r\n      context.parsed = this.getParsed(index);\r\n      context.raw = dataset.data[index];\r\n      context.index = context.dataIndex = index;\r\n    } else {\r\n      context = this.$context ||\r\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\r\n      context.dataset = dataset;\r\n      context.index = context.datasetIndex = this.index;\r\n    }\r\n    context.active = !!active;\r\n    context.mode = mode;\r\n    return context;\r\n  }\r\n  resolveDatasetElementOptions(mode) {\r\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n  }\r\n  _resolveElementOptions(elementType, mode = 'default', index) {\r\n    const active = mode === 'active';\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = elementType + '-' + mode;\r\n    const cached = cache[cacheKey];\r\n    const sharing = this.enableOptionSharing && defined(index);\r\n    if (cached) {\r\n      return cloneIfNotShared(cached, sharing);\r\n    }\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\r\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n    const names = Object.keys(defaults.elements[elementType]);\r\n    const context = () => this.getContext(index, active);\r\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n    if (values.$shared) {\r\n      values.$shared = sharing;\r\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n    }\r\n    return values;\r\n  }\r\n  _resolveAnimations(index, transition, active) {\r\n    const chart = this.chart;\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = `animation-${transition}`;\r\n    const cached = cache[cacheKey];\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    let options;\r\n    if (chart.options.animation !== false) {\r\n      const config = this.chart.config;\r\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\r\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\r\n    }\r\n    const animations = new Animations(chart, options && options.animations);\r\n    if (options && options._cacheable) {\r\n      cache[cacheKey] = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getSharedOptions(options) {\r\n    if (!options.$shared) {\r\n      return;\r\n    }\r\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n  }\r\n  includeOptions(mode, sharedOptions) {\r\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n  }\r\n  _getSharedOptions(start, mode) {\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const previouslySharedOptions = this._sharedOptions;\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n    return {sharedOptions, includeOptions};\r\n  }\r\n  updateElement(element, index, properties, mode) {\r\n    if (isDirectUpdateMode(mode)) {\r\n      Object.assign(element, properties);\r\n    } else {\r\n      this._resolveAnimations(index, mode).update(element, properties);\r\n    }\r\n  }\r\n  updateSharedOptions(sharedOptions, mode, newOptions) {\r\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n    }\r\n  }\r\n  _setStyle(element, index, mode, active) {\r\n    element.active = active;\r\n    const options = this.getStyle(index, active);\r\n    this._resolveAnimations(index, mode, active).update(element, {\r\n      options: (!active && this.getSharedOptions(options)) || options\r\n    });\r\n  }\r\n  removeHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', false);\r\n  }\r\n  setHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', true);\r\n  }\r\n  _removeDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', false);\r\n    }\r\n  }\r\n  _setDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', true);\r\n    }\r\n  }\r\n  _resyncElements(resetNewElements) {\r\n    const data = this._data;\r\n    const elements = this._cachedMeta.data;\r\n    for (const [method, arg1, arg2] of this._syncList) {\r\n      this[method](arg1, arg2);\r\n    }\r\n    this._syncList = [];\r\n    const numMeta = elements.length;\r\n    const numData = data.length;\r\n    const count = Math.min(numData, numMeta);\r\n    if (count) {\r\n      this.parse(0, count);\r\n    }\r\n    if (numData > numMeta) {\r\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n    } else if (numData < numMeta) {\r\n      this._removeElements(numData, numMeta - numData);\r\n    }\r\n  }\r\n  _insertElements(start, count, resetNewElements = true) {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data;\r\n    const end = start + count;\r\n    let i;\r\n    const move = (arr) => {\r\n      arr.length += count;\r\n      for (i = arr.length - 1; i >= end; i--) {\r\n        arr[i] = arr[i - count];\r\n      }\r\n    };\r\n    move(data);\r\n    for (i = start; i < end; ++i) {\r\n      data[i] = new this.dataElementType();\r\n    }\r\n    if (this._parsing) {\r\n      move(meta._parsed);\r\n    }\r\n    this.parse(start, count);\r\n    if (resetNewElements) {\r\n      this.updateElements(data, start, count, 'reset');\r\n    }\r\n  }\r\n  updateElements(element, start, count, mode) {}\r\n  _removeElements(start, count) {\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing) {\r\n      const removed = meta._parsed.splice(start, count);\r\n      if (meta._stacked) {\r\n        clearStacks(meta, removed);\r\n      }\r\n    }\r\n    meta.data.splice(start, count);\r\n  }\r\n  _sync(args) {\r\n    if (this._parsing) {\r\n      this._syncList.push(args);\r\n    } else {\r\n      const [method, arg1, arg2] = args;\r\n      this[method](arg1, arg2);\r\n    }\r\n    this.chart._dataChanges.push([this.index, ...args]);\r\n  }\r\n  _onDataPush() {\r\n    const count = arguments.length;\r\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\r\n  }\r\n  _onDataPop() {\r\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\r\n  }\r\n  _onDataShift() {\r\n    this._sync(['_removeElements', 0, 1]);\r\n  }\r\n  _onDataSplice(start, count) {\r\n    if (count) {\r\n      this._sync(['_removeElements', start, count]);\r\n    }\r\n    const newCount = arguments.length - 2;\r\n    if (newCount) {\r\n      this._sync(['_insertElements', start, newCount]);\r\n    }\r\n  }\r\n  _onDataUnshift() {\r\n    this._sync(['_insertElements', 0, arguments.length]);\r\n  }\r\n}\r\nDatasetController.defaults = {};\r\nDatasetController.prototype.datasetElementType = null;\r\nDatasetController.prototype.dataElementType = null;\r\n\r\nfunction getAllScaleValues(scale, type) {\r\n  if (!scale._cache.$bar) {\r\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\r\n    let values = [];\r\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\r\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\r\n    }\r\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\r\n  }\r\n  return scale._cache.$bar;\r\n}\r\nfunction computeMinSampleSize(meta) {\r\n  const scale = meta.iScale;\r\n  const values = getAllScaleValues(scale, meta.type);\r\n  let min = scale._length;\r\n  let i, ilen, curr, prev;\r\n  const updateMinAndPrev = () => {\r\n    if (curr === 32767 || curr === -32768) {\r\n      return;\r\n    }\r\n    if (defined(prev)) {\r\n      min = Math.min(min, Math.abs(curr - prev) || min);\r\n    }\r\n    prev = curr;\r\n  };\r\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForValue(values[i]);\r\n    updateMinAndPrev();\r\n  }\r\n  prev = undefined;\r\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForTick(i);\r\n    updateMinAndPrev();\r\n  }\r\n  return min;\r\n}\r\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n  const thickness = options.barThickness;\r\n  let size, ratio;\r\n  if (isNullOrUndef(thickness)) {\r\n    size = ruler.min * options.categoryPercentage;\r\n    ratio = options.barPercentage;\r\n  } else {\r\n    size = thickness * stackCount;\r\n    ratio = 1;\r\n  }\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio,\r\n    start: ruler.pixels[index] - (size / 2)\r\n  };\r\n}\r\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n  const pixels = ruler.pixels;\r\n  const curr = pixels[index];\r\n  let prev = index > 0 ? pixels[index - 1] : null;\r\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n  const percent = options.categoryPercentage;\r\n  if (prev === null) {\r\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n  }\r\n  if (next === null) {\r\n    next = curr + curr - prev;\r\n  }\r\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n  const size = Math.abs(next - prev) / 2 * percent;\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio: options.barPercentage,\r\n    start\r\n  };\r\n}\r\nfunction parseFloatBar(entry, item, vScale, i) {\r\n  const startValue = vScale.parse(entry[0], i);\r\n  const endValue = vScale.parse(entry[1], i);\r\n  const min = Math.min(startValue, endValue);\r\n  const max = Math.max(startValue, endValue);\r\n  let barStart = min;\r\n  let barEnd = max;\r\n  if (Math.abs(min) > Math.abs(max)) {\r\n    barStart = max;\r\n    barEnd = min;\r\n  }\r\n  item[vScale.axis] = barEnd;\r\n  item._custom = {\r\n    barStart,\r\n    barEnd,\r\n    start: startValue,\r\n    end: endValue,\r\n    min,\r\n    max\r\n  };\r\n}\r\nfunction parseValue(entry, item, vScale, i) {\r\n  if (isArray(entry)) {\r\n    parseFloatBar(entry, item, vScale, i);\r\n  } else {\r\n    item[vScale.axis] = vScale.parse(entry, i);\r\n  }\r\n  return item;\r\n}\r\nfunction parseArrayOrPrimitive(meta, data, start, count) {\r\n  const iScale = meta.iScale;\r\n  const vScale = meta.vScale;\r\n  const labels = iScale.getLabels();\r\n  const singleScale = iScale === vScale;\r\n  const parsed = [];\r\n  let i, ilen, item, entry;\r\n  for (i = start, ilen = start + count; i < ilen; ++i) {\r\n    entry = data[i];\r\n    item = {};\r\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n    parsed.push(parseValue(entry, item, vScale, i));\r\n  }\r\n  return parsed;\r\n}\r\nfunction isFloatBar(custom) {\r\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n}\r\nfunction barSign(size, vScale, actualBase) {\r\n  if (size !== 0) {\r\n    return sign(size);\r\n  }\r\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\r\n}\r\nfunction borderProps(properties) {\r\n  let reverse, start, end, top, bottom;\r\n  if (properties.horizontal) {\r\n    reverse = properties.base > properties.x;\r\n    start = 'left';\r\n    end = 'right';\r\n  } else {\r\n    reverse = properties.base < properties.y;\r\n    start = 'bottom';\r\n    end = 'top';\r\n  }\r\n  if (reverse) {\r\n    top = 'end';\r\n    bottom = 'start';\r\n  } else {\r\n    top = 'start';\r\n    bottom = 'end';\r\n  }\r\n  return {start, end, reverse, top, bottom};\r\n}\r\nfunction setBorderSkipped(properties, options, stack, index) {\r\n  let edge = options.borderSkipped;\r\n  const res = {};\r\n  if (!edge) {\r\n    properties.borderSkipped = res;\r\n    return;\r\n  }\r\n  if (edge === true) {\r\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\r\n    return;\r\n  }\r\n  const {start, end, reverse, top, bottom} = borderProps(properties);\r\n  if (edge === 'middle' && stack) {\r\n    properties.enableBorderRadius = true;\r\n    if ((stack._top || 0) === index) {\r\n      edge = top;\r\n    } else if ((stack._bottom || 0) === index) {\r\n      edge = bottom;\r\n    } else {\r\n      res[parseEdge(bottom, start, end, reverse)] = true;\r\n      edge = top;\r\n    }\r\n  }\r\n  res[parseEdge(edge, start, end, reverse)] = true;\r\n  properties.borderSkipped = res;\r\n}\r\nfunction parseEdge(edge, a, b, reverse) {\r\n  if (reverse) {\r\n    edge = swap(edge, a, b);\r\n    edge = startEnd(edge, b, a);\r\n  } else {\r\n    edge = startEnd(edge, a, b);\r\n  }\r\n  return edge;\r\n}\r\nfunction swap(orig, v1, v2) {\r\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n}\r\nfunction startEnd(v, start, end) {\r\n  return v === 'start' ? start : v === 'end' ? end : v;\r\n}\r\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\r\n  properties.inflateAmount = inflateAmount === 'auto'\r\n    ? ratio === 1 ? 0.33 : 0\r\n    : inflateAmount;\r\n}\r\nclass BarController extends DatasetController {\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const parsed = [];\r\n    let i, ilen, item, obj;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      obj = data[i];\r\n      item = {};\r\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n    }\r\n    return parsed;\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    super.updateRangeFromParsed(range, scale, parsed, stack);\r\n    const custom = parsed._custom;\r\n    if (custom && scale === this._cachedMeta.vScale) {\r\n      range.min = Math.min(range.min, custom.min);\r\n      range.max = Math.max(range.max, custom.max);\r\n    }\r\n  }\r\n  getMaxOverflow() {\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {iScale, vScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const value = isFloatBar(custom)\r\n      ? '[' + custom.start + ', ' + custom.end + ']'\r\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n    return {\r\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n      value\r\n    };\r\n  }\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n    const meta = this._cachedMeta;\r\n    meta.stack = this.getDataset().stack;\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.updateElements(meta.data, 0, meta.data.length, mode);\r\n  }\r\n  updateElements(bars, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {index, _cachedMeta: {vScale}} = this;\r\n    const base = vScale.getBasePixel();\r\n    const horizontal = vScale.isHorizontal();\r\n    const ruler = this._getRuler();\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    for (let i = start; i < start + count; i++) {\r\n      const parsed = this.getParsed(i);\r\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\r\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\r\n      const stack = (parsed._stacks || {})[vScale.axis];\r\n      const properties = {\r\n        horizontal,\r\n        base: vpixels.base,\r\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\r\n        x: horizontal ? vpixels.head : ipixels.center,\r\n        y: horizontal ? ipixels.center : vpixels.head,\r\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\r\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\r\n      }\r\n      const options = properties.options || bars[i].options;\r\n      setBorderSkipped(properties, options, stack, index);\r\n      setInflateAmount(properties, options, ruler.ratio);\r\n      this.updateElement(bars[i], i, properties, mode);\r\n    }\r\n  }\r\n  _getStacks(last, dataIndex) {\r\n    const {iScale} = this._cachedMeta;\r\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\r\n      .filter(meta => meta.controller.options.grouped);\r\n    const stacked = iScale.options.stacked;\r\n    const stacks = [];\r\n    const skipNull = (meta) => {\r\n      const parsed = meta.controller.getParsed(dataIndex);\r\n      const val = parsed && parsed[meta.vScale.axis];\r\n      if (isNullOrUndef(val) || isNaN(val)) {\r\n        return true;\r\n      }\r\n    };\r\n    for (const meta of metasets) {\r\n      if (dataIndex !== undefined && skipNull(meta)) {\r\n        continue;\r\n      }\r\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\r\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\r\n        stacks.push(meta.stack);\r\n      }\r\n      if (meta.index === last) {\r\n        break;\r\n      }\r\n    }\r\n    if (!stacks.length) {\r\n      stacks.push(undefined);\r\n    }\r\n    return stacks;\r\n  }\r\n  _getStackCount(index) {\r\n    return this._getStacks(undefined, index).length;\r\n  }\r\n  _getStackIndex(datasetIndex, name, dataIndex) {\r\n    const stacks = this._getStacks(datasetIndex, dataIndex);\r\n    const index = (name !== undefined)\r\n      ? stacks.indexOf(name)\r\n      : -1;\r\n    return (index === -1)\r\n      ? stacks.length - 1\r\n      : index;\r\n  }\r\n  _getRuler() {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const pixels = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\r\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\r\n    }\r\n    const barThickness = opts.barThickness;\r\n    const min = barThickness || computeMinSampleSize(meta);\r\n    return {\r\n      min,\r\n      pixels,\r\n      start: iScale._startPixel,\r\n      end: iScale._endPixel,\r\n      stackCount: this._getStackCount(),\r\n      scale: iScale,\r\n      grouped: opts.grouped,\r\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n    };\r\n  }\r\n  _calculateBarValuePixels(index) {\r\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\r\n    const actualBase = baseValue || 0;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const floating = isFloatBar(custom);\r\n    let value = parsed[vScale.axis];\r\n    let start = 0;\r\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\r\n    let head, size;\r\n    if (length !== value) {\r\n      start = length - value;\r\n      length = value;\r\n    }\r\n    if (floating) {\r\n      value = custom.barStart;\r\n      length = custom.barEnd - custom.barStart;\r\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n        start = 0;\r\n      }\r\n      start += value;\r\n    }\r\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n    let base = vScale.getPixelForValue(startValue);\r\n    if (this.chart.getDataVisibility(index)) {\r\n      head = vScale.getPixelForValue(start + length);\r\n    } else {\r\n      head = base;\r\n    }\r\n    size = head - base;\r\n    if (Math.abs(size) < minBarLength) {\r\n      size = barSign(size, vScale, actualBase) * minBarLength;\r\n      if (value === actualBase) {\r\n        base -= size / 2;\r\n      }\r\n      const startPixel = vScale.getPixelForDecimal(0);\r\n      const endPixel = vScale.getPixelForDecimal(1);\r\n      const min = Math.min(startPixel, endPixel);\r\n      const max = Math.max(startPixel, endPixel);\r\n      base = Math.max(Math.min(base, max), min);\r\n      head = base + size;\r\n    }\r\n    if (base === vScale.getPixelForValue(actualBase)) {\r\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\r\n      base += halfGrid;\r\n      size -= halfGrid;\r\n    }\r\n    return {\r\n      size,\r\n      base,\r\n      head,\r\n      center: head + size / 2\r\n    };\r\n  }\r\n  _calculateBarIndexPixels(index, ruler) {\r\n    const scale = ruler.scale;\r\n    const options = this.options;\r\n    const skipNull = options.skipNull;\r\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n    let center, size;\r\n    if (ruler.grouped) {\r\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\r\n      const range = options.barThickness === 'flex'\r\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\r\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\r\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\r\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n    } else {\r\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\r\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n    }\r\n    return {\r\n      base: center - size / 2,\r\n      head: center + size / 2,\r\n      center,\r\n      size\r\n    };\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    const vScale = meta.vScale;\r\n    const rects = meta.data;\r\n    const ilen = rects.length;\r\n    let i = 0;\r\n    for (; i < ilen; ++i) {\r\n      if (this.getParsed(i)[vScale.axis] !== null) {\r\n        rects[i].draw(this._ctx);\r\n      }\r\n    }\r\n  }\r\n}\r\nBarController.id = 'bar';\r\nBarController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'bar',\r\n  categoryPercentage: 0.8,\r\n  barPercentage: 0.9,\r\n  grouped: true,\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'base', 'width', 'height']\r\n    }\r\n  }\r\n};\r\nBarController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n      offset: true,\r\n      grid: {\r\n        offset: true\r\n      }\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n      beginAtZero: true,\r\n    }\r\n  }\r\n};\r\n\r\nclass BubbleController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const parsed = super.parseArrayData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const parsed = super.parseObjectData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n  getMaxOverflow() {\r\n    const data = this._cachedMeta.data;\r\n    let max = 0;\r\n    for (let i = data.length - 1; i >= 0; --i) {\r\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n    }\r\n    return max > 0 && max;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {xScale, yScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const x = xScale.getLabelForValue(parsed.x);\r\n    const y = yScale.getLabelForValue(parsed.y);\r\n    const r = parsed._custom;\r\n    return {\r\n      label: meta.label,\r\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n    };\r\n  }\r\n  update(mode) {\r\n    const points = this._cachedMeta.data;\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale} = this._cachedMeta;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const parsed = !reset && this.getParsed(i);\r\n      const properties = {};\r\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\r\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n        if (reset) {\r\n          properties.options.radius = 0;\r\n        }\r\n      }\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    const parsed = this.getParsed(index);\r\n    let values = super.resolveDataElementOptions(index, mode);\r\n    if (values.$shared) {\r\n      values = Object.assign({}, values, {$shared: false});\r\n    }\r\n    const radius = values.radius;\r\n    if (mode !== 'active') {\r\n      values.radius = 0;\r\n    }\r\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n    return values;\r\n  }\r\n}\r\nBubbleController.id = 'bubble';\r\nBubbleController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'borderWidth', 'radius']\r\n    }\r\n  }\r\n};\r\nBubbleController.overrides = {\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction getRatioAndOffset(rotation, circumference, cutout) {\r\n  let ratioX = 1;\r\n  let ratioY = 1;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n  if (circumference < TAU) {\r\n    const startAngle = rotation;\r\n    const endAngle = startAngle + circumference;\r\n    const startX = Math.cos(startAngle);\r\n    const startY = Math.sin(startAngle);\r\n    const endX = Math.cos(endAngle);\r\n    const endY = Math.sin(endAngle);\r\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n    const maxX = calcMax(0, startX, endX);\r\n    const maxY = calcMax(HALF_PI, startY, endY);\r\n    const minX = calcMin(PI, startX, endX);\r\n    const minY = calcMin(PI + HALF_PI, startY, endY);\r\n    ratioX = (maxX - minX) / 2;\r\n    ratioY = (maxY - minY) / 2;\r\n    offsetX = -(maxX + minX) / 2;\r\n    offsetY = -(maxY + minY) / 2;\r\n  }\r\n  return {ratioX, ratioY, offsetX, offsetY};\r\n}\r\nclass DoughnutController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.enableOptionSharing = true;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.offsetX = undefined;\r\n    this.offsetY = undefined;\r\n  }\r\n  linkScales() {}\r\n  parse(start, count) {\r\n    const data = this.getDataset().data;\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n    } else {\r\n      let getter = (i) => +data[i];\r\n      if (isObject(data[start])) {\r\n        const {key = 'value'} = this._parsing;\r\n        getter = (i) => +resolveObjectKey(data[i], key);\r\n      }\r\n      let i, ilen;\r\n      for (i = start, ilen = start + count; i < ilen; ++i) {\r\n        meta._parsed[i] = getter(i);\r\n      }\r\n    }\r\n  }\r\n  _getRotation() {\r\n    return toRadians(this.options.rotation - 90);\r\n  }\r\n  _getCircumference() {\r\n    return toRadians(this.options.circumference);\r\n  }\r\n  _getRotationExtents() {\r\n    let min = TAU;\r\n    let max = -TAU;\r\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        const controller = this.chart.getDatasetMeta(i).controller;\r\n        const rotation = controller._getRotation();\r\n        const circumference = controller._getCircumference();\r\n        min = Math.min(min, rotation);\r\n        max = Math.max(max, rotation + circumference);\r\n      }\r\n    }\r\n    return {\r\n      rotation: min,\r\n      circumference: max - min,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const chart = this.chart;\r\n    const {chartArea} = chart;\r\n    const meta = this._cachedMeta;\r\n    const arcs = meta.data;\r\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\r\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\r\n    const chartWeight = this._getRingWeight(this.index);\r\n    const {circumference, rotation} = this._getRotationExtents();\r\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\r\n    const maxWidth = (chartArea.width - spacing) / ratioX;\r\n    const maxHeight = (chartArea.height - spacing) / ratioY;\r\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n    const outerRadius = toDimension(this.options.radius, maxRadius);\r\n    const innerRadius = Math.max(outerRadius * cutout, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\r\n    this.offsetX = offsetX * outerRadius;\r\n    this.offsetY = offsetY * outerRadius;\r\n    meta.total = this.calculateTotal();\r\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\r\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _circumference(i, reset) {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const circumference = this._getCircumference();\r\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\r\n      return 0;\r\n    }\r\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const centerX = (chartArea.left + chartArea.right) / 2;\r\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n    const animateScale = reset && animationOpts.animateScale;\r\n    const innerRadius = animateScale ? 0 : this.innerRadius;\r\n    const outerRadius = animateScale ? 0 : this.outerRadius;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    let startAngle = this._getRotation();\r\n    let i;\r\n    for (i = 0; i < start; ++i) {\r\n      startAngle += this._circumference(i, reset);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const circumference = this._circumference(i, reset);\r\n      const arc = arcs[i];\r\n      const properties = {\r\n        x: centerX + this.offsetX,\r\n        y: centerY + this.offsetY,\r\n        startAngle,\r\n        endAngle: startAngle + circumference,\r\n        circumference,\r\n        outerRadius,\r\n        innerRadius\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\r\n      }\r\n      startAngle += circumference;\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  calculateTotal() {\r\n    const meta = this._cachedMeta;\r\n    const metaData = meta.data;\r\n    let total = 0;\r\n    let i;\r\n    for (i = 0; i < metaData.length; i++) {\r\n      const value = meta._parsed[i];\r\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\r\n        total += Math.abs(value);\r\n      }\r\n    }\r\n    return total;\r\n  }\r\n  calculateCircumference(value) {\r\n    const total = this._cachedMeta.total;\r\n    if (total > 0 && !isNaN(value)) {\r\n      return TAU * (Math.abs(value) / total);\r\n    }\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  getMaxBorderWidth(arcs) {\r\n    let max = 0;\r\n    const chart = this.chart;\r\n    let i, ilen, meta, controller, options;\r\n    if (!arcs) {\r\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\r\n        if (chart.isDatasetVisible(i)) {\r\n          meta = chart.getDatasetMeta(i);\r\n          arcs = meta.data;\r\n          controller = meta.controller;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (!arcs) {\r\n      return 0;\r\n    }\r\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      options = controller.resolveDataElementOptions(i);\r\n      if (options.borderAlign !== 'inner') {\r\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n  getMaxOffset(arcs) {\r\n    let max = 0;\r\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      const options = this.resolveDataElementOptions(i);\r\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n    }\r\n    return max;\r\n  }\r\n  _getRingWeightOffset(datasetIndex) {\r\n    let ringWeightOffset = 0;\r\n    for (let i = 0; i < datasetIndex; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        ringWeightOffset += this._getRingWeight(i);\r\n      }\r\n    }\r\n    return ringWeightOffset;\r\n  }\r\n  _getRingWeight(datasetIndex) {\r\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n  }\r\n  _getVisibleDatasetWeightTotal() {\r\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n  }\r\n}\r\nDoughnutController.id = 'doughnut';\r\nDoughnutController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: false\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\r\n    },\r\n  },\r\n  cutout: '50%',\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%',\r\n  spacing: 0,\r\n  indexAxis: 'r',\r\n};\r\nDoughnutController.descriptors = {\r\n  _scriptable: (name) => name !== 'spacing',\r\n  _indexable: (name) => name !== 'spacing',\r\n};\r\nDoughnutController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(tooltipItem) {\r\n          let dataLabel = tooltipItem.label;\r\n          const value = ': ' + tooltipItem.formattedValue;\r\n          if (isArray(dataLabel)) {\r\n            dataLabel = dataLabel.slice();\r\n            dataLabel[0] += value;\r\n          } else {\r\n            dataLabel += value;\r\n          }\r\n          return dataLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass LineController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    this.supportsDecimation = true;\r\n    super.initialize();\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {dataset: line, data: points = [], _dataset} = meta;\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n    if (_scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    line._chart = this.chart;\r\n    line._datasetIndex = this.index;\r\n    line._decimated = !!_dataset._decimated;\r\n    line.points = points;\r\n    const options = this.resolveDatasetElementOptions(mode);\r\n    if (!this.options.showLine) {\r\n      options.borderWidth = 0;\r\n    }\r\n    options.segment = this.options.segment;\r\n    this.updateElement(line, undefined, {\r\n      animated: !animationsDisabled,\r\n      options\r\n    }, mode);\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const {spanGaps, segment} = this.options;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = this.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\r\n      if (segment) {\r\n        properties.parsed = parsed;\r\n        properties.raw = _dataset.data[i];\r\n      }\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n  }\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    const data = meta.data || [];\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\r\n    super.draw();\r\n  }\r\n}\r\nLineController.id = 'line';\r\nLineController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  showLine: true,\r\n  spanGaps: false,\r\n};\r\nLineController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n    },\r\n  }\r\n};\r\n\r\nclass PolarAreaController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\r\n  }\r\n  update(mode) {\r\n    const arcs = this._cachedMeta.data;\r\n    this._updateRadius();\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  getMinMax() {\r\n    const meta = this._cachedMeta;\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    meta.data.forEach((element, index) => {\r\n      const parsed = this.getParsed(index).r;\r\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\r\n        if (parsed < range.min) {\r\n          range.min = parsed;\r\n        }\r\n        if (parsed > range.max) {\r\n          range.max = parsed;\r\n        }\r\n      }\r\n    });\r\n    return range;\r\n  }\r\n  _updateRadius() {\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n    const outerRadius = Math.max(minSize / 2, 0);\r\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n    this.outerRadius = outerRadius - (radiusLength * this.index);\r\n    this.innerRadius = this.outerRadius - radiusLength;\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const scale = this._cachedMeta.rScale;\r\n    const centerX = scale.xCenter;\r\n    const centerY = scale.yCenter;\r\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n    let angle = datasetStartAngle;\r\n    let i;\r\n    const defaultAngle = 360 / this.countVisibleElements();\r\n    for (i = 0; i < start; ++i) {\r\n      angle += this._computeAngle(i, mode, defaultAngle);\r\n    }\r\n    for (i = start; i < start + count; i++) {\r\n      const arc = arcs[i];\r\n      let startAngle = angle;\r\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\r\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\r\n      angle = endAngle;\r\n      if (reset) {\r\n        if (animationOpts.animateScale) {\r\n          outerRadius = 0;\r\n        }\r\n        if (animationOpts.animateRotate) {\r\n          startAngle = endAngle = datasetStartAngle;\r\n        }\r\n      }\r\n      const properties = {\r\n        x: centerX,\r\n        y: centerY,\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle,\r\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\r\n      };\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  countVisibleElements() {\r\n    const meta = this._cachedMeta;\r\n    let count = 0;\r\n    meta.data.forEach((element, index) => {\r\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n  _computeAngle(index, mode, defaultAngle) {\r\n    return this.chart.getDataVisibility(index)\r\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\r\n      : 0;\r\n  }\r\n}\r\nPolarAreaController.id = 'polarArea';\r\nPolarAreaController.defaults = {\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: true\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\r\n    },\r\n  },\r\n  indexAxis: 'r',\r\n  startAngle: 0,\r\n};\r\nPolarAreaController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(context) {\r\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n      angleLines: {\r\n        display: false\r\n      },\r\n      beginAtZero: true,\r\n      grid: {\r\n        circular: true\r\n      },\r\n      pointLabels: {\r\n        display: false\r\n      },\r\n      startAngle: 0\r\n    }\r\n  }\r\n};\r\n\r\nclass PieController extends DoughnutController {\r\n}\r\nPieController.id = 'pie';\r\nPieController.defaults = {\r\n  cutout: 0,\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%'\r\n};\r\n\r\nclass RadarController extends DatasetController {\r\n  getLabelAndValue(index) {\r\n    const vScale = this._cachedMeta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: vScale.getLabels()[index],\r\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n    };\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const line = meta.dataset;\r\n    const points = meta.data || [];\r\n    const labels = meta.iScale.getLabels();\r\n    line.points = points;\r\n    if (mode !== 'resize') {\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      if (!this.options.showLine) {\r\n        options.borderWidth = 0;\r\n      }\r\n      const properties = {\r\n        _loop: true,\r\n        _fullLoop: labels.length === points.length,\r\n        options\r\n      };\r\n      this.updateElement(line, undefined, properties, mode);\r\n    }\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const scale = this._cachedMeta.rScale;\r\n    const reset = mode === 'reset';\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\r\n      const x = reset ? scale.xCenter : pointPosition.x;\r\n      const y = reset ? scale.yCenter : pointPosition.y;\r\n      const properties = {\r\n        x,\r\n        y,\r\n        angle: pointPosition.angle,\r\n        skip: isNaN(x) || isNaN(y),\r\n        options\r\n      };\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n}\r\nRadarController.id = 'radar';\r\nRadarController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  indexAxis: 'r',\r\n  showLine: true,\r\n  elements: {\r\n    line: {\r\n      fill: 'start'\r\n    }\r\n  },\r\n};\r\nRadarController.overrides = {\r\n  aspectRatio: 1,\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n    }\r\n  }\r\n};\r\n\r\nclass Element {\r\n  constructor() {\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.active = false;\r\n    this.options = undefined;\r\n    this.$animations = undefined;\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  hasValue() {\r\n    return isNumber(this.x) && isNumber(this.y);\r\n  }\r\n  getProps(props, final) {\r\n    const anims = this.$animations;\r\n    if (!final || !anims) {\r\n      return this;\r\n    }\r\n    const ret = {};\r\n    props.forEach(prop => {\r\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\r\n    });\r\n    return ret;\r\n  }\r\n}\r\nElement.defaults = {};\r\nElement.defaultRoutes = undefined;\r\n\r\nconst formatters = {\r\n  values(value) {\r\n    return isArray(value) ? value : '' + value;\r\n  },\r\n  numeric(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const locale = this.chart.options.locale;\r\n    let notation;\r\n    let delta = tickValue;\r\n    if (ticks.length > 1) {\r\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n        notation = 'scientific';\r\n      }\r\n      delta = calculateDelta(tickValue, ticks);\r\n    }\r\n    const logDelta = log10(Math.abs(delta));\r\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n    Object.assign(options, this.options.ticks.format);\r\n    return formatNumber(tickValue, locale, options);\r\n  },\r\n  logarithmic(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\r\n    if (remain === 1 || remain === 2 || remain === 5) {\r\n      return formatters.numeric.call(this, tickValue, index, ticks);\r\n    }\r\n    return '';\r\n  }\r\n};\r\nfunction calculateDelta(tickValue, ticks) {\r\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\r\n    delta = tickValue - Math.floor(tickValue);\r\n  }\r\n  return delta;\r\n}\r\nvar Ticks = {formatters};\r\n\r\ndefaults.set('scale', {\r\n  display: true,\r\n  offset: false,\r\n  reverse: false,\r\n  beginAtZero: false,\r\n  bounds: 'ticks',\r\n  grace: 0,\r\n  grid: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    drawBorder: true,\r\n    drawOnChartArea: true,\r\n    drawTicks: true,\r\n    tickLength: 8,\r\n    tickWidth: (_ctx, options) => options.lineWidth,\r\n    tickColor: (_ctx, options) => options.color,\r\n    offset: false,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0,\r\n    borderWidth: 1\r\n  },\r\n  title: {\r\n    display: false,\r\n    text: '',\r\n    padding: {\r\n      top: 4,\r\n      bottom: 4\r\n    }\r\n  },\r\n  ticks: {\r\n    minRotation: 0,\r\n    maxRotation: 50,\r\n    mirror: false,\r\n    textStrokeWidth: 0,\r\n    textStrokeColor: '',\r\n    padding: 3,\r\n    display: true,\r\n    autoSkip: true,\r\n    autoSkipPadding: 3,\r\n    labelOffset: 0,\r\n    callback: Ticks.formatters.values,\r\n    minor: {},\r\n    major: {},\r\n    align: 'center',\r\n    crossAlign: 'near',\r\n    showLabelBackdrop: false,\r\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\r\n    backdropPadding: 2,\r\n  }\r\n});\r\ndefaults.route('scale.ticks', 'color', '', 'color');\r\ndefaults.route('scale.grid', 'color', '', 'borderColor');\r\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\r\ndefaults.route('scale.title', 'color', '', 'color');\r\ndefaults.describe('scale', {\r\n  _fallback: false,\r\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\r\n});\r\ndefaults.describe('scales', {\r\n  _fallback: 'scale',\r\n});\r\ndefaults.describe('scale.ticks', {\r\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\r\n  _indexable: (name) => name !== 'backdropPadding',\r\n});\r\n\r\nfunction autoSkip(scale, ticks) {\r\n  const tickOpts = scale.options.ticks;\r\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\r\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n  const numMajorIndices = majorIndices.length;\r\n  const first = majorIndices[0];\r\n  const last = majorIndices[numMajorIndices - 1];\r\n  const newTicks = [];\r\n  if (numMajorIndices > ticksLimit) {\r\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n    return newTicks;\r\n  }\r\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n  if (numMajorIndices > 0) {\r\n    let i, ilen;\r\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\r\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n    }\r\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n    return newTicks;\r\n  }\r\n  skip(ticks, newTicks, spacing);\r\n  return newTicks;\r\n}\r\nfunction determineMaxTicks(scale) {\r\n  const offset = scale.options.offset;\r\n  const tickLength = scale._tickSize();\r\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n  const maxChart = scale._maxLength / tickLength;\r\n  return Math.floor(Math.min(maxScale, maxChart));\r\n}\r\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n  const spacing = ticks.length / ticksLimit;\r\n  if (!evenMajorSpacing) {\r\n    return Math.max(spacing, 1);\r\n  }\r\n  const factors = _factorize(evenMajorSpacing);\r\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\r\n    const factor = factors[i];\r\n    if (factor > spacing) {\r\n      return factor;\r\n    }\r\n  }\r\n  return Math.max(spacing, 1);\r\n}\r\nfunction getMajorIndices(ticks) {\r\n  const result = [];\r\n  let i, ilen;\r\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n    if (ticks[i].major) {\r\n      result.push(i);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n  let count = 0;\r\n  let next = majorIndices[0];\r\n  let i;\r\n  spacing = Math.ceil(spacing);\r\n  for (i = 0; i < ticks.length; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = majorIndices[count * spacing];\r\n    }\r\n  }\r\n}\r\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n  const start = valueOrDefault(majorStart, 0);\r\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n  let count = 0;\r\n  let length, i, next;\r\n  spacing = Math.ceil(spacing);\r\n  if (majorEnd) {\r\n    length = majorEnd - majorStart;\r\n    spacing = length / Math.floor(length / spacing);\r\n  }\r\n  next = start;\r\n  while (next < 0) {\r\n    count++;\r\n    next = Math.round(start + count * spacing);\r\n  }\r\n  for (i = Math.max(start, 0); i < end; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = Math.round(start + count * spacing);\r\n    }\r\n  }\r\n}\r\nfunction getEvenSpacing(arr) {\r\n  const len = arr.length;\r\n  let i, diff;\r\n  if (len < 2) {\r\n    return false;\r\n  }\r\n  for (diff = arr[0], i = 1; i < len; ++i) {\r\n    if (arr[i] - arr[i - 1] !== diff) {\r\n      return false;\r\n    }\r\n  }\r\n  return diff;\r\n}\r\n\r\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\nfunction sample(arr, numItems) {\r\n  const result = [];\r\n  const increment = arr.length / numItems;\r\n  const len = arr.length;\r\n  let i = 0;\r\n  for (; i < len; i += increment) {\r\n    result.push(arr[Math.floor(i)]);\r\n  }\r\n  return result;\r\n}\r\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\r\n  const length = scale.ticks.length;\r\n  const validIndex = Math.min(index, length - 1);\r\n  const start = scale._startPixel;\r\n  const end = scale._endPixel;\r\n  const epsilon = 1e-6;\r\n  let lineValue = scale.getPixelForTick(validIndex);\r\n  let offset;\r\n  if (offsetGridLines) {\r\n    if (length === 1) {\r\n      offset = Math.max(lineValue - start, end - lineValue);\r\n    } else if (index === 0) {\r\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n    } else {\r\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n    }\r\n    lineValue += validIndex < index ? offset : -offset;\r\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n      return;\r\n    }\r\n  }\r\n  return lineValue;\r\n}\r\nfunction garbageCollect(caches, length) {\r\n  each(caches, (cache) => {\r\n    const gc = cache.gc;\r\n    const gcLen = gc.length / 2;\r\n    let i;\r\n    if (gcLen > length) {\r\n      for (i = 0; i < gcLen; ++i) {\r\n        delete cache.data[gc[i]];\r\n      }\r\n      gc.splice(0, gcLen);\r\n    }\r\n  });\r\n}\r\nfunction getTickMarkLength(options) {\r\n  return options.drawTicks ? options.tickLength : 0;\r\n}\r\nfunction getTitleHeight(options, fallback) {\r\n  if (!options.display) {\r\n    return 0;\r\n  }\r\n  const font = toFont(options.font, fallback);\r\n  const padding = toPadding(options.padding);\r\n  const lines = isArray(options.text) ? options.text.length : 1;\r\n  return (lines * font.lineHeight) + padding.height;\r\n}\r\nfunction createScaleContext(parent, scale) {\r\n  return createContext(parent, {\r\n    scale,\r\n    type: 'scale'\r\n  });\r\n}\r\nfunction createTickContext(parent, index, tick) {\r\n  return createContext(parent, {\r\n    tick,\r\n    index,\r\n    type: 'tick'\r\n  });\r\n}\r\nfunction titleAlign(align, position, reverse) {\r\n  let ret = _toLeftRightCenter(align);\r\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\r\n    ret = reverseAlign(ret);\r\n  }\r\n  return ret;\r\n}\r\nfunction titleArgs(scale, offset, position, align) {\r\n  const {top, left, bottom, right, chart} = scale;\r\n  const {chartArea, scales} = chart;\r\n  let rotation = 0;\r\n  let maxWidth, titleX, titleY;\r\n  const height = bottom - top;\r\n  const width = right - left;\r\n  if (scale.isHorizontal()) {\r\n    titleX = _alignStartEnd(align, left, right);\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\r\n    } else if (position === 'center') {\r\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\r\n    } else {\r\n      titleY = offsetFromEdge(scale, position, offset);\r\n    }\r\n    maxWidth = right - left;\r\n  } else {\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\r\n    } else if (position === 'center') {\r\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\r\n    } else {\r\n      titleX = offsetFromEdge(scale, position, offset);\r\n    }\r\n    titleY = _alignStartEnd(align, bottom, top);\r\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n  }\r\n  return {titleX, titleY, maxWidth, rotation};\r\n}\r\nclass Scale extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.id = cfg.id;\r\n    this.type = cfg.type;\r\n    this.options = undefined;\r\n    this.ctx = cfg.ctx;\r\n    this.chart = cfg.chart;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this._margins = {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    };\r\n    this.maxWidth = undefined;\r\n    this.maxHeight = undefined;\r\n    this.paddingTop = undefined;\r\n    this.paddingBottom = undefined;\r\n    this.paddingLeft = undefined;\r\n    this.paddingRight = undefined;\r\n    this.axis = undefined;\r\n    this.labelRotation = undefined;\r\n    this.min = undefined;\r\n    this.max = undefined;\r\n    this._range = undefined;\r\n    this.ticks = [];\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this._labelSizes = null;\r\n    this._length = 0;\r\n    this._maxLength = 0;\r\n    this._longestTextCache = {};\r\n    this._startPixel = undefined;\r\n    this._endPixel = undefined;\r\n    this._reversePixels = false;\r\n    this._userMax = undefined;\r\n    this._userMin = undefined;\r\n    this._suggestedMax = undefined;\r\n    this._suggestedMin = undefined;\r\n    this._ticksLength = 0;\r\n    this._borderValue = 0;\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n    this.$context = undefined;\r\n  }\r\n  init(options) {\r\n    this.options = options.setContext(this.getContext());\r\n    this.axis = options.axis;\r\n    this._userMin = this.parse(options.min);\r\n    this._userMax = this.parse(options.max);\r\n    this._suggestedMin = this.parse(options.suggestedMin);\r\n    this._suggestedMax = this.parse(options.suggestedMax);\r\n  }\r\n  parse(raw, index) {\r\n    return raw;\r\n  }\r\n  getUserBounds() {\r\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\r\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n    return {\r\n      min: finiteOrDefault(_userMin, _suggestedMin),\r\n      max: finiteOrDefault(_userMax, _suggestedMax),\r\n      minDefined: isNumberFinite(_userMin),\r\n      maxDefined: isNumberFinite(_userMax)\r\n    };\r\n  }\r\n  getMinMax(canStack) {\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    let range;\r\n    if (minDefined && maxDefined) {\r\n      return {min, max};\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      range = metas[i].controller.getMinMax(this, canStack);\r\n      if (!minDefined) {\r\n        min = Math.min(min, range.min);\r\n      }\r\n      if (!maxDefined) {\r\n        max = Math.max(max, range.max);\r\n      }\r\n    }\r\n    min = maxDefined && min > max ? max : min;\r\n    max = minDefined && min > max ? min : max;\r\n    return {\r\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n    };\r\n  }\r\n  getPadding() {\r\n    return {\r\n      left: this.paddingLeft || 0,\r\n      top: this.paddingTop || 0,\r\n      right: this.paddingRight || 0,\r\n      bottom: this.paddingBottom || 0\r\n    };\r\n  }\r\n  getTicks() {\r\n    return this.ticks;\r\n  }\r\n  getLabels() {\r\n    const data = this.chart.data;\r\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n  }\r\n  beforeLayout() {\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n  }\r\n  beforeUpdate() {\r\n    callback(this.options.beforeUpdate, [this]);\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\r\n    const sampleSize = tickOpts.sampleSize;\r\n    this.beforeUpdate();\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins = Object.assign({\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    }, margins);\r\n    this.ticks = null;\r\n    this._labelSizes = null;\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this.beforeSetDimensions();\r\n    this.setDimensions();\r\n    this.afterSetDimensions();\r\n    this._maxLength = this.isHorizontal()\r\n      ? this.width + margins.left + margins.right\r\n      : this.height + margins.top + margins.bottom;\r\n    if (!this._dataLimitsCached) {\r\n      this.beforeDataLimits();\r\n      this.determineDataLimits();\r\n      this.afterDataLimits();\r\n      this._range = _addGrace(this, grace, beginAtZero);\r\n      this._dataLimitsCached = true;\r\n    }\r\n    this.beforeBuildTicks();\r\n    this.ticks = this.buildTicks() || [];\r\n    this.afterBuildTicks();\r\n    const samplingEnabled = sampleSize < this.ticks.length;\r\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\r\n    this.configure();\r\n    this.beforeCalculateLabelRotation();\r\n    this.calculateLabelRotation();\r\n    this.afterCalculateLabelRotation();\r\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n      this.ticks = autoSkip(this, this.ticks);\r\n      this._labelSizes = null;\r\n      this.afterAutoSkip();\r\n    }\r\n    if (samplingEnabled) {\r\n      this._convertTicksToLabels(this.ticks);\r\n    }\r\n    this.beforeFit();\r\n    this.fit();\r\n    this.afterFit();\r\n    this.afterUpdate();\r\n  }\r\n  configure() {\r\n    let reversePixels = this.options.reverse;\r\n    let startPixel, endPixel;\r\n    if (this.isHorizontal()) {\r\n      startPixel = this.left;\r\n      endPixel = this.right;\r\n    } else {\r\n      startPixel = this.top;\r\n      endPixel = this.bottom;\r\n      reversePixels = !reversePixels;\r\n    }\r\n    this._startPixel = startPixel;\r\n    this._endPixel = endPixel;\r\n    this._reversePixels = reversePixels;\r\n    this._length = endPixel - startPixel;\r\n    this._alignToPixels = this.options.alignToPixels;\r\n  }\r\n  afterUpdate() {\r\n    callback(this.options.afterUpdate, [this]);\r\n  }\r\n  beforeSetDimensions() {\r\n    callback(this.options.beforeSetDimensions, [this]);\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = 0;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = 0;\r\n      this.bottom = this.height;\r\n    }\r\n    this.paddingLeft = 0;\r\n    this.paddingTop = 0;\r\n    this.paddingRight = 0;\r\n    this.paddingBottom = 0;\r\n  }\r\n  afterSetDimensions() {\r\n    callback(this.options.afterSetDimensions, [this]);\r\n  }\r\n  _callHooks(name) {\r\n    this.chart.notifyPlugins(name, this.getContext());\r\n    callback(this.options[name], [this]);\r\n  }\r\n  beforeDataLimits() {\r\n    this._callHooks('beforeDataLimits');\r\n  }\r\n  determineDataLimits() {}\r\n  afterDataLimits() {\r\n    this._callHooks('afterDataLimits');\r\n  }\r\n  beforeBuildTicks() {\r\n    this._callHooks('beforeBuildTicks');\r\n  }\r\n  buildTicks() {\r\n    return [];\r\n  }\r\n  afterBuildTicks() {\r\n    this._callHooks('afterBuildTicks');\r\n  }\r\n  beforeTickToLabelConversion() {\r\n    callback(this.options.beforeTickToLabelConversion, [this]);\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const tickOpts = this.options.ticks;\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      tick = ticks[i];\r\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\r\n    }\r\n  }\r\n  afterTickToLabelConversion() {\r\n    callback(this.options.afterTickToLabelConversion, [this]);\r\n  }\r\n  beforeCalculateLabelRotation() {\r\n    callback(this.options.beforeCalculateLabelRotation, [this]);\r\n  }\r\n  calculateLabelRotation() {\r\n    const options = this.options;\r\n    const tickOpts = options.ticks;\r\n    const numTicks = this.ticks.length;\r\n    const minRotation = tickOpts.minRotation || 0;\r\n    const maxRotation = tickOpts.maxRotation;\r\n    let labelRotation = minRotation;\r\n    let tickWidth, maxHeight, maxLabelDiagonal;\r\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\r\n      this.labelRotation = minRotation;\r\n      return;\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    const maxLabelWidth = labelSizes.widest.width;\r\n    const maxLabelHeight = labelSizes.highest.height;\r\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\r\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n    if (maxLabelWidth + 6 > tickWidth) {\r\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\r\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\r\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n      labelRotation = toDegrees(Math.min(\r\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\r\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\r\n      ));\r\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n    }\r\n    this.labelRotation = labelRotation;\r\n  }\r\n  afterCalculateLabelRotation() {\r\n    callback(this.options.afterCalculateLabelRotation, [this]);\r\n  }\r\n  afterAutoSkip() {}\r\n  beforeFit() {\r\n    callback(this.options.beforeFit, [this]);\r\n  }\r\n  fit() {\r\n    const minSize = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\r\n    const display = this._isVisible();\r\n    const isHorizontal = this.isHorizontal();\r\n    if (display) {\r\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n      if (isHorizontal) {\r\n        minSize.width = this.maxWidth;\r\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n      } else {\r\n        minSize.height = this.maxHeight;\r\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n      }\r\n      if (tickOpts.display && this.ticks.length) {\r\n        const {first, last, widest, highest} = this._getLabelSizes();\r\n        const tickPadding = tickOpts.padding * 2;\r\n        const angleRadians = toRadians(this.labelRotation);\r\n        const cos = Math.cos(angleRadians);\r\n        const sin = Math.sin(angleRadians);\r\n        if (isHorizontal) {\r\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\r\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\r\n        } else {\r\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\r\n        }\r\n        this._calculatePadding(first, last, sin, cos);\r\n      }\r\n    }\r\n    this._handleMargins();\r\n    if (isHorizontal) {\r\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\r\n      this.height = minSize.height;\r\n    } else {\r\n      this.width = minSize.width;\r\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\r\n    }\r\n  }\r\n  _calculatePadding(first, last, sin, cos) {\r\n    const {ticks: {align, padding}, position} = this.options;\r\n    const isRotated = this.labelRotation !== 0;\r\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\r\n    if (this.isHorizontal()) {\r\n      const offsetLeft = this.getPixelForTick(0) - this.left;\r\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\r\n      let paddingLeft = 0;\r\n      let paddingRight = 0;\r\n      if (isRotated) {\r\n        if (labelsBelowTicks) {\r\n          paddingLeft = cos * first.width;\r\n          paddingRight = sin * last.height;\r\n        } else {\r\n          paddingLeft = sin * first.height;\r\n          paddingRight = cos * last.width;\r\n        }\r\n      } else if (align === 'start') {\r\n        paddingRight = last.width;\r\n      } else if (align === 'end') {\r\n        paddingLeft = first.width;\r\n      } else if (align !== 'inner') {\r\n        paddingLeft = first.width / 2;\r\n        paddingRight = last.width / 2;\r\n      }\r\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\r\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\r\n    } else {\r\n      let paddingTop = last.height / 2;\r\n      let paddingBottom = first.height / 2;\r\n      if (align === 'start') {\r\n        paddingTop = 0;\r\n        paddingBottom = first.height;\r\n      } else if (align === 'end') {\r\n        paddingTop = last.height;\r\n        paddingBottom = 0;\r\n      }\r\n      this.paddingTop = paddingTop + padding;\r\n      this.paddingBottom = paddingBottom + padding;\r\n    }\r\n  }\r\n  _handleMargins() {\r\n    if (this._margins) {\r\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\r\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\r\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\r\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\r\n    }\r\n  }\r\n  afterFit() {\r\n    callback(this.options.afterFit, [this]);\r\n  }\r\n  isHorizontal() {\r\n    const {axis, position} = this.options;\r\n    return position === 'top' || position === 'bottom' || axis === 'x';\r\n  }\r\n  isFullSize() {\r\n    return this.options.fullSize;\r\n  }\r\n  _convertTicksToLabels(ticks) {\r\n    this.beforeTickToLabelConversion();\r\n    this.generateTickLabels(ticks);\r\n    let i, ilen;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      if (isNullOrUndef(ticks[i].label)) {\r\n        ticks.splice(i, 1);\r\n        ilen--;\r\n        i--;\r\n      }\r\n    }\r\n    this.afterTickToLabelConversion();\r\n  }\r\n  _getLabelSizes() {\r\n    let labelSizes = this._labelSizes;\r\n    if (!labelSizes) {\r\n      const sampleSize = this.options.ticks.sampleSize;\r\n      let ticks = this.ticks;\r\n      if (sampleSize < ticks.length) {\r\n        ticks = sample(ticks, sampleSize);\r\n      }\r\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\r\n    }\r\n    return labelSizes;\r\n  }\r\n  _computeLabelSizes(ticks, length) {\r\n    const {ctx, _longestTextCache: caches} = this;\r\n    const widths = [];\r\n    const heights = [];\r\n    let widestLabelSize = 0;\r\n    let highestLabelSize = 0;\r\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n    for (i = 0; i < length; ++i) {\r\n      label = ticks[i].label;\r\n      tickFont = this._resolveTickFontOptions(i);\r\n      ctx.font = fontString = tickFont.string;\r\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\r\n      lineHeight = tickFont.lineHeight;\r\n      width = height = 0;\r\n      if (!isNullOrUndef(label) && !isArray(label)) {\r\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n        height = lineHeight;\r\n      } else if (isArray(label)) {\r\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\r\n          nestedLabel = label[j];\r\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n            height += lineHeight;\r\n          }\r\n        }\r\n      }\r\n      widths.push(width);\r\n      heights.push(height);\r\n      widestLabelSize = Math.max(width, widestLabelSize);\r\n      highestLabelSize = Math.max(height, highestLabelSize);\r\n    }\r\n    garbageCollect(caches, length);\r\n    const widest = widths.indexOf(widestLabelSize);\r\n    const highest = heights.indexOf(highestLabelSize);\r\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\r\n    return {\r\n      first: valueAt(0),\r\n      last: valueAt(length - 1),\r\n      widest: valueAt(widest),\r\n      highest: valueAt(highest),\r\n      widths,\r\n      heights,\r\n    };\r\n  }\r\n  getLabelForValue(value) {\r\n    return value;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    return NaN;\r\n  }\r\n  getValueForPixel(pixel) {}\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getPixelForDecimal(decimal) {\r\n    if (this._reversePixels) {\r\n      decimal = 1 - decimal;\r\n    }\r\n    const pixel = this._startPixel + decimal * this._length;\r\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\r\n  }\r\n  getDecimalForPixel(pixel) {\r\n    const decimal = (pixel - this._startPixel) / this._length;\r\n    return this._reversePixels ? 1 - decimal : decimal;\r\n  }\r\n  getBasePixel() {\r\n    return this.getPixelForValue(this.getBaseValue());\r\n  }\r\n  getBaseValue() {\r\n    const {min, max} = this;\r\n    return min < 0 && max < 0 ? max :\r\n      min > 0 && max > 0 ? min :\r\n      0;\r\n  }\r\n  getContext(index) {\r\n    const ticks = this.ticks || [];\r\n    if (index >= 0 && index < ticks.length) {\r\n      const tick = ticks[index];\r\n      return tick.$context ||\r\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\r\n    }\r\n    return this.$context ||\r\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\r\n  }\r\n  _tickSize() {\r\n    const optionTicks = this.options.ticks;\r\n    const rot = toRadians(this.labelRotation);\r\n    const cos = Math.abs(Math.cos(rot));\r\n    const sin = Math.abs(Math.sin(rot));\r\n    const labelSizes = this._getLabelSizes();\r\n    const padding = optionTicks.autoSkipPadding || 0;\r\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n    return this.isHorizontal()\r\n      ? h * cos > w * sin ? w / cos : h / sin\r\n      : h * sin < w * cos ? h / cos : w / sin;\r\n  }\r\n  _isVisible() {\r\n    const display = this.options.display;\r\n    if (display !== 'auto') {\r\n      return !!display;\r\n    }\r\n    return this.getMatchingVisibleMetas().length > 0;\r\n  }\r\n  _computeGridLineItems(chartArea) {\r\n    const axis = this.axis;\r\n    const chart = this.chart;\r\n    const options = this.options;\r\n    const {grid, position} = options;\r\n    const offset = grid.offset;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const ticksLength = ticks.length + (offset ? 1 : 0);\r\n    const tl = getTickMarkLength(grid);\r\n    const items = [];\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\r\n    const axisHalfWidth = axisWidth / 2;\r\n    const alignBorderValue = function(pixel) {\r\n      return _alignPixel(chart, pixel, axisWidth);\r\n    };\r\n    let borderValue, i, lineValue, alignedLineValue;\r\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n    if (position === 'top') {\r\n      borderValue = alignBorderValue(this.bottom);\r\n      ty1 = this.bottom - tl;\r\n      ty2 = borderValue - axisHalfWidth;\r\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n      y2 = chartArea.bottom;\r\n    } else if (position === 'bottom') {\r\n      borderValue = alignBorderValue(this.top);\r\n      y1 = chartArea.top;\r\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = this.top + tl;\r\n    } else if (position === 'left') {\r\n      borderValue = alignBorderValue(this.right);\r\n      tx1 = this.right - tl;\r\n      tx2 = borderValue - axisHalfWidth;\r\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n      x2 = chartArea.right;\r\n    } else if (position === 'right') {\r\n      borderValue = alignBorderValue(this.left);\r\n      x1 = chartArea.left;\r\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n      tx1 = borderValue + axisHalfWidth;\r\n      tx2 = this.left + tl;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      y1 = chartArea.top;\r\n      y2 = chartArea.bottom;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = ty1 + tl;\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      tx1 = borderValue - axisHalfWidth;\r\n      tx2 = tx1 - tl;\r\n      x1 = chartArea.left;\r\n      x2 = chartArea.right;\r\n    }\r\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\r\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\r\n    for (i = 0; i < ticksLength; i += step) {\r\n      const optsAtIndex = grid.setContext(this.getContext(i));\r\n      const lineWidth = optsAtIndex.lineWidth;\r\n      const lineColor = optsAtIndex.color;\r\n      const borderDash = optsAtIndex.borderDash || [];\r\n      const borderDashOffset = optsAtIndex.borderDashOffset;\r\n      const tickWidth = optsAtIndex.tickWidth;\r\n      const tickColor = optsAtIndex.tickColor;\r\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n      lineValue = getPixelForGridLine(this, i, offset);\r\n      if (lineValue === undefined) {\r\n        continue;\r\n      }\r\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n      if (isHorizontal) {\r\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n      } else {\r\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n      }\r\n      items.push({\r\n        tx1,\r\n        ty1,\r\n        tx2,\r\n        ty2,\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        width: lineWidth,\r\n        color: lineColor,\r\n        borderDash,\r\n        borderDashOffset,\r\n        tickWidth,\r\n        tickColor,\r\n        tickBorderDash,\r\n        tickBorderDashOffset,\r\n      });\r\n    }\r\n    this._ticksLength = ticksLength;\r\n    this._borderValue = borderValue;\r\n    return items;\r\n  }\r\n  _computeLabelItems(chartArea) {\r\n    const axis = this.axis;\r\n    const options = this.options;\r\n    const {position, ticks: optionTicks} = options;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const {align, crossAlign, padding, mirror} = optionTicks;\r\n    const tl = getTickMarkLength(options.grid);\r\n    const tickAndPadding = tl + padding;\r\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    const items = [];\r\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n    let textBaseline = 'middle';\r\n    if (position === 'top') {\r\n      y = this.bottom - hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'bottom') {\r\n      y = this.top + hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'left') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (position === 'right') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n      }\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\r\n      }\r\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\r\n    }\r\n    if (axis === 'y') {\r\n      if (align === 'start') {\r\n        textBaseline = 'top';\r\n      } else if (align === 'end') {\r\n        textBaseline = 'bottom';\r\n      }\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      label = tick.label;\r\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\r\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\r\n      font = this._resolveTickFontOptions(i);\r\n      lineHeight = font.lineHeight;\r\n      lineCount = isArray(label) ? label.length : 1;\r\n      const halfCount = lineCount / 2;\r\n      const color = optsAtIndex.color;\r\n      const strokeColor = optsAtIndex.textStrokeColor;\r\n      const strokeWidth = optsAtIndex.textStrokeWidth;\r\n      let tickTextAlign = textAlign;\r\n      if (isHorizontal) {\r\n        x = pixel;\r\n        if (textAlign === 'inner') {\r\n          if (i === ilen - 1) {\r\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\r\n          } else if (i === 0) {\r\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\r\n          } else {\r\n            tickTextAlign = 'center';\r\n          }\r\n        }\r\n        if (position === 'top') {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n          } else {\r\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n          }\r\n        } else {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n          } else {\r\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n          }\r\n        }\r\n        if (mirror) {\r\n          textOffset *= -1;\r\n        }\r\n      } else {\r\n        y = pixel;\r\n        textOffset = (1 - lineCount) * lineHeight / 2;\r\n      }\r\n      let backdrop;\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\r\n        const height = labelSizes.heights[i];\r\n        const width = labelSizes.widths[i];\r\n        let top = y + textOffset - labelPadding.top;\r\n        let left = x - labelPadding.left;\r\n        switch (textBaseline) {\r\n        case 'middle':\r\n          top -= height / 2;\r\n          break;\r\n        case 'bottom':\r\n          top -= height;\r\n          break;\r\n        }\r\n        switch (textAlign) {\r\n        case 'center':\r\n          left -= width / 2;\r\n          break;\r\n        case 'right':\r\n          left -= width;\r\n          break;\r\n        }\r\n        backdrop = {\r\n          left,\r\n          top,\r\n          width: width + labelPadding.width,\r\n          height: height + labelPadding.height,\r\n          color: optsAtIndex.backdropColor,\r\n        };\r\n      }\r\n      items.push({\r\n        rotation,\r\n        label,\r\n        font,\r\n        color,\r\n        strokeColor,\r\n        strokeWidth,\r\n        textOffset,\r\n        textAlign: tickTextAlign,\r\n        textBaseline,\r\n        translation: [x, y],\r\n        backdrop,\r\n      });\r\n    }\r\n    return items;\r\n  }\r\n  _getXAxisLabelAlignment() {\r\n    const {position, ticks} = this.options;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    if (rotation) {\r\n      return position === 'top' ? 'left' : 'right';\r\n    }\r\n    let align = 'center';\r\n    if (ticks.align === 'start') {\r\n      align = 'left';\r\n    } else if (ticks.align === 'end') {\r\n      align = 'right';\r\n    } else if (ticks.align === 'inner') {\r\n      align = 'inner';\r\n    }\r\n    return align;\r\n  }\r\n  _getYAxisLabelAlignment(tl) {\r\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\r\n    const labelSizes = this._getLabelSizes();\r\n    const tickAndPadding = tl + padding;\r\n    const widest = labelSizes.widest.width;\r\n    let textAlign;\r\n    let x;\r\n    if (position === 'left') {\r\n      if (mirror) {\r\n        x = this.right + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += (widest / 2);\r\n        } else {\r\n          textAlign = 'right';\r\n          x += widest;\r\n        }\r\n      } else {\r\n        x = this.right - tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x = this.left;\r\n        }\r\n      }\r\n    } else if (position === 'right') {\r\n      if (mirror) {\r\n        x = this.left + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x -= widest;\r\n        }\r\n      } else {\r\n        x = this.left + tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += widest / 2;\r\n        } else {\r\n          textAlign = 'right';\r\n          x = this.right;\r\n        }\r\n      }\r\n    } else {\r\n      textAlign = 'right';\r\n    }\r\n    return {textAlign, x};\r\n  }\r\n  _computeLabelArea() {\r\n    if (this.options.ticks.mirror) {\r\n      return;\r\n    }\r\n    const chart = this.chart;\r\n    const position = this.options.position;\r\n    if (position === 'left' || position === 'right') {\r\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\r\n    } if (position === 'top' || position === 'bottom') {\r\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\r\n    }\r\n  }\r\n  drawBackground() {\r\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\r\n    if (backgroundColor) {\r\n      ctx.save();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fillRect(left, top, width, height);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getLineWidthForValue(value) {\r\n    const grid = this.options.grid;\r\n    if (!this._isVisible() || !grid.display) {\r\n      return 0;\r\n    }\r\n    const ticks = this.ticks;\r\n    const index = ticks.findIndex(t => t.value === value);\r\n    if (index >= 0) {\r\n      const opts = grid.setContext(this.getContext(index));\r\n      return opts.lineWidth;\r\n    }\r\n    return 0;\r\n  }\r\n  drawGrid(chartArea) {\r\n    const grid = this.options.grid;\r\n    const ctx = this.ctx;\r\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\r\n    let i, ilen;\r\n    const drawLine = (p1, p2, style) => {\r\n      if (!style.width || !style.color) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      ctx.lineWidth = style.width;\r\n      ctx.strokeStyle = style.color;\r\n      ctx.setLineDash(style.borderDash || []);\r\n      ctx.lineDashOffset = style.borderDashOffset;\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    };\r\n    if (grid.display) {\r\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n        const item = items[i];\r\n        if (grid.drawOnChartArea) {\r\n          drawLine(\r\n            {x: item.x1, y: item.y1},\r\n            {x: item.x2, y: item.y2},\r\n            item\r\n          );\r\n        }\r\n        if (grid.drawTicks) {\r\n          drawLine(\r\n            {x: item.tx1, y: item.ty1},\r\n            {x: item.tx2, y: item.ty2},\r\n            {\r\n              color: item.tickColor,\r\n              width: item.tickWidth,\r\n              borderDash: item.tickBorderDash,\r\n              borderDashOffset: item.tickBorderDashOffset\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n  drawBorder() {\r\n    const {chart, ctx, options: {grid}} = this;\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\r\n    if (!axisWidth) {\r\n      return;\r\n    }\r\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\r\n    const borderValue = this._borderValue;\r\n    let x1, x2, y1, y2;\r\n    if (this.isHorizontal()) {\r\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\r\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\r\n      y1 = y2 = borderValue;\r\n    } else {\r\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\r\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\r\n      x1 = x2 = borderValue;\r\n    }\r\n    ctx.save();\r\n    ctx.lineWidth = borderOpts.borderWidth;\r\n    ctx.strokeStyle = borderOpts.borderColor;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n  drawLabels(chartArea) {\r\n    const optionTicks = this.options.ticks;\r\n    if (!optionTicks.display) {\r\n      return;\r\n    }\r\n    const ctx = this.ctx;\r\n    const area = this._computeLabelArea();\r\n    if (area) {\r\n      clipArea(ctx, area);\r\n    }\r\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\r\n    let i, ilen;\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      const item = items[i];\r\n      const tickFont = item.font;\r\n      const label = item.label;\r\n      if (item.backdrop) {\r\n        ctx.fillStyle = item.backdrop.color;\r\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\r\n      }\r\n      let y = item.textOffset;\r\n      renderText(ctx, label, 0, y, tickFont, item);\r\n    }\r\n    if (area) {\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  drawTitle() {\r\n    const {ctx, options: {position, title, reverse}} = this;\r\n    if (!title.display) {\r\n      return;\r\n    }\r\n    const font = toFont(title.font);\r\n    const padding = toPadding(title.padding);\r\n    const align = title.align;\r\n    let offset = font.lineHeight / 2;\r\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\r\n      offset += padding.bottom;\r\n      if (isArray(title.text)) {\r\n        offset += font.lineHeight * (title.text.length - 1);\r\n      }\r\n    } else {\r\n      offset += padding.top;\r\n    }\r\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\r\n    renderText(ctx, title.text, 0, 0, font, {\r\n      color: title.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: titleAlign(align, position, reverse),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n  draw(chartArea) {\r\n    if (!this._isVisible()) {\r\n      return;\r\n    }\r\n    this.drawBackground();\r\n    this.drawGrid(chartArea);\r\n    this.drawBorder();\r\n    this.drawTitle();\r\n    this.drawLabels(chartArea);\r\n  }\r\n  _layers() {\r\n    const opts = this.options;\r\n    const tz = opts.ticks && opts.ticks.z || 0;\r\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\r\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\r\n      return [{\r\n        z: tz,\r\n        draw: (chartArea) => {\r\n          this.draw(chartArea);\r\n        }\r\n      }];\r\n    }\r\n    return [{\r\n      z: gz,\r\n      draw: (chartArea) => {\r\n        this.drawBackground();\r\n        this.drawGrid(chartArea);\r\n        this.drawTitle();\r\n      }\r\n    }, {\r\n      z: gz + 1,\r\n      draw: () => {\r\n        this.drawBorder();\r\n      }\r\n    }, {\r\n      z: tz,\r\n      draw: (chartArea) => {\r\n        this.drawLabels(chartArea);\r\n      }\r\n    }];\r\n  }\r\n  getMatchingVisibleMetas(type) {\r\n    const metas = this.chart.getSortedVisibleDatasetMetas();\r\n    const axisID = this.axis + 'AxisID';\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      const meta = metas[i];\r\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  _resolveTickFontOptions(index) {\r\n    const opts = this.options.ticks.setContext(this.getContext(index));\r\n    return toFont(opts.font);\r\n  }\r\n  _maxDigits() {\r\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\r\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\r\n  }\r\n}\r\n\r\nclass TypedRegistry {\r\n  constructor(type, scope, override) {\r\n    this.type = type;\r\n    this.scope = scope;\r\n    this.override = override;\r\n    this.items = Object.create(null);\r\n  }\r\n  isForType(type) {\r\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n  }\r\n  register(item) {\r\n    const proto = Object.getPrototypeOf(item);\r\n    let parentScope;\r\n    if (isIChartComponent(proto)) {\r\n      parentScope = this.register(proto);\r\n    }\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope + '.' + id;\r\n    if (!id) {\r\n      throw new Error('class does not have id: ' + item);\r\n    }\r\n    if (id in items) {\r\n      return scope;\r\n    }\r\n    items[id] = item;\r\n    registerDefaults(item, scope, parentScope);\r\n    if (this.override) {\r\n      defaults.override(item.id, item.overrides);\r\n    }\r\n    return scope;\r\n  }\r\n  get(id) {\r\n    return this.items[id];\r\n  }\r\n  unregister(item) {\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope;\r\n    if (id in items) {\r\n      delete items[id];\r\n    }\r\n    if (scope && id in defaults[scope]) {\r\n      delete defaults[scope][id];\r\n      if (this.override) {\r\n        delete overrides[id];\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction registerDefaults(item, scope, parentScope) {\r\n  const itemDefaults = merge(Object.create(null), [\r\n    parentScope ? defaults.get(parentScope) : {},\r\n    defaults.get(scope),\r\n    item.defaults\r\n  ]);\r\n  defaults.set(scope, itemDefaults);\r\n  if (item.defaultRoutes) {\r\n    routeDefaults(scope, item.defaultRoutes);\r\n  }\r\n  if (item.descriptors) {\r\n    defaults.describe(scope, item.descriptors);\r\n  }\r\n}\r\nfunction routeDefaults(scope, routes) {\r\n  Object.keys(routes).forEach(property => {\r\n    const propertyParts = property.split('.');\r\n    const sourceName = propertyParts.pop();\r\n    const sourceScope = [scope].concat(propertyParts).join('.');\r\n    const parts = routes[property].split('.');\r\n    const targetName = parts.pop();\r\n    const targetScope = parts.join('.');\r\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n  });\r\n}\r\nfunction isIChartComponent(proto) {\r\n  return 'id' in proto && 'defaults' in proto;\r\n}\r\n\r\nclass Registry {\r\n  constructor() {\r\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n    this.elements = new TypedRegistry(Element, 'elements');\r\n    this.plugins = new TypedRegistry(Object, 'plugins');\r\n    this.scales = new TypedRegistry(Scale, 'scales');\r\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\r\n  }\r\n  add(...args) {\r\n    this._each('register', args);\r\n  }\r\n  remove(...args) {\r\n    this._each('unregister', args);\r\n  }\r\n  addControllers(...args) {\r\n    this._each('register', args, this.controllers);\r\n  }\r\n  addElements(...args) {\r\n    this._each('register', args, this.elements);\r\n  }\r\n  addPlugins(...args) {\r\n    this._each('register', args, this.plugins);\r\n  }\r\n  addScales(...args) {\r\n    this._each('register', args, this.scales);\r\n  }\r\n  getController(id) {\r\n    return this._get(id, this.controllers, 'controller');\r\n  }\r\n  getElement(id) {\r\n    return this._get(id, this.elements, 'element');\r\n  }\r\n  getPlugin(id) {\r\n    return this._get(id, this.plugins, 'plugin');\r\n  }\r\n  getScale(id) {\r\n    return this._get(id, this.scales, 'scale');\r\n  }\r\n  removeControllers(...args) {\r\n    this._each('unregister', args, this.controllers);\r\n  }\r\n  removeElements(...args) {\r\n    this._each('unregister', args, this.elements);\r\n  }\r\n  removePlugins(...args) {\r\n    this._each('unregister', args, this.plugins);\r\n  }\r\n  removeScales(...args) {\r\n    this._each('unregister', args, this.scales);\r\n  }\r\n  _each(method, args, typedRegistry) {\r\n    [...args].forEach(arg => {\r\n      const reg = typedRegistry || this._getRegistryForType(arg);\r\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\r\n        this._exec(method, reg, arg);\r\n      } else {\r\n        each(arg, item => {\r\n          const itemReg = typedRegistry || this._getRegistryForType(item);\r\n          this._exec(method, itemReg, item);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  _exec(method, registry, component) {\r\n    const camelMethod = _capitalize(method);\r\n    callback(component['before' + camelMethod], [], component);\r\n    registry[method](component);\r\n    callback(component['after' + camelMethod], [], component);\r\n  }\r\n  _getRegistryForType(type) {\r\n    for (let i = 0; i < this._typedRegistries.length; i++) {\r\n      const reg = this._typedRegistries[i];\r\n      if (reg.isForType(type)) {\r\n        return reg;\r\n      }\r\n    }\r\n    return this.plugins;\r\n  }\r\n  _get(id, typedRegistry, type) {\r\n    const item = typedRegistry.get(id);\r\n    if (item === undefined) {\r\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n    }\r\n    return item;\r\n  }\r\n}\r\nvar registry = new Registry();\r\n\r\nclass ScatterController extends DatasetController {\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {data: points = []} = meta;\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n    if (_scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    if (this.options.showLine) {\r\n      const {dataset: line, _dataset} = meta;\r\n      line._chart = this.chart;\r\n      line._datasetIndex = this.index;\r\n      line._decimated = !!_dataset._decimated;\r\n      line.points = points;\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      options.segment = this.options.segment;\r\n      this.updateElement(line, undefined, {\r\n        animated: !animationsDisabled,\r\n        options\r\n      }, mode);\r\n    }\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n  addElements() {\r\n    const {showLine} = this.options;\r\n    if (!this.datasetElementType && showLine) {\r\n      this.datasetElementType = registry.getElement('line');\r\n    }\r\n    super.addElements();\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const {spanGaps, segment} = this.options;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = this.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\r\n      if (segment) {\r\n        properties.parsed = parsed;\r\n        properties.raw = _dataset.data[i];\r\n      }\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data || [];\r\n    if (!this.options.showLine) {\r\n      let max = 0;\r\n      for (let i = data.length - 1; i >= 0; --i) {\r\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n      }\r\n      return max > 0 && max;\r\n    }\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n}\r\nScatterController.id = 'scatter';\r\nScatterController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  showLine: false,\r\n  fill: false\r\n};\r\nScatterController.overrides = {\r\n  interaction: {\r\n    mode: 'point'\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(item) {\r\n          return '(' + item.label + ', ' + item.formattedValue + ')';\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  }\r\n};\r\n\r\nvar controllers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nBarController: BarController,\r\nBubbleController: BubbleController,\r\nDoughnutController: DoughnutController,\r\nLineController: LineController,\r\nPolarAreaController: PolarAreaController,\r\nPieController: PieController,\r\nRadarController: RadarController,\r\nScatterController: ScatterController\r\n});\r\n\r\nfunction abstract() {\r\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\r\n}\r\nclass DateAdapter {\r\n  constructor(options) {\r\n    this.options = options || {};\r\n  }\r\n  init(chartOptions) {}\r\n  formats() {\r\n    return abstract();\r\n  }\r\n  parse(value, format) {\r\n    return abstract();\r\n  }\r\n  format(timestamp, format) {\r\n    return abstract();\r\n  }\r\n  add(timestamp, amount, unit) {\r\n    return abstract();\r\n  }\r\n  diff(a, b, unit) {\r\n    return abstract();\r\n  }\r\n  startOf(timestamp, unit, weekday) {\r\n    return abstract();\r\n  }\r\n  endOf(timestamp, unit) {\r\n    return abstract();\r\n  }\r\n}\r\nDateAdapter.override = function(members) {\r\n  Object.assign(DateAdapter.prototype, members);\r\n};\r\nvar adapters = {\r\n  _date: DateAdapter\r\n};\r\n\r\nfunction binarySearch(metaset, axis, value, intersect) {\r\n  const {controller, data, _sorted} = metaset;\r\n  const iScale = controller._cachedMeta.iScale;\r\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\r\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n    if (!intersect) {\r\n      return lookupMethod(data, axis, value);\r\n    } else if (controller._sharedOptions) {\r\n      const el = data[0];\r\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n      if (range) {\r\n        const start = lookupMethod(data, axis, value - range);\r\n        const end = lookupMethod(data, axis, value + range);\r\n        return {lo: start.lo, hi: end.hi};\r\n      }\r\n    }\r\n  }\r\n  return {lo: 0, hi: data.length - 1};\r\n}\r\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  const value = position[axis];\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    const {index, data} = metasets[i];\r\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\r\n    for (let j = lo; j <= hi; ++j) {\r\n      const element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction getDistanceMetricForAxis(axis) {\r\n  const useX = axis.indexOf('x') !== -1;\r\n  const useY = axis.indexOf('y') !== -1;\r\n  return function(pt1, pt2) {\r\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n  };\r\n}\r\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\r\n  const items = [];\r\n  if (!includeInvisible && !chart.isPointInArea(position)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\r\n      return;\r\n    }\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\r\n  return items;\r\n}\r\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\r\n  let items = [];\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\r\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\r\n    if (_angleBetween(angle, startAngle, endAngle)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\r\n  let items = [];\r\n  const distanceMetric = getDistanceMetricForAxis(axis);\r\n  let minDistance = Number.POSITIVE_INFINITY;\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\r\n    if (intersect && !inRange) {\r\n      return;\r\n    }\r\n    const center = element.getCenterPoint(useFinalPosition);\r\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\r\n    if (!pointInArea && !inRange) {\r\n      return;\r\n    }\r\n    const distance = distanceMetric(position, center);\r\n    if (distance < minDistance) {\r\n      items = [{element, datasetIndex, index}];\r\n      minDistance = distance;\r\n    } else if (distance === minDistance) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\r\n  if (!includeInvisible && !chart.isPointInArea(position)) {\r\n    return [];\r\n  }\r\n  return axis === 'r' && !intersect\r\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\r\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\r\n}\r\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\r\n  const items = [];\r\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n  let intersectsItem = false;\r\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\r\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\r\n    }\r\n  });\r\n  if (intersect && !intersectsItem) {\r\n    return [];\r\n  }\r\n  return items;\r\n}\r\nvar Interaction = {\r\n  evaluateInteractionItems,\r\n  modes: {\r\n    index(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'x';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      const items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\r\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\r\n      const elements = [];\r\n      if (!items.length) {\r\n        return [];\r\n      }\r\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\r\n        const index = items[0].index;\r\n        const element = meta.data[index];\r\n        if (element && !element.skip) {\r\n          elements.push({element, datasetIndex: meta.index, index});\r\n        }\r\n      });\r\n      return elements;\r\n    },\r\n    dataset(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      let items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\r\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\r\n      if (items.length > 0) {\r\n        const datasetIndex = items[0].datasetIndex;\r\n        const data = chart.getDatasetMeta(datasetIndex).data;\r\n        items = [];\r\n        for (let i = 0; i < data.length; ++i) {\r\n          items.push({element: data[i], datasetIndex, index: i});\r\n        }\r\n      }\r\n      return items;\r\n    },\r\n    point(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\r\n    },\r\n    nearest(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\r\n    },\r\n    x(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\r\n    },\r\n    y(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\r\n    }\r\n  }\r\n};\r\n\r\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\r\nfunction filterByPosition(array, position) {\r\n  return array.filter(v => v.pos === position);\r\n}\r\nfunction filterDynamicPositionByAxis(array, axis) {\r\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n}\r\nfunction sortByWeight(array, reverse) {\r\n  return array.sort((a, b) => {\r\n    const v0 = reverse ? b : a;\r\n    const v1 = reverse ? a : b;\r\n    return v0.weight === v1.weight ?\r\n      v0.index - v1.index :\r\n      v0.weight - v1.weight;\r\n  });\r\n}\r\nfunction wrapBoxes(boxes) {\r\n  const layoutBoxes = [];\r\n  let i, ilen, box, pos, stack, stackWeight;\r\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\r\n    box = boxes[i];\r\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\r\n    layoutBoxes.push({\r\n      index: i,\r\n      box,\r\n      pos,\r\n      horizontal: box.isHorizontal(),\r\n      weight: box.weight,\r\n      stack: stack && (pos + stack),\r\n      stackWeight\r\n    });\r\n  }\r\n  return layoutBoxes;\r\n}\r\nfunction buildStacks(layouts) {\r\n  const stacks = {};\r\n  for (const wrap of layouts) {\r\n    const {stack, pos, stackWeight} = wrap;\r\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\r\n      continue;\r\n    }\r\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\r\n    _stack.count++;\r\n    _stack.weight += stackWeight;\r\n  }\r\n  return stacks;\r\n}\r\nfunction setLayoutDims(layouts, params) {\r\n  const stacks = buildStacks(layouts);\r\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\r\n  let i, ilen, layout;\r\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\r\n    layout = layouts[i];\r\n    const {fullSize} = layout.box;\r\n    const stack = stacks[layout.stack];\r\n    const factor = stack && layout.stackWeight / stack.weight;\r\n    if (layout.horizontal) {\r\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\r\n      layout.height = hBoxMaxHeight;\r\n    } else {\r\n      layout.width = vBoxMaxWidth;\r\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\r\n    }\r\n  }\r\n  return stacks;\r\n}\r\nfunction buildLayoutBoxes(boxes) {\r\n  const layoutBoxes = wrapBoxes(boxes);\r\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\r\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n  return {\r\n    fullSize,\r\n    leftAndTop: left.concat(top),\r\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n    vertical: left.concat(right).concat(centerVertical),\r\n    horizontal: top.concat(bottom).concat(centerHorizontal)\r\n  };\r\n}\r\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\r\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n}\r\nfunction updateMaxPadding(maxPadding, boxPadding) {\r\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n}\r\nfunction updateDims(chartArea, params, layout, stacks) {\r\n  const {pos, box} = layout;\r\n  const maxPadding = chartArea.maxPadding;\r\n  if (!isObject(pos)) {\r\n    if (layout.size) {\r\n      chartArea[pos] -= layout.size;\r\n    }\r\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\r\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\r\n    layout.size = stack.size / stack.count;\r\n    chartArea[pos] += layout.size;\r\n  }\r\n  if (box.getPadding) {\r\n    updateMaxPadding(maxPadding, box.getPadding());\r\n  }\r\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n  const widthChanged = newWidth !== chartArea.w;\r\n  const heightChanged = newHeight !== chartArea.h;\r\n  chartArea.w = newWidth;\r\n  chartArea.h = newHeight;\r\n  return layout.horizontal\r\n    ? {same: widthChanged, other: heightChanged}\r\n    : {same: heightChanged, other: widthChanged};\r\n}\r\nfunction handleMaxPadding(chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function updatePos(pos) {\r\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n    chartArea[pos] += change;\r\n    return change;\r\n  }\r\n  chartArea.y += updatePos('top');\r\n  chartArea.x += updatePos('left');\r\n  updatePos('right');\r\n  updatePos('bottom');\r\n}\r\nfunction getMargins(horizontal, chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function marginForPositions(positions) {\r\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\r\n    positions.forEach((pos) => {\r\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n    });\r\n    return margin;\r\n  }\r\n  return horizontal\r\n    ? marginForPositions(['left', 'right'])\r\n    : marginForPositions(['top', 'bottom']);\r\n}\r\nfunction fitBoxes(boxes, chartArea, params, stacks) {\r\n  const refitBoxes = [];\r\n  let i, ilen, layout, box, refit, changed;\r\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    box.update(\r\n      layout.width || chartArea.w,\r\n      layout.height || chartArea.h,\r\n      getMargins(layout.horizontal, chartArea)\r\n    );\r\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\r\n    refit |= same && refitBoxes.length;\r\n    changed = changed || other;\r\n    if (!box.fullSize) {\r\n      refitBoxes.push(layout);\r\n    }\r\n  }\r\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\r\n}\r\nfunction setBoxDims(box, left, top, width, height) {\r\n  box.top = top;\r\n  box.left = left;\r\n  box.right = left + width;\r\n  box.bottom = top + height;\r\n  box.width = width;\r\n  box.height = height;\r\n}\r\nfunction placeBoxes(boxes, chartArea, params, stacks) {\r\n  const userPadding = params.padding;\r\n  let {x, y} = chartArea;\r\n  for (const layout of boxes) {\r\n    const box = layout.box;\r\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\r\n    const weight = (layout.stackWeight / stack.weight) || 1;\r\n    if (layout.horizontal) {\r\n      const width = chartArea.w * weight;\r\n      const height = stack.size || box.height;\r\n      if (defined(stack.start)) {\r\n        y = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\r\n      } else {\r\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\r\n      }\r\n      stack.start = y;\r\n      stack.placed += width;\r\n      y = box.bottom;\r\n    } else {\r\n      const height = chartArea.h * weight;\r\n      const width = stack.size || box.width;\r\n      if (defined(stack.start)) {\r\n        x = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\r\n      } else {\r\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\r\n      }\r\n      stack.start = x;\r\n      stack.placed += height;\r\n      x = box.right;\r\n    }\r\n  }\r\n  chartArea.x = x;\r\n  chartArea.y = y;\r\n}\r\ndefaults.set('layout', {\r\n  autoPadding: true,\r\n  padding: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n});\r\nvar layouts = {\r\n  addBox(chart, item) {\r\n    if (!chart.boxes) {\r\n      chart.boxes = [];\r\n    }\r\n    item.fullSize = item.fullSize || false;\r\n    item.position = item.position || 'top';\r\n    item.weight = item.weight || 0;\r\n    item._layers = item._layers || function() {\r\n      return [{\r\n        z: 0,\r\n        draw(chartArea) {\r\n          item.draw(chartArea);\r\n        }\r\n      }];\r\n    };\r\n    chart.boxes.push(item);\r\n  },\r\n  removeBox(chart, layoutItem) {\r\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n    if (index !== -1) {\r\n      chart.boxes.splice(index, 1);\r\n    }\r\n  },\r\n  configure(chart, item, options) {\r\n    item.fullSize = options.fullSize;\r\n    item.position = options.position;\r\n    item.weight = options.weight;\r\n  },\r\n  update(chart, width, height, minPadding) {\r\n    if (!chart) {\r\n      return;\r\n    }\r\n    const padding = toPadding(chart.options.layout.padding);\r\n    const availableWidth = Math.max(width - padding.width, 0);\r\n    const availableHeight = Math.max(height - padding.height, 0);\r\n    const boxes = buildLayoutBoxes(chart.boxes);\r\n    const verticalBoxes = boxes.vertical;\r\n    const horizontalBoxes = boxes.horizontal;\r\n    each(chart.boxes, box => {\r\n      if (typeof box.beforeLayout === 'function') {\r\n        box.beforeLayout();\r\n      }\r\n    });\r\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\r\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n    const params = Object.freeze({\r\n      outerWidth: width,\r\n      outerHeight: height,\r\n      padding,\r\n      availableWidth,\r\n      availableHeight,\r\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n      hBoxMaxHeight: availableHeight / 2\r\n    });\r\n    const maxPadding = Object.assign({}, padding);\r\n    updateMaxPadding(maxPadding, toPadding(minPadding));\r\n    const chartArea = Object.assign({\r\n      maxPadding,\r\n      w: availableWidth,\r\n      h: availableHeight,\r\n      x: padding.left,\r\n      y: padding.top\r\n    }, padding);\r\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\r\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\r\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    }\r\n    handleMaxPadding(chartArea);\r\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\r\n    chartArea.x += chartArea.w;\r\n    chartArea.y += chartArea.h;\r\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\r\n    chart.chartArea = {\r\n      left: chartArea.left,\r\n      top: chartArea.top,\r\n      right: chartArea.left + chartArea.w,\r\n      bottom: chartArea.top + chartArea.h,\r\n      height: chartArea.h,\r\n      width: chartArea.w,\r\n    };\r\n    each(boxes.chartArea, (layout) => {\r\n      const box = layout.box;\r\n      Object.assign(box, chart.chartArea);\r\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\r\n    });\r\n  }\r\n};\r\n\r\nclass BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {}\r\n  releaseContext(context) {\r\n    return false;\r\n  }\r\n  addEventListener(chart, type, listener) {}\r\n  removeEventListener(chart, type, listener) {}\r\n  getDevicePixelRatio() {\r\n    return 1;\r\n  }\r\n  getMaximumSize(element, width, height, aspectRatio) {\r\n    width = Math.max(0, width || element.width);\r\n    height = height || element.height;\r\n    return {\r\n      width,\r\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n    };\r\n  }\r\n  isAttached(canvas) {\r\n    return true;\r\n  }\r\n  updateConfig(config) {\r\n  }\r\n}\r\n\r\nclass BasicPlatform extends BasePlatform {\r\n  acquireContext(item) {\r\n    return item && item.getContext && item.getContext('2d') || null;\r\n  }\r\n  updateConfig(config) {\r\n    config.options.animation = false;\r\n  }\r\n}\r\n\r\nconst EXPANDO_KEY = '$chartjs';\r\nconst EVENT_TYPES = {\r\n  touchstart: 'mousedown',\r\n  touchmove: 'mousemove',\r\n  touchend: 'mouseup',\r\n  pointerenter: 'mouseenter',\r\n  pointerdown: 'mousedown',\r\n  pointermove: 'mousemove',\r\n  pointerup: 'mouseup',\r\n  pointerleave: 'mouseout',\r\n  pointerout: 'mouseout'\r\n};\r\nconst isNullOrEmpty = value => value === null || value === '';\r\nfunction initCanvas(canvas, aspectRatio) {\r\n  const style = canvas.style;\r\n  const renderHeight = canvas.getAttribute('height');\r\n  const renderWidth = canvas.getAttribute('width');\r\n  canvas[EXPANDO_KEY] = {\r\n    initial: {\r\n      height: renderHeight,\r\n      width: renderWidth,\r\n      style: {\r\n        display: style.display,\r\n        height: style.height,\r\n        width: style.width\r\n      }\r\n    }\r\n  };\r\n  style.display = style.display || 'block';\r\n  style.boxSizing = style.boxSizing || 'border-box';\r\n  if (isNullOrEmpty(renderWidth)) {\r\n    const displayWidth = readUsedSize(canvas, 'width');\r\n    if (displayWidth !== undefined) {\r\n      canvas.width = displayWidth;\r\n    }\r\n  }\r\n  if (isNullOrEmpty(renderHeight)) {\r\n    if (canvas.style.height === '') {\r\n      canvas.height = canvas.width / (aspectRatio || 2);\r\n    } else {\r\n      const displayHeight = readUsedSize(canvas, 'height');\r\n      if (displayHeight !== undefined) {\r\n        canvas.height = displayHeight;\r\n      }\r\n    }\r\n  }\r\n  return canvas;\r\n}\r\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\r\nfunction addListener(node, type, listener) {\r\n  node.addEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction removeListener(chart, type, listener) {\r\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction fromNativeEvent(event, chart) {\r\n  const type = EVENT_TYPES[event.type] || event.type;\r\n  const {x, y} = getRelativePosition(event, chart);\r\n  return {\r\n    type,\r\n    chart,\r\n    native: event,\r\n    x: x !== undefined ? x : null,\r\n    y: y !== undefined ? y : null,\r\n  };\r\n}\r\nfunction nodeListContains(nodeList, canvas) {\r\n  for (const node of nodeList) {\r\n    if (node === canvas || node.contains(canvas)) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction createAttachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nfunction createDetachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nconst drpListeningCharts = new Map();\r\nlet oldDevicePixelRatio = 0;\r\nfunction onWindowResize() {\r\n  const dpr = window.devicePixelRatio;\r\n  if (dpr === oldDevicePixelRatio) {\r\n    return;\r\n  }\r\n  oldDevicePixelRatio = dpr;\r\n  drpListeningCharts.forEach((resize, chart) => {\r\n    if (chart.currentDevicePixelRatio !== dpr) {\r\n      resize();\r\n    }\r\n  });\r\n}\r\nfunction listenDevicePixelRatioChanges(chart, resize) {\r\n  if (!drpListeningCharts.size) {\r\n    window.addEventListener('resize', onWindowResize);\r\n  }\r\n  drpListeningCharts.set(chart, resize);\r\n}\r\nfunction unlistenDevicePixelRatioChanges(chart) {\r\n  drpListeningCharts.delete(chart);\r\n  if (!drpListeningCharts.size) {\r\n    window.removeEventListener('resize', onWindowResize);\r\n  }\r\n}\r\nfunction createResizeObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const resize = throttled((width, height) => {\r\n    const w = container.clientWidth;\r\n    listener(width, height);\r\n    if (w < container.clientWidth) {\r\n      listener();\r\n    }\r\n  }, window);\r\n  const observer = new ResizeObserver(entries => {\r\n    const entry = entries[0];\r\n    const width = entry.contentRect.width;\r\n    const height = entry.contentRect.height;\r\n    if (width === 0 && height === 0) {\r\n      return;\r\n    }\r\n    resize(width, height);\r\n  });\r\n  observer.observe(container);\r\n  listenDevicePixelRatioChanges(chart, resize);\r\n  return observer;\r\n}\r\nfunction releaseObserver(chart, type, observer) {\r\n  if (observer) {\r\n    observer.disconnect();\r\n  }\r\n  if (type === 'resize') {\r\n    unlistenDevicePixelRatioChanges(chart);\r\n  }\r\n}\r\nfunction createProxyAndListen(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const proxy = throttled((event) => {\r\n    if (chart.ctx !== null) {\r\n      listener(fromNativeEvent(event, chart));\r\n    }\r\n  }, chart, (args) => {\r\n    const event = args[0];\r\n    return [event, event.offsetX, event.offsetY];\r\n  });\r\n  addListener(canvas, type, proxy);\r\n  return proxy;\r\n}\r\nclass DomPlatform extends BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {\r\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n    if (context && context.canvas === canvas) {\r\n      initCanvas(canvas, aspectRatio);\r\n      return context;\r\n    }\r\n    return null;\r\n  }\r\n  releaseContext(context) {\r\n    const canvas = context.canvas;\r\n    if (!canvas[EXPANDO_KEY]) {\r\n      return false;\r\n    }\r\n    const initial = canvas[EXPANDO_KEY].initial;\r\n    ['height', 'width'].forEach((prop) => {\r\n      const value = initial[prop];\r\n      if (isNullOrUndef(value)) {\r\n        canvas.removeAttribute(prop);\r\n      } else {\r\n        canvas.setAttribute(prop, value);\r\n      }\r\n    });\r\n    const style = initial.style || {};\r\n    Object.keys(style).forEach((key) => {\r\n      canvas.style[key] = style[key];\r\n    });\r\n    canvas.width = canvas.width;\r\n    delete canvas[EXPANDO_KEY];\r\n    return true;\r\n  }\r\n  addEventListener(chart, type, listener) {\r\n    this.removeEventListener(chart, type);\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const handlers = {\r\n      attach: createAttachObserver,\r\n      detach: createDetachObserver,\r\n      resize: createResizeObserver\r\n    };\r\n    const handler = handlers[type] || createProxyAndListen;\r\n    proxies[type] = handler(chart, type, listener);\r\n  }\r\n  removeEventListener(chart, type) {\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const proxy = proxies[type];\r\n    if (!proxy) {\r\n      return;\r\n    }\r\n    const handlers = {\r\n      attach: releaseObserver,\r\n      detach: releaseObserver,\r\n      resize: releaseObserver\r\n    };\r\n    const handler = handlers[type] || removeListener;\r\n    handler(chart, type, proxy);\r\n    proxies[type] = undefined;\r\n  }\r\n  getDevicePixelRatio() {\r\n    return window.devicePixelRatio;\r\n  }\r\n  getMaximumSize(canvas, width, height, aspectRatio) {\r\n    return getMaximumSize(canvas, width, height, aspectRatio);\r\n  }\r\n  isAttached(canvas) {\r\n    const container = _getParentNode(canvas);\r\n    return !!(container && container.isConnected);\r\n  }\r\n}\r\n\r\nfunction _detectPlatform(canvas) {\r\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\r\n    return BasicPlatform;\r\n  }\r\n  return DomPlatform;\r\n}\r\n\r\nclass PluginService {\r\n  constructor() {\r\n    this._init = [];\r\n  }\r\n  notify(chart, hook, args, filter) {\r\n    if (hook === 'beforeInit') {\r\n      this._init = this._createDescriptors(chart, true);\r\n      this._notify(this._init, chart, 'install');\r\n    }\r\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\r\n    const result = this._notify(descriptors, chart, hook, args);\r\n    if (hook === 'afterDestroy') {\r\n      this._notify(descriptors, chart, 'stop');\r\n      this._notify(this._init, chart, 'uninstall');\r\n    }\r\n    return result;\r\n  }\r\n  _notify(descriptors, chart, hook, args) {\r\n    args = args || {};\r\n    for (const descriptor of descriptors) {\r\n      const plugin = descriptor.plugin;\r\n      const method = plugin[hook];\r\n      const params = [chart, args, descriptor.options];\r\n      if (callback(method, params, plugin) === false && args.cancelable) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  invalidate() {\r\n    if (!isNullOrUndef(this._cache)) {\r\n      this._oldCache = this._cache;\r\n      this._cache = undefined;\r\n    }\r\n  }\r\n  _descriptors(chart) {\r\n    if (this._cache) {\r\n      return this._cache;\r\n    }\r\n    const descriptors = this._cache = this._createDescriptors(chart);\r\n    this._notifyStateChanges(chart);\r\n    return descriptors;\r\n  }\r\n  _createDescriptors(chart, all) {\r\n    const config = chart && chart.config;\r\n    const options = valueOrDefault(config.options && config.options.plugins, {});\r\n    const plugins = allPlugins(config);\r\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n  }\r\n  _notifyStateChanges(chart) {\r\n    const previousDescriptors = this._oldCache || [];\r\n    const descriptors = this._cache;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\r\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n  }\r\n}\r\nfunction allPlugins(config) {\r\n  const localIds = {};\r\n  const plugins = [];\r\n  const keys = Object.keys(registry.plugins.items);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    plugins.push(registry.getPlugin(keys[i]));\r\n  }\r\n  const local = config.plugins || [];\r\n  for (let i = 0; i < local.length; i++) {\r\n    const plugin = local[i];\r\n    if (plugins.indexOf(plugin) === -1) {\r\n      plugins.push(plugin);\r\n      localIds[plugin.id] = true;\r\n    }\r\n  }\r\n  return {plugins, localIds};\r\n}\r\nfunction getOpts(options, all) {\r\n  if (!all && options === false) {\r\n    return null;\r\n  }\r\n  if (options === true) {\r\n    return {};\r\n  }\r\n  return options;\r\n}\r\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\r\n  const result = [];\r\n  const context = chart.getContext();\r\n  for (const plugin of plugins) {\r\n    const id = plugin.id;\r\n    const opts = getOpts(options[id], all);\r\n    if (opts === null) {\r\n      continue;\r\n    }\r\n    result.push({\r\n      plugin,\r\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\r\n    });\r\n  }\r\n  return result;\r\n}\r\nfunction pluginOpts(config, {plugin, local}, opts, context) {\r\n  const keys = config.pluginScopeKeys(plugin);\r\n  const scopes = config.getOptionScopes(opts, keys);\r\n  if (local && plugin.defaults) {\r\n    scopes.push(plugin.defaults);\r\n  }\r\n  return config.createResolver(scopes, context, [''], {\r\n    scriptable: false,\r\n    indexable: false,\r\n    allKeys: true\r\n  });\r\n}\r\n\r\nfunction getIndexAxis(type, options) {\r\n  const datasetDefaults = defaults.datasets[type] || {};\r\n  const datasetOptions = (options.datasets || {})[type] || {};\r\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n}\r\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\r\n  let axis = id;\r\n  if (id === '_index_') {\r\n    axis = indexAxis;\r\n  } else if (id === '_value_') {\r\n    axis = indexAxis === 'x' ? 'y' : 'x';\r\n  }\r\n  return axis;\r\n}\r\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n  return axis === indexAxis ? '_index_' : '_value_';\r\n}\r\nfunction axisFromPosition(position) {\r\n  if (position === 'top' || position === 'bottom') {\r\n    return 'x';\r\n  }\r\n  if (position === 'left' || position === 'right') {\r\n    return 'y';\r\n  }\r\n}\r\nfunction determineAxis(id, scaleOptions) {\r\n  if (id === 'x' || id === 'y') {\r\n    return id;\r\n  }\r\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\r\n}\r\nfunction mergeScaleConfig(config, options) {\r\n  const chartDefaults = overrides[config.type] || {scales: {}};\r\n  const configScales = options.scales || {};\r\n  const chartIndexAxis = getIndexAxis(config.type, options);\r\n  const firstIDs = Object.create(null);\r\n  const scales = Object.create(null);\r\n  Object.keys(configScales).forEach(id => {\r\n    const scaleConf = configScales[id];\r\n    if (!isObject(scaleConf)) {\r\n      return console.error(`Invalid scale configuration for scale: ${id}`);\r\n    }\r\n    if (scaleConf._proxy) {\r\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\r\n    }\r\n    const axis = determineAxis(id, scaleConf);\r\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n    const defaultScaleOptions = chartDefaults.scales || {};\r\n    firstIDs[axis] = firstIDs[axis] || id;\r\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\r\n  });\r\n  config.data.datasets.forEach(dataset => {\r\n    const type = dataset.type || config.type;\r\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n    const datasetDefaults = overrides[type] || {};\r\n    const defaultScaleOptions = datasetDefaults.scales || {};\r\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\r\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\r\n      scales[id] = scales[id] || Object.create(null);\r\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\r\n    });\r\n  });\r\n  Object.keys(scales).forEach(key => {\r\n    const scale = scales[key];\r\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\r\n  });\r\n  return scales;\r\n}\r\nfunction initOptions(config) {\r\n  const options = config.options || (config.options = {});\r\n  options.plugins = valueOrDefault(options.plugins, {});\r\n  options.scales = mergeScaleConfig(config, options);\r\n}\r\nfunction initData(data) {\r\n  data = data || {};\r\n  data.datasets = data.datasets || [];\r\n  data.labels = data.labels || [];\r\n  return data;\r\n}\r\nfunction initConfig(config) {\r\n  config = config || {};\r\n  config.data = initData(config.data);\r\n  initOptions(config);\r\n  return config;\r\n}\r\nconst keyCache = new Map();\r\nconst keysCached = new Set();\r\nfunction cachedKeys(cacheKey, generate) {\r\n  let keys = keyCache.get(cacheKey);\r\n  if (!keys) {\r\n    keys = generate();\r\n    keyCache.set(cacheKey, keys);\r\n    keysCached.add(keys);\r\n  }\r\n  return keys;\r\n}\r\nconst addIfFound = (set, obj, key) => {\r\n  const opts = resolveObjectKey(obj, key);\r\n  if (opts !== undefined) {\r\n    set.add(opts);\r\n  }\r\n};\r\nclass Config {\r\n  constructor(config) {\r\n    this._config = initConfig(config);\r\n    this._scopeCache = new Map();\r\n    this._resolverCache = new Map();\r\n  }\r\n  get platform() {\r\n    return this._config.platform;\r\n  }\r\n  get type() {\r\n    return this._config.type;\r\n  }\r\n  set type(type) {\r\n    this._config.type = type;\r\n  }\r\n  get data() {\r\n    return this._config.data;\r\n  }\r\n  set data(data) {\r\n    this._config.data = initData(data);\r\n  }\r\n  get options() {\r\n    return this._config.options;\r\n  }\r\n  set options(options) {\r\n    this._config.options = options;\r\n  }\r\n  get plugins() {\r\n    return this._config.plugins;\r\n  }\r\n  update() {\r\n    const config = this._config;\r\n    this.clearCache();\r\n    initOptions(config);\r\n  }\r\n  clearCache() {\r\n    this._scopeCache.clear();\r\n    this._resolverCache.clear();\r\n  }\r\n  datasetScopeKeys(datasetType) {\r\n    return cachedKeys(datasetType,\r\n      () => [[\r\n        `datasets.${datasetType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  datasetAnimationScopeKeys(datasetType, transition) {\r\n    return cachedKeys(`${datasetType}.transition.${transition}`,\r\n      () => [\r\n        [\r\n          `datasets.${datasetType}.transitions.${transition}`,\r\n          `transitions.${transition}`,\r\n        ],\r\n        [\r\n          `datasets.${datasetType}`,\r\n          ''\r\n        ]\r\n      ]);\r\n  }\r\n  datasetElementScopeKeys(datasetType, elementType) {\r\n    return cachedKeys(`${datasetType}-${elementType}`,\r\n      () => [[\r\n        `datasets.${datasetType}.elements.${elementType}`,\r\n        `datasets.${datasetType}`,\r\n        `elements.${elementType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  pluginScopeKeys(plugin) {\r\n    const id = plugin.id;\r\n    const type = this.type;\r\n    return cachedKeys(`${type}-plugin-${id}`,\r\n      () => [[\r\n        `plugins.${id}`,\r\n        ...plugin.additionalOptionScopes || [],\r\n      ]]);\r\n  }\r\n  _cachedScopes(mainScope, resetCache) {\r\n    const _scopeCache = this._scopeCache;\r\n    let cache = _scopeCache.get(mainScope);\r\n    if (!cache || resetCache) {\r\n      cache = new Map();\r\n      _scopeCache.set(mainScope, cache);\r\n    }\r\n    return cache;\r\n  }\r\n  getOptionScopes(mainScope, keyLists, resetCache) {\r\n    const {options, type} = this;\r\n    const cache = this._cachedScopes(mainScope, resetCache);\r\n    const cached = cache.get(keyLists);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const scopes = new Set();\r\n    keyLists.forEach(keys => {\r\n      if (mainScope) {\r\n        scopes.add(mainScope);\r\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\r\n      }\r\n      keys.forEach(key => addIfFound(scopes, options, key));\r\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\r\n      keys.forEach(key => addIfFound(scopes, defaults, key));\r\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\r\n    });\r\n    const array = Array.from(scopes);\r\n    if (array.length === 0) {\r\n      array.push(Object.create(null));\r\n    }\r\n    if (keysCached.has(keyLists)) {\r\n      cache.set(keyLists, array);\r\n    }\r\n    return array;\r\n  }\r\n  chartOptionScopes() {\r\n    const {options, type} = this;\r\n    return [\r\n      options,\r\n      overrides[type] || {},\r\n      defaults.datasets[type] || {},\r\n      {type},\r\n      defaults,\r\n      descriptors\r\n    ];\r\n  }\r\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\r\n    const result = {$shared: true};\r\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\r\n    let options = resolver;\r\n    if (needContext(resolver, names)) {\r\n      result.$shared = false;\r\n      context = isFunction(context) ? context() : context;\r\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n      options = _attachContext(resolver, context, subResolver);\r\n    }\r\n    for (const prop of names) {\r\n      result[prop] = options[prop];\r\n    }\r\n    return result;\r\n  }\r\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\r\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\r\n    return isObject(context)\r\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\r\n      : resolver;\r\n  }\r\n}\r\nfunction getResolver(resolverCache, scopes, prefixes) {\r\n  let cache = resolverCache.get(scopes);\r\n  if (!cache) {\r\n    cache = new Map();\r\n    resolverCache.set(scopes, cache);\r\n  }\r\n  const cacheKey = prefixes.join();\r\n  let cached = cache.get(cacheKey);\r\n  if (!cached) {\r\n    const resolver = _createResolver(scopes, prefixes);\r\n    cached = {\r\n      resolver,\r\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\r\n    };\r\n    cache.set(cacheKey, cached);\r\n  }\r\n  return cached;\r\n}\r\nconst hasFunction = value => isObject(value)\r\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\r\nfunction needContext(proxy, names) {\r\n  const {isScriptable, isIndexable} = _descriptors(proxy);\r\n  for (const prop of names) {\r\n    const scriptable = isScriptable(prop);\r\n    const indexable = isIndexable(prop);\r\n    const value = (indexable || scriptable) && proxy[prop];\r\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\r\n      || (indexable && isArray(value))) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nvar version = \"3.9.1\";\r\n\r\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\r\nfunction positionIsHorizontal(position, axis) {\r\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\r\n}\r\nfunction compare2Level(l1, l2) {\r\n  return function(a, b) {\r\n    return a[l1] === b[l1]\r\n      ? a[l2] - b[l2]\r\n      : a[l1] - b[l1];\r\n  };\r\n}\r\nfunction onAnimationsComplete(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  chart.notifyPlugins('afterRender');\r\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\r\n}\r\nfunction onAnimationProgress(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\r\n}\r\nfunction getCanvas(item) {\r\n  if (_isDomSupported() && typeof item === 'string') {\r\n    item = document.getElementById(item);\r\n  } else if (item && item.length) {\r\n    item = item[0];\r\n  }\r\n  if (item && item.canvas) {\r\n    item = item.canvas;\r\n  }\r\n  return item;\r\n}\r\nconst instances = {};\r\nconst getChart = (key) => {\r\n  const canvas = getCanvas(key);\r\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\r\n};\r\nfunction moveNumericKeys(obj, start, move) {\r\n  const keys = Object.keys(obj);\r\n  for (const key of keys) {\r\n    const intKey = +key;\r\n    if (intKey >= start) {\r\n      const value = obj[key];\r\n      delete obj[key];\r\n      if (move > 0 || intKey > start) {\r\n        obj[intKey + move] = value;\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\r\n  if (!inChartArea || e.type === 'mouseout') {\r\n    return null;\r\n  }\r\n  if (isClick) {\r\n    return lastEvent;\r\n  }\r\n  return e;\r\n}\r\nclass Chart {\r\n  constructor(item, userConfig) {\r\n    const config = this.config = new Config(userConfig);\r\n    const initialCanvas = getCanvas(item);\r\n    const existingChart = getChart(initialCanvas);\r\n    if (existingChart) {\r\n      throw new Error(\r\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\r\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\r\n      );\r\n    }\r\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\r\n    this.platform.updateConfig(config);\r\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n    const canvas = context && context.canvas;\r\n    const height = canvas && canvas.height;\r\n    const width = canvas && canvas.width;\r\n    this.id = uid();\r\n    this.ctx = context;\r\n    this.canvas = canvas;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._options = options;\r\n    this._aspectRatio = this.aspectRatio;\r\n    this._layers = [];\r\n    this._metasets = [];\r\n    this._stacks = undefined;\r\n    this.boxes = [];\r\n    this.currentDevicePixelRatio = undefined;\r\n    this.chartArea = undefined;\r\n    this._active = [];\r\n    this._lastEvent = undefined;\r\n    this._listeners = {};\r\n    this._responsiveListeners = undefined;\r\n    this._sortedMetasets = [];\r\n    this.scales = {};\r\n    this._plugins = new PluginService();\r\n    this.$proxies = {};\r\n    this._hiddenIndices = {};\r\n    this.attached = false;\r\n    this._animationsDisabled = undefined;\r\n    this.$context = undefined;\r\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\r\n    this._dataChanges = [];\r\n    instances[this.id] = this;\r\n    if (!context || !canvas) {\r\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n      return;\r\n    }\r\n    animator.listen(this, 'complete', onAnimationsComplete);\r\n    animator.listen(this, 'progress', onAnimationProgress);\r\n    this._initialize();\r\n    if (this.attached) {\r\n      this.update();\r\n    }\r\n  }\r\n  get aspectRatio() {\r\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\r\n    if (!isNullOrUndef(aspectRatio)) {\r\n      return aspectRatio;\r\n    }\r\n    if (maintainAspectRatio && _aspectRatio) {\r\n      return _aspectRatio;\r\n    }\r\n    return height ? width / height : null;\r\n  }\r\n  get data() {\r\n    return this.config.data;\r\n  }\r\n  set data(data) {\r\n    this.config.data = data;\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n  set options(options) {\r\n    this.config.options = options;\r\n  }\r\n  _initialize() {\r\n    this.notifyPlugins('beforeInit');\r\n    if (this.options.responsive) {\r\n      this.resize();\r\n    } else {\r\n      retinaScale(this, this.options.devicePixelRatio);\r\n    }\r\n    this.bindEvents();\r\n    this.notifyPlugins('afterInit');\r\n    return this;\r\n  }\r\n  clear() {\r\n    clearCanvas(this.canvas, this.ctx);\r\n    return this;\r\n  }\r\n  stop() {\r\n    animator.stop(this);\r\n    return this;\r\n  }\r\n  resize(width, height) {\r\n    if (!animator.running(this)) {\r\n      this._resize(width, height);\r\n    } else {\r\n      this._resizeBeforeDraw = {width, height};\r\n    }\r\n  }\r\n  _resize(width, height) {\r\n    const options = this.options;\r\n    const canvas = this.canvas;\r\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\r\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\r\n    const mode = this.width ? 'resize' : 'attach';\r\n    this.width = newSize.width;\r\n    this.height = newSize.height;\r\n    this._aspectRatio = this.aspectRatio;\r\n    if (!retinaScale(this, newRatio, true)) {\r\n      return;\r\n    }\r\n    this.notifyPlugins('resize', {size: newSize});\r\n    callback(options.onResize, [this, newSize], this);\r\n    if (this.attached) {\r\n      if (this._doResize(mode)) {\r\n        this.render();\r\n      }\r\n    }\r\n  }\r\n  ensureScalesHaveIDs() {\r\n    const options = this.options;\r\n    const scalesOptions = options.scales || {};\r\n    each(scalesOptions, (axisOptions, axisID) => {\r\n      axisOptions.id = axisID;\r\n    });\r\n  }\r\n  buildOrUpdateScales() {\r\n    const options = this.options;\r\n    const scaleOpts = options.scales;\r\n    const scales = this.scales;\r\n    const updated = Object.keys(scales).reduce((obj, id) => {\r\n      obj[id] = false;\r\n      return obj;\r\n    }, {});\r\n    let items = [];\r\n    if (scaleOpts) {\r\n      items = items.concat(\r\n        Object.keys(scaleOpts).map((id) => {\r\n          const scaleOptions = scaleOpts[id];\r\n          const axis = determineAxis(id, scaleOptions);\r\n          const isRadial = axis === 'r';\r\n          const isHorizontal = axis === 'x';\r\n          return {\r\n            options: scaleOptions,\r\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n          };\r\n        })\r\n      );\r\n    }\r\n    each(items, (item) => {\r\n      const scaleOptions = item.options;\r\n      const id = scaleOptions.id;\r\n      const axis = determineAxis(id, scaleOptions);\r\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n        scaleOptions.position = item.dposition;\r\n      }\r\n      updated[id] = true;\r\n      let scale = null;\r\n      if (id in scales && scales[id].type === scaleType) {\r\n        scale = scales[id];\r\n      } else {\r\n        const scaleClass = registry.getScale(scaleType);\r\n        scale = new scaleClass({\r\n          id,\r\n          type: scaleType,\r\n          ctx: this.ctx,\r\n          chart: this\r\n        });\r\n        scales[scale.id] = scale;\r\n      }\r\n      scale.init(scaleOptions, options);\r\n    });\r\n    each(updated, (hasUpdated, id) => {\r\n      if (!hasUpdated) {\r\n        delete scales[id];\r\n      }\r\n    });\r\n    each(scales, (scale) => {\r\n      layouts.configure(this, scale, scale.options);\r\n      layouts.addBox(this, scale);\r\n    });\r\n  }\r\n  _updateMetasets() {\r\n    const metasets = this._metasets;\r\n    const numData = this.data.datasets.length;\r\n    const numMeta = metasets.length;\r\n    metasets.sort((a, b) => a.index - b.index);\r\n    if (numMeta > numData) {\r\n      for (let i = numData; i < numMeta; ++i) {\r\n        this._destroyDatasetMeta(i);\r\n      }\r\n      metasets.splice(numData, numMeta - numData);\r\n    }\r\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n  }\r\n  _removeUnreferencedMetasets() {\r\n    const {_metasets: metasets, data: {datasets}} = this;\r\n    if (metasets.length > datasets.length) {\r\n      delete this._stacks;\r\n    }\r\n    metasets.forEach((meta, index) => {\r\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\r\n        this._destroyDatasetMeta(index);\r\n      }\r\n    });\r\n  }\r\n  buildOrUpdateControllers() {\r\n    const newControllers = [];\r\n    const datasets = this.data.datasets;\r\n    let i, ilen;\r\n    this._removeUnreferencedMetasets();\r\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\r\n      const dataset = datasets[i];\r\n      let meta = this.getDatasetMeta(i);\r\n      const type = dataset.type || this.config.type;\r\n      if (meta.type && meta.type !== type) {\r\n        this._destroyDatasetMeta(i);\r\n        meta = this.getDatasetMeta(i);\r\n      }\r\n      meta.type = type;\r\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\r\n      meta.order = dataset.order || 0;\r\n      meta.index = i;\r\n      meta.label = '' + dataset.label;\r\n      meta.visible = this.isDatasetVisible(i);\r\n      if (meta.controller) {\r\n        meta.controller.updateIndex(i);\r\n        meta.controller.linkScales();\r\n      } else {\r\n        const ControllerClass = registry.getController(type);\r\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\r\n        Object.assign(ControllerClass.prototype, {\r\n          dataElementType: registry.getElement(dataElementType),\r\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n        });\r\n        meta.controller = new ControllerClass(this, i);\r\n        newControllers.push(meta.controller);\r\n      }\r\n    }\r\n    this._updateMetasets();\r\n    return newControllers;\r\n  }\r\n  _resetElements() {\r\n    each(this.data.datasets, (dataset, datasetIndex) => {\r\n      this.getDatasetMeta(datasetIndex).controller.reset();\r\n    }, this);\r\n  }\r\n  reset() {\r\n    this._resetElements();\r\n    this.notifyPlugins('reset');\r\n  }\r\n  update(mode) {\r\n    const config = this.config;\r\n    config.update();\r\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    const animsDisabled = this._animationsDisabled = !options.animation;\r\n    this._updateScales();\r\n    this._checkEventBindings();\r\n    this._updateHiddenIndices();\r\n    this._plugins.invalidate();\r\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const newControllers = this.buildOrUpdateControllers();\r\n    this.notifyPlugins('beforeElementsUpdate');\r\n    let minPadding = 0;\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\r\n      const {controller} = this.getDatasetMeta(i);\r\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n      controller.buildOrUpdateElements(reset);\r\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n    }\r\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\r\n    this._updateLayout(minPadding);\r\n    if (!animsDisabled) {\r\n      each(newControllers, (controller) => {\r\n        controller.reset();\r\n      });\r\n    }\r\n    this._updateDatasets(mode);\r\n    this.notifyPlugins('afterUpdate', {mode});\r\n    this._layers.sort(compare2Level('z', '_idx'));\r\n    const {_active, _lastEvent} = this;\r\n    if (_lastEvent) {\r\n      this._eventHandler(_lastEvent, true);\r\n    } else if (_active.length) {\r\n      this._updateHoverStyles(_active, _active, true);\r\n    }\r\n    this.render();\r\n  }\r\n  _updateScales() {\r\n    each(this.scales, (scale) => {\r\n      layouts.removeBox(this, scale);\r\n    });\r\n    this.ensureScalesHaveIDs();\r\n    this.buildOrUpdateScales();\r\n  }\r\n  _checkEventBindings() {\r\n    const options = this.options;\r\n    const existingEvents = new Set(Object.keys(this._listeners));\r\n    const newEvents = new Set(options.events);\r\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\r\n      this.unbindEvents();\r\n      this.bindEvents();\r\n    }\r\n  }\r\n  _updateHiddenIndices() {\r\n    const {_hiddenIndices} = this;\r\n    const changes = this._getUniformDataChanges() || [];\r\n    for (const {method, start, count} of changes) {\r\n      const move = method === '_removeElements' ? -count : count;\r\n      moveNumericKeys(_hiddenIndices, start, move);\r\n    }\r\n  }\r\n  _getUniformDataChanges() {\r\n    const _dataChanges = this._dataChanges;\r\n    if (!_dataChanges || !_dataChanges.length) {\r\n      return;\r\n    }\r\n    this._dataChanges = [];\r\n    const datasetCount = this.data.datasets.length;\r\n    const makeSet = (idx) => new Set(\r\n      _dataChanges\r\n        .filter(c => c[0] === idx)\r\n        .map((c, i) => i + ',' + c.splice(1).join(','))\r\n    );\r\n    const changeSet = makeSet(0);\r\n    for (let i = 1; i < datasetCount; i++) {\r\n      if (!setsEqual(changeSet, makeSet(i))) {\r\n        return;\r\n      }\r\n    }\r\n    return Array.from(changeSet)\r\n      .map(c => c.split(','))\r\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\r\n  }\r\n  _updateLayout(minPadding) {\r\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    layouts.update(this, this.width, this.height, minPadding);\r\n    const area = this.chartArea;\r\n    const noArea = area.width <= 0 || area.height <= 0;\r\n    this._layers = [];\r\n    each(this.boxes, (box) => {\r\n      if (noArea && box.position === 'chartArea') {\r\n        return;\r\n      }\r\n      if (box.configure) {\r\n        box.configure();\r\n      }\r\n      this._layers.push(...box._layers());\r\n    }, this);\r\n    this._layers.forEach((item, index) => {\r\n      item._idx = index;\r\n    });\r\n    this.notifyPlugins('afterLayout');\r\n  }\r\n  _updateDatasets(mode) {\r\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this.getDatasetMeta(i).controller.configure();\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\r\n    }\r\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\r\n  }\r\n  _updateDataset(index, mode) {\r\n    const meta = this.getDatasetMeta(index);\r\n    const args = {meta, index, mode, cancelable: true};\r\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n      return;\r\n    }\r\n    meta.controller._update(mode);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetUpdate', args);\r\n  }\r\n  render() {\r\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    if (animator.has(this)) {\r\n      if (this.attached && !animator.running(this)) {\r\n        animator.start(this);\r\n      }\r\n    } else {\r\n      this.draw();\r\n      onAnimationsComplete({chart: this});\r\n    }\r\n  }\r\n  draw() {\r\n    let i;\r\n    if (this._resizeBeforeDraw) {\r\n      const {width, height} = this._resizeBeforeDraw;\r\n      this._resize(width, height);\r\n      this._resizeBeforeDraw = null;\r\n    }\r\n    this.clear();\r\n    if (this.width <= 0 || this.height <= 0) {\r\n      return;\r\n    }\r\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const layers = this._layers;\r\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this._drawDatasets();\r\n    for (; i < layers.length; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this.notifyPlugins('afterDraw');\r\n  }\r\n  _getSortedDatasetMetas(filterVisible) {\r\n    const metasets = this._sortedMetasets;\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n      const meta = metasets[i];\r\n      if (!filterVisible || meta.visible) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  getSortedVisibleDatasetMetas() {\r\n    return this._getSortedDatasetMetas(true);\r\n  }\r\n  _drawDatasets() {\r\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const metasets = this.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      this._drawDataset(metasets[i]);\r\n    }\r\n    this.notifyPlugins('afterDatasetsDraw');\r\n  }\r\n  _drawDataset(meta) {\r\n    const ctx = this.ctx;\r\n    const clip = meta._clip;\r\n    const useClip = !clip.disabled;\r\n    const area = this.chartArea;\r\n    const args = {\r\n      meta,\r\n      index: meta.index,\r\n      cancelable: true\r\n    };\r\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (useClip) {\r\n      clipArea(ctx, {\r\n        left: clip.left === false ? 0 : area.left - clip.left,\r\n        right: clip.right === false ? this.width : area.right + clip.right,\r\n        top: clip.top === false ? 0 : area.top - clip.top,\r\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\r\n      });\r\n    }\r\n    meta.controller.draw();\r\n    if (useClip) {\r\n      unclipArea(ctx);\r\n    }\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetDraw', args);\r\n  }\r\n  isPointInArea(point) {\r\n    return _isPointInArea(point, this.chartArea, this._minPadding);\r\n  }\r\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n    const method = Interaction.modes[mode];\r\n    if (typeof method === 'function') {\r\n      return method(this, e, options, useFinalPosition);\r\n    }\r\n    return [];\r\n  }\r\n  getDatasetMeta(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    const metasets = this._metasets;\r\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\r\n    if (!meta) {\r\n      meta = {\r\n        type: null,\r\n        data: [],\r\n        dataset: null,\r\n        controller: null,\r\n        hidden: null,\r\n        xAxisID: null,\r\n        yAxisID: null,\r\n        order: dataset && dataset.order || 0,\r\n        index: datasetIndex,\r\n        _dataset: dataset,\r\n        _parsed: [],\r\n        _sorted: false\r\n      };\r\n      metasets.push(meta);\r\n    }\r\n    return meta;\r\n  }\r\n  getContext() {\r\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\r\n  }\r\n  getVisibleDatasetCount() {\r\n    return this.getSortedVisibleDatasetMetas().length;\r\n  }\r\n  isDatasetVisible(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    if (!dataset) {\r\n      return false;\r\n    }\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n  }\r\n  setDatasetVisibility(datasetIndex, visible) {\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    meta.hidden = !visible;\r\n  }\r\n  toggleDataVisibility(index) {\r\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n  }\r\n  getDataVisibility(index) {\r\n    return !this._hiddenIndices[index];\r\n  }\r\n  _updateVisibility(datasetIndex, dataIndex, visible) {\r\n    const mode = visible ? 'show' : 'hide';\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    const anims = meta.controller._resolveAnimations(undefined, mode);\r\n    if (defined(dataIndex)) {\r\n      meta.data[dataIndex].hidden = !visible;\r\n      this.update();\r\n    } else {\r\n      this.setDatasetVisibility(datasetIndex, visible);\r\n      anims.update(meta, {visible});\r\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n    }\r\n  }\r\n  hide(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, false);\r\n  }\r\n  show(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, true);\r\n  }\r\n  _destroyDatasetMeta(datasetIndex) {\r\n    const meta = this._metasets[datasetIndex];\r\n    if (meta && meta.controller) {\r\n      meta.controller._destroy();\r\n    }\r\n    delete this._metasets[datasetIndex];\r\n  }\r\n  _stop() {\r\n    let i, ilen;\r\n    this.stop();\r\n    animator.remove(this);\r\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._destroyDatasetMeta(i);\r\n    }\r\n  }\r\n  destroy() {\r\n    this.notifyPlugins('beforeDestroy');\r\n    const {canvas, ctx} = this;\r\n    this._stop();\r\n    this.config.clearCache();\r\n    if (canvas) {\r\n      this.unbindEvents();\r\n      clearCanvas(canvas, ctx);\r\n      this.platform.releaseContext(ctx);\r\n      this.canvas = null;\r\n      this.ctx = null;\r\n    }\r\n    this.notifyPlugins('destroy');\r\n    delete instances[this.id];\r\n    this.notifyPlugins('afterDestroy');\r\n  }\r\n  toBase64Image(...args) {\r\n    return this.canvas.toDataURL(...args);\r\n  }\r\n  bindEvents() {\r\n    this.bindUserEvents();\r\n    if (this.options.responsive) {\r\n      this.bindResponsiveEvents();\r\n    } else {\r\n      this.attached = true;\r\n    }\r\n  }\r\n  bindUserEvents() {\r\n    const listeners = this._listeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const listener = (e, x, y) => {\r\n      e.offsetX = x;\r\n      e.offsetY = y;\r\n      this._eventHandler(e);\r\n    };\r\n    each(this.options.events, (type) => _add(type, listener));\r\n  }\r\n  bindResponsiveEvents() {\r\n    if (!this._responsiveListeners) {\r\n      this._responsiveListeners = {};\r\n    }\r\n    const listeners = this._responsiveListeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const _remove = (type, listener) => {\r\n      if (listeners[type]) {\r\n        platform.removeEventListener(this, type, listener);\r\n        delete listeners[type];\r\n      }\r\n    };\r\n    const listener = (width, height) => {\r\n      if (this.canvas) {\r\n        this.resize(width, height);\r\n      }\r\n    };\r\n    let detached;\r\n    const attached = () => {\r\n      _remove('attach', attached);\r\n      this.attached = true;\r\n      this.resize();\r\n      _add('resize', listener);\r\n      _add('detach', detached);\r\n    };\r\n    detached = () => {\r\n      this.attached = false;\r\n      _remove('resize', listener);\r\n      this._stop();\r\n      this._resize(0, 0);\r\n      _add('attach', attached);\r\n    };\r\n    if (platform.isAttached(this.canvas)) {\r\n      attached();\r\n    } else {\r\n      detached();\r\n    }\r\n  }\r\n  unbindEvents() {\r\n    each(this._listeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._listeners = {};\r\n    each(this._responsiveListeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._responsiveListeners = undefined;\r\n  }\r\n  updateHoverStyle(items, mode, enabled) {\r\n    const prefix = enabled ? 'set' : 'remove';\r\n    let meta, item, i, ilen;\r\n    if (mode === 'dataset') {\r\n      meta = this.getDatasetMeta(items[0].datasetIndex);\r\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      item = items[i];\r\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n      if (controller) {\r\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n      }\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements) {\r\n    const lastActive = this._active || [];\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('No dataset found at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed) {\r\n      this._active = active;\r\n      this._lastEvent = null;\r\n      this._updateHoverStyles(active, lastActive);\r\n    }\r\n  }\r\n  notifyPlugins(hook, args, filter) {\r\n    return this._plugins.notify(this, hook, args, filter);\r\n  }\r\n  _updateHoverStyles(active, lastActive, replay) {\r\n    const hoverOptions = this.options.hover;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n    const deactivated = diff(lastActive, active);\r\n    const activated = replay ? active : diff(active, lastActive);\r\n    if (deactivated.length) {\r\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n    }\r\n    if (activated.length && hoverOptions.mode) {\r\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\r\n    }\r\n  }\r\n  _eventHandler(e, replay) {\r\n    const args = {\r\n      event: e,\r\n      replay,\r\n      cancelable: true,\r\n      inChartArea: this.isPointInArea(e)\r\n    };\r\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\r\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\r\n      return;\r\n    }\r\n    const changed = this._handleEvent(e, replay, args.inChartArea);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterEvent', args, eventFilter);\r\n    if (changed || args.changed) {\r\n      this.render();\r\n    }\r\n    return this;\r\n  }\r\n  _handleEvent(e, replay, inChartArea) {\r\n    const {_active: lastActive = [], options} = this;\r\n    const useFinalPosition = replay;\r\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\r\n    const isClick = _isClickEvent(e);\r\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\r\n    if (inChartArea) {\r\n      this._lastEvent = null;\r\n      callback(options.onHover, [e, active, this], this);\r\n      if (isClick) {\r\n        callback(options.onClick, [e, active, this], this);\r\n      }\r\n    }\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed || replay) {\r\n      this._active = active;\r\n      this._updateHoverStyles(active, lastActive, replay);\r\n    }\r\n    this._lastEvent = lastEvent;\r\n    return changed;\r\n  }\r\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n    if (!inChartArea) {\r\n      return lastActive;\r\n    }\r\n    const hoverOptions = this.options.hover;\r\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n  }\r\n}\r\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\r\nconst enumerable = true;\r\nObject.defineProperties(Chart, {\r\n  defaults: {\r\n    enumerable,\r\n    value: defaults\r\n  },\r\n  instances: {\r\n    enumerable,\r\n    value: instances\r\n  },\r\n  overrides: {\r\n    enumerable,\r\n    value: overrides\r\n  },\r\n  registry: {\r\n    enumerable,\r\n    value: registry\r\n  },\r\n  version: {\r\n    enumerable,\r\n    value: version\r\n  },\r\n  getChart: {\r\n    enumerable,\r\n    value: getChart\r\n  },\r\n  register: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.add(...items);\r\n      invalidatePlugins();\r\n    }\r\n  },\r\n  unregister: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.remove(...items);\r\n      invalidatePlugins();\r\n    }\r\n  }\r\n});\r\n\r\nfunction clipArc(ctx, element, endAngle) {\r\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\r\n  let angleMargin = pixelMargin / outerRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n  if (innerRadius > pixelMargin) {\r\n    angleMargin = pixelMargin / innerRadius;\r\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n  } else {\r\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n  }\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction toRadiusCorners(value) {\r\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\r\n}\r\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\r\n  const o = toRadiusCorners(arc.options.borderRadius);\r\n  const halfThickness = (outerRadius - innerRadius) / 2;\r\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\r\n  const computeOuterLimit = (val) => {\r\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\r\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\r\n  };\r\n  return {\r\n    outerStart: computeOuterLimit(o.outerStart),\r\n    outerEnd: computeOuterLimit(o.outerEnd),\r\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\r\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\r\n  };\r\n}\r\nfunction rThetaToXY(r, theta, x, y) {\r\n  return {\r\n    x: x + r * Math.cos(theta),\r\n    y: y + r * Math.sin(theta),\r\n  };\r\n}\r\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\r\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\r\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\r\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\r\n  let spacingOffset = 0;\r\n  const alpha = end - start;\r\n  if (spacing) {\r\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\r\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\r\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\r\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\r\n    spacingOffset = (alpha - adjustedAngle) / 2;\r\n  }\r\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\r\n  const angleOffset = (alpha - beta) / 2;\r\n  const startAngle = start + angleOffset + spacingOffset;\r\n  const endAngle = end - angleOffset - spacingOffset;\r\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\r\n  const outerStartAdjustedRadius = outerRadius - outerStart;\r\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\r\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\r\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\r\n  const innerStartAdjustedRadius = innerRadius + innerStart;\r\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\r\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\r\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\r\n  ctx.beginPath();\r\n  if (circular) {\r\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\r\n    if (outerEnd > 0) {\r\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\r\n    }\r\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\r\n    ctx.lineTo(p4.x, p4.y);\r\n    if (innerEnd > 0) {\r\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\r\n    }\r\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\r\n    if (innerStart > 0) {\r\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\r\n    }\r\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\r\n    ctx.lineTo(p8.x, p8.y);\r\n    if (outerStart > 0) {\r\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\r\n    }\r\n  } else {\r\n    ctx.moveTo(x, y);\r\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\r\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\r\n    ctx.lineTo(outerStartX, outerStartY);\r\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\r\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\r\n    ctx.lineTo(outerEndX, outerEndY);\r\n  }\r\n  ctx.closePath();\r\n}\r\nfunction drawArc(ctx, element, offset, spacing, circular) {\r\n  const {fullCircles, startAngle, circumference} = element;\r\n  let endAngle = element.endAngle;\r\n  if (fullCircles) {\r\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\r\n    for (let i = 0; i < fullCircles; ++i) {\r\n      ctx.fill();\r\n    }\r\n    if (!isNaN(circumference)) {\r\n      endAngle = startAngle + circumference % TAU;\r\n      if (circumference % TAU === 0) {\r\n        endAngle += TAU;\r\n      }\r\n    }\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n  ctx.fill();\r\n  return endAngle;\r\n}\r\nfunction drawFullCircleBorders(ctx, element, inner) {\r\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  let i;\r\n  if (inner) {\r\n    clipArc(ctx, element, startAngle + TAU);\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\r\n  const {options} = element;\r\n  const {borderWidth, borderJoinStyle} = options;\r\n  const inner = options.borderAlign === 'inner';\r\n  if (!borderWidth) {\r\n    return;\r\n  }\r\n  if (inner) {\r\n    ctx.lineWidth = borderWidth * 2;\r\n    ctx.lineJoin = borderJoinStyle || 'round';\r\n  } else {\r\n    ctx.lineWidth = borderWidth;\r\n    ctx.lineJoin = borderJoinStyle || 'bevel';\r\n  }\r\n  if (element.fullCircles) {\r\n    drawFullCircleBorders(ctx, element, inner);\r\n  }\r\n  if (inner) {\r\n    clipArc(ctx, element, endAngle);\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n  ctx.stroke();\r\n}\r\nclass ArcElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.circumference = undefined;\r\n    this.startAngle = undefined;\r\n    this.endAngle = undefined;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.pixelMargin = 0;\r\n    this.fullCircles = 0;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(chartX, chartY, useFinalPosition) {\r\n    const point = this.getProps(['x', 'y'], useFinalPosition);\r\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\r\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference'\r\n    ], useFinalPosition);\r\n    const rAdjust = this.options.spacing / 2;\r\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\r\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\r\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\r\n    return (betweenAngles && withinRadius);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\r\n      'x',\r\n      'y',\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference',\r\n    ], useFinalPosition);\r\n    const {offset, spacing} = this.options;\r\n    const halfAngle = (startAngle + endAngle) / 2;\r\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\r\n    return {\r\n      x: x + Math.cos(halfAngle) * halfRadius,\r\n      y: y + Math.sin(halfAngle) * halfRadius\r\n    };\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    return this.getCenterPoint(useFinalPosition);\r\n  }\r\n  draw(ctx) {\r\n    const {options, circumference} = this;\r\n    const offset = (options.offset || 0) / 2;\r\n    const spacing = (options.spacing || 0) / 2;\r\n    const circular = options.circular;\r\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\r\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\r\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    let radiusOffset = 0;\r\n    if (offset) {\r\n      radiusOffset = offset / 2;\r\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\r\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\r\n      if (this.circumference >= PI) {\r\n        radiusOffset = offset;\r\n      }\r\n    }\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\r\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\r\n    ctx.restore();\r\n  }\r\n}\r\nArcElement.id = 'arc';\r\nArcElement.defaults = {\r\n  borderAlign: 'center',\r\n  borderColor: '#fff',\r\n  borderJoinStyle: undefined,\r\n  borderRadius: 0,\r\n  borderWidth: 2,\r\n  offset: 0,\r\n  spacing: 0,\r\n  angle: undefined,\r\n  circular: true,\r\n};\r\nArcElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor'\r\n};\r\n\r\nfunction setStyle(ctx, options, style = options) {\r\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\r\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\r\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\r\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\r\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\r\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\r\n}\r\nfunction lineTo(ctx, previous, target) {\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\nfunction getLineMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedLineTo;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierCurveTo;\r\n  }\r\n  return lineTo;\r\n}\r\nfunction pathVars(points, segment, params = {}) {\r\n  const count = points.length;\r\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\r\n  const {start: segmentStart, end: segmentEnd} = segment;\r\n  const start = Math.max(paramsStart, segmentStart);\r\n  const end = Math.min(paramsEnd, segmentEnd);\r\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\r\n  return {\r\n    count,\r\n    start,\r\n    loop: segment.loop,\r\n    ilen: end < start && !outside ? count + end - start : end - start\r\n  };\r\n}\r\nfunction pathSegment(ctx, line, segment, params) {\r\n  const {points, options} = line;\r\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\r\n  const lineMethod = getLineMethod(options);\r\n  let {move = true, reverse} = params || {};\r\n  let i, point, prev;\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[(start + (reverse ? ilen - i : i)) % count];\r\n    if (point.skip) {\r\n      continue;\r\n    } else if (move) {\r\n      ctx.moveTo(point.x, point.y);\r\n      move = false;\r\n    } else {\r\n      lineMethod(ctx, prev, point, reverse, options.stepped);\r\n    }\r\n    prev = point;\r\n  }\r\n  if (loop) {\r\n    point = points[(start + (reverse ? ilen : 0)) % count];\r\n    lineMethod(ctx, prev, point, reverse, options.stepped);\r\n  }\r\n  return !!loop;\r\n}\r\nfunction fastPathSegment(ctx, line, segment, params) {\r\n  const points = line.points;\r\n  const {count, start, ilen} = pathVars(points, segment, params);\r\n  const {move = true, reverse} = params || {};\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, prevX, minY, maxY, lastY;\r\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\r\n  const drawX = () => {\r\n    if (minY !== maxY) {\r\n      ctx.lineTo(avgX, maxY);\r\n      ctx.lineTo(avgX, minY);\r\n      ctx.lineTo(avgX, lastY);\r\n    }\r\n  };\r\n  if (move) {\r\n    point = points[pointIndex(0)];\r\n    ctx.moveTo(point.x, point.y);\r\n  }\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[pointIndex(i)];\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n    const x = point.x;\r\n    const y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n      }\r\n      avgX = (countX * avgX + x) / ++countX;\r\n    } else {\r\n      drawX();\r\n      ctx.lineTo(x, y);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n    }\r\n    lastY = y;\r\n  }\r\n  drawX();\r\n}\r\nfunction _getSegmentMethod(line) {\r\n  const opts = line.options;\r\n  const borderDash = opts.borderDash && opts.borderDash.length;\r\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\r\n  return useFastPath ? fastPathSegment : pathSegment;\r\n}\r\nfunction _getInterpolationMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedInterpolation;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierInterpolation;\r\n  }\r\n  return _pointInLine;\r\n}\r\nfunction strokePathWithCache(ctx, line, start, count) {\r\n  let path = line._path;\r\n  if (!path) {\r\n    path = line._path = new Path2D();\r\n    if (line.path(path, start, count)) {\r\n      path.closePath();\r\n    }\r\n  }\r\n  setStyle(ctx, line.options);\r\n  ctx.stroke(path);\r\n}\r\nfunction strokePathDirect(ctx, line, start, count) {\r\n  const {segments, options} = line;\r\n  const segmentMethod = _getSegmentMethod(line);\r\n  for (const segment of segments) {\r\n    setStyle(ctx, options, segment.style);\r\n    ctx.beginPath();\r\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\r\n      ctx.closePath();\r\n    }\r\n    ctx.stroke();\r\n  }\r\n}\r\nconst usePath2D = typeof Path2D === 'function';\r\nfunction draw(ctx, line, start, count) {\r\n  if (usePath2D && !line.options.segment) {\r\n    strokePathWithCache(ctx, line, start, count);\r\n  } else {\r\n    strokePathDirect(ctx, line, start, count);\r\n  }\r\n}\r\nclass LineElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.animated = true;\r\n    this.options = undefined;\r\n    this._chart = undefined;\r\n    this._loop = undefined;\r\n    this._fullLoop = undefined;\r\n    this._path = undefined;\r\n    this._points = undefined;\r\n    this._segments = undefined;\r\n    this._decimated = false;\r\n    this._pointsUpdated = false;\r\n    this._datasetIndex = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  updateControlPoints(chartArea, indexAxis) {\r\n    const options = this.options;\r\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\r\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\r\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\r\n      this._pointsUpdated = true;\r\n    }\r\n  }\r\n  set points(points) {\r\n    this._points = points;\r\n    delete this._segments;\r\n    delete this._path;\r\n    this._pointsUpdated = false;\r\n  }\r\n  get points() {\r\n    return this._points;\r\n  }\r\n  get segments() {\r\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\r\n  }\r\n  first() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    return segments.length && points[segments[0].start];\r\n  }\r\n  last() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    const count = segments.length;\r\n    return count && points[segments[count - 1].end];\r\n  }\r\n  interpolate(point, property) {\r\n    const options = this.options;\r\n    const value = point[property];\r\n    const points = this.points;\r\n    const segments = _boundSegments(this, {property, start: value, end: value});\r\n    if (!segments.length) {\r\n      return;\r\n    }\r\n    const result = [];\r\n    const _interpolate = _getInterpolationMethod(options);\r\n    let i, ilen;\r\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\r\n      const {start, end} = segments[i];\r\n      const p1 = points[start];\r\n      const p2 = points[end];\r\n      if (p1 === p2) {\r\n        result.push(p1);\r\n        continue;\r\n      }\r\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n      interpolated[property] = point[property];\r\n      result.push(interpolated);\r\n    }\r\n    return result.length === 1 ? result[0] : result;\r\n  }\r\n  pathSegment(ctx, segment, params) {\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    return segmentMethod(ctx, this, segment, params);\r\n  }\r\n  path(ctx, start, count) {\r\n    const segments = this.segments;\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    let loop = this._loop;\r\n    start = start || 0;\r\n    count = count || (this.points.length - start);\r\n    for (const segment of segments) {\r\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\r\n    }\r\n    return !!loop;\r\n  }\r\n  draw(ctx, chartArea, start, count) {\r\n    const options = this.options || {};\r\n    const points = this.points || [];\r\n    if (points.length && options.borderWidth) {\r\n      ctx.save();\r\n      draw(ctx, this, start, count);\r\n      ctx.restore();\r\n    }\r\n    if (this.animated) {\r\n      this._pointsUpdated = false;\r\n      this._path = undefined;\r\n    }\r\n  }\r\n}\r\nLineElement.id = 'line';\r\nLineElement.defaults = {\r\n  borderCapStyle: 'butt',\r\n  borderDash: [],\r\n  borderDashOffset: 0,\r\n  borderJoinStyle: 'miter',\r\n  borderWidth: 3,\r\n  capBezierPoints: true,\r\n  cubicInterpolationMode: 'default',\r\n  fill: false,\r\n  spanGaps: false,\r\n  stepped: false,\r\n  tension: 0,\r\n};\r\nLineElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\nLineElement.descriptors = {\r\n  _scriptable: true,\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\r\n};\r\n\r\nfunction inRange$1(el, pos, axis, useFinalPosition) {\r\n  const options = el.options;\r\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\r\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\r\n}\r\nclass PointElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.parsed = undefined;\r\n    this.skip = undefined;\r\n    this.stop = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    const options = this.options;\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  size(options) {\r\n    options = options || this.options || {};\r\n    let radius = options.radius || 0;\r\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n    const borderWidth = radius && options.borderWidth || 0;\r\n    return (radius + borderWidth) * 2;\r\n  }\r\n  draw(ctx, area) {\r\n    const options = this.options;\r\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\r\n      return;\r\n    }\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    drawPoint(ctx, options, this.x, this.y);\r\n  }\r\n  getRange() {\r\n    const options = this.options || {};\r\n    return options.radius + options.hitRadius;\r\n  }\r\n}\r\nPointElement.id = 'point';\r\nPointElement.defaults = {\r\n  borderWidth: 1,\r\n  hitRadius: 1,\r\n  hoverBorderWidth: 1,\r\n  hoverRadius: 4,\r\n  pointStyle: 'circle',\r\n  radius: 3,\r\n  rotation: 0\r\n};\r\nPointElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nfunction getBarBounds(bar, useFinalPosition) {\r\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\r\n  let left, right, top, bottom, half;\r\n  if (bar.horizontal) {\r\n    half = height / 2;\r\n    left = Math.min(x, base);\r\n    right = Math.max(x, base);\r\n    top = y - half;\r\n    bottom = y + half;\r\n  } else {\r\n    half = width / 2;\r\n    left = x - half;\r\n    right = x + half;\r\n    top = Math.min(y, base);\r\n    bottom = Math.max(y, base);\r\n  }\r\n  return {left, top, right, bottom};\r\n}\r\nfunction skipOrLimit(skip, value, min, max) {\r\n  return skip ? 0 : _limitValue(value, min, max);\r\n}\r\nfunction parseBorderWidth(bar, maxW, maxH) {\r\n  const value = bar.options.borderWidth;\r\n  const skip = bar.borderSkipped;\r\n  const o = toTRBL(value);\r\n  return {\r\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n  };\r\n}\r\nfunction parseBorderRadius(bar, maxW, maxH) {\r\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\r\n  const value = bar.options.borderRadius;\r\n  const o = toTRBLCorners(value);\r\n  const maxR = Math.min(maxW, maxH);\r\n  const skip = bar.borderSkipped;\r\n  const enableBorder = enableBorderRadius || isObject(value);\r\n  return {\r\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\r\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\r\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n  };\r\n}\r\nfunction boundingRects(bar) {\r\n  const bounds = getBarBounds(bar);\r\n  const width = bounds.right - bounds.left;\r\n  const height = bounds.bottom - bounds.top;\r\n  const border = parseBorderWidth(bar, width / 2, height / 2);\r\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n  return {\r\n    outer: {\r\n      x: bounds.left,\r\n      y: bounds.top,\r\n      w: width,\r\n      h: height,\r\n      radius\r\n    },\r\n    inner: {\r\n      x: bounds.left + border.l,\r\n      y: bounds.top + border.t,\r\n      w: width - border.l - border.r,\r\n      h: height - border.t - border.b,\r\n      radius: {\r\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\r\n      }\r\n    }\r\n  };\r\n}\r\nfunction inRange(bar, x, y, useFinalPosition) {\r\n  const skipX = x === null;\r\n  const skipY = y === null;\r\n  const skipBoth = skipX && skipY;\r\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n  return bounds\r\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\r\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\r\n}\r\nfunction hasRadius(radius) {\r\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n}\r\nfunction addNormalRectPath(ctx, rect) {\r\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n}\r\nfunction inflateRect(rect, amount, refRect = {}) {\r\n  const x = rect.x !== refRect.x ? -amount : 0;\r\n  const y = rect.y !== refRect.y ? -amount : 0;\r\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\r\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\r\n  return {\r\n    x: rect.x + x,\r\n    y: rect.y + y,\r\n    w: rect.w + w,\r\n    h: rect.h + h,\r\n    radius: rect.radius\r\n  };\r\n}\r\nclass BarElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.horizontal = undefined;\r\n    this.base = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.inflateAmount = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\r\n    const {inner, outer} = boundingRects(this);\r\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n    ctx.save();\r\n    if (outer.w !== inner.w || outer.h !== inner.h) {\r\n      ctx.beginPath();\r\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\r\n      ctx.clip();\r\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\r\n      ctx.fillStyle = borderColor;\r\n      ctx.fill('evenodd');\r\n    }\r\n    ctx.beginPath();\r\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\r\n    ctx.fillStyle = backgroundColor;\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    return inRange(this, mouseX, mouseY, useFinalPosition);\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange(this, mouseX, null, useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange(this, null, mouseY, useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\r\n    return {\r\n      x: horizontal ? (x + base) / 2 : x,\r\n      y: horizontal ? y : (y + base) / 2\r\n    };\r\n  }\r\n  getRange(axis) {\r\n    return axis === 'x' ? this.width / 2 : this.height / 2;\r\n  }\r\n}\r\nBarElement.id = 'bar';\r\nBarElement.defaults = {\r\n  borderSkipped: 'start',\r\n  borderWidth: 0,\r\n  borderRadius: 0,\r\n  inflateAmount: 'auto',\r\n  pointStyle: undefined\r\n};\r\nBarElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nvar elements = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nArcElement: ArcElement,\r\nLineElement: LineElement,\r\nPointElement: PointElement,\r\nBarElement: BarElement\r\n});\r\n\r\nfunction lttbDecimation(data, start, count, availableWidth, options) {\r\n  const samples = options.samples || availableWidth;\r\n  if (samples >= count) {\r\n    return data.slice(start, start + count);\r\n  }\r\n  const decimated = [];\r\n  const bucketWidth = (count - 2) / (samples - 2);\r\n  let sampledIndex = 0;\r\n  const endIndex = start + count - 1;\r\n  let a = start;\r\n  let i, maxAreaPoint, maxArea, area, nextA;\r\n  decimated[sampledIndex++] = data[a];\r\n  for (i = 0; i < samples - 2; i++) {\r\n    let avgX = 0;\r\n    let avgY = 0;\r\n    let j;\r\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\r\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\r\n      avgX += data[j].x;\r\n      avgY += data[j].y;\r\n    }\r\n    avgX /= avgRangeLength;\r\n    avgY /= avgRangeLength;\r\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\r\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\r\n    const {x: pointAx, y: pointAy} = data[a];\r\n    maxArea = area = -1;\r\n    for (j = rangeOffs; j < rangeTo; j++) {\r\n      area = 0.5 * Math.abs(\r\n        (pointAx - avgX) * (data[j].y - pointAy) -\r\n        (pointAx - data[j].x) * (avgY - pointAy)\r\n      );\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        maxAreaPoint = data[j];\r\n        nextA = j;\r\n      }\r\n    }\r\n    decimated[sampledIndex++] = maxAreaPoint;\r\n    a = nextA;\r\n  }\r\n  decimated[sampledIndex++] = data[endIndex];\r\n  return decimated;\r\n}\r\nfunction minMaxDecimation(data, start, count, availableWidth) {\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n  const decimated = [];\r\n  const endIndex = start + count - 1;\r\n  const xMin = data[start].x;\r\n  const xMax = data[endIndex].x;\r\n  const dx = xMax - xMin;\r\n  for (i = start; i < start + count; ++i) {\r\n    point = data[i];\r\n    x = (point.x - xMin) / dx * availableWidth;\r\n    y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n        minIndex = i;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n        maxIndex = i;\r\n      }\r\n      avgX = (countX * avgX + point.x) / ++countX;\r\n    } else {\r\n      const lastIndex = i - 1;\r\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex1],\r\n            x: avgX,\r\n          });\r\n        }\r\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex2],\r\n            x: avgX\r\n          });\r\n        }\r\n      }\r\n      if (i > 0 && lastIndex !== startIndex) {\r\n        decimated.push(data[lastIndex]);\r\n      }\r\n      decimated.push(point);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n      minIndex = maxIndex = startIndex = i;\r\n    }\r\n  }\r\n  return decimated;\r\n}\r\nfunction cleanDecimatedDataset(dataset) {\r\n  if (dataset._decimated) {\r\n    const data = dataset._data;\r\n    delete dataset._decimated;\r\n    delete dataset._data;\r\n    Object.defineProperty(dataset, 'data', {value: data});\r\n  }\r\n}\r\nfunction cleanDecimatedData(chart) {\r\n  chart.data.datasets.forEach((dataset) => {\r\n    cleanDecimatedDataset(dataset);\r\n  });\r\n}\r\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count;\r\n  const {iScale} = meta;\r\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n  if (minDefined) {\r\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\r\n  }\r\n  if (maxDefined) {\r\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\r\n  } else {\r\n    count = pointCount - start;\r\n  }\r\n  return {start, count};\r\n}\r\nvar plugin_decimation = {\r\n  id: 'decimation',\r\n  defaults: {\r\n    algorithm: 'min-max',\r\n    enabled: false,\r\n  },\r\n  beforeElementsUpdate: (chart, args, options) => {\r\n    if (!options.enabled) {\r\n      cleanDecimatedData(chart);\r\n      return;\r\n    }\r\n    const availableWidth = chart.width;\r\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\r\n      const {_data, indexAxis} = dataset;\r\n      const meta = chart.getDatasetMeta(datasetIndex);\r\n      const data = _data || dataset.data;\r\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\r\n        return;\r\n      }\r\n      if (!meta.controller.supportsDecimation) {\r\n        return;\r\n      }\r\n      const xAxis = chart.scales[meta.xAxisID];\r\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n        return;\r\n      }\r\n      if (chart.options.parsing) {\r\n        return;\r\n      }\r\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\r\n      const threshold = options.threshold || 4 * availableWidth;\r\n      if (count <= threshold) {\r\n        cleanDecimatedDataset(dataset);\r\n        return;\r\n      }\r\n      if (isNullOrUndef(_data)) {\r\n        dataset._data = data;\r\n        delete dataset.data;\r\n        Object.defineProperty(dataset, 'data', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function() {\r\n            return this._decimated;\r\n          },\r\n          set: function(d) {\r\n            this._data = d;\r\n          }\r\n        });\r\n      }\r\n      let decimated;\r\n      switch (options.algorithm) {\r\n      case 'lttb':\r\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\r\n        break;\r\n      case 'min-max':\r\n        decimated = minMaxDecimation(data, start, count, availableWidth);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n      }\r\n      dataset._decimated = decimated;\r\n    });\r\n  },\r\n  destroy(chart) {\r\n    cleanDecimatedData(chart);\r\n  }\r\n};\r\n\r\nfunction _segments(line, target, property) {\r\n  const segments = line.segments;\r\n  const points = line.points;\r\n  const tpoints = target.points;\r\n  const parts = [];\r\n  for (const segment of segments) {\r\n    let {start, end} = segment;\r\n    end = _findSegmentEnd(start, end, points);\r\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\r\n    if (!target.segments) {\r\n      parts.push({\r\n        source: segment,\r\n        target: bounds,\r\n        start: points[start],\r\n        end: points[end]\r\n      });\r\n      continue;\r\n    }\r\n    const targetSegments = _boundSegments(target, bounds);\r\n    for (const tgt of targetSegments) {\r\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\r\n      const fillSources = _boundSegment(segment, points, subBounds);\r\n      for (const fillSource of fillSources) {\r\n        parts.push({\r\n          source: fillSource,\r\n          target: tgt,\r\n          start: {\r\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n          },\r\n          end: {\r\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return parts;\r\n}\r\nfunction _getBounds(property, first, last, loop) {\r\n  if (loop) {\r\n    return;\r\n  }\r\n  let start = first[property];\r\n  let end = last[property];\r\n  if (property === 'angle') {\r\n    start = _normalizeAngle(start);\r\n    end = _normalizeAngle(end);\r\n  }\r\n  return {property, start, end};\r\n}\r\nfunction _pointsFromSegments(boundary, line) {\r\n  const {x = null, y = null} = boundary || {};\r\n  const linePoints = line.points;\r\n  const points = [];\r\n  line.segments.forEach(({start, end}) => {\r\n    end = _findSegmentEnd(start, end, linePoints);\r\n    const first = linePoints[start];\r\n    const last = linePoints[end];\r\n    if (y !== null) {\r\n      points.push({x: first.x, y});\r\n      points.push({x: last.x, y});\r\n    } else if (x !== null) {\r\n      points.push({x, y: first.y});\r\n      points.push({x, y: last.y});\r\n    }\r\n  });\r\n  return points;\r\n}\r\nfunction _findSegmentEnd(start, end, points) {\r\n  for (;end > start; end--) {\r\n    const point = points[end];\r\n    if (!isNaN(point.x) && !isNaN(point.y)) {\r\n      break;\r\n    }\r\n  }\r\n  return end;\r\n}\r\nfunction _getEdge(a, b, prop, fn) {\r\n  if (a && b) {\r\n    return fn(a[prop], b[prop]);\r\n  }\r\n  return a ? a[prop] : b ? b[prop] : 0;\r\n}\r\n\r\nfunction _createBoundaryLine(boundary, line) {\r\n  let points = [];\r\n  let _loop = false;\r\n  if (isArray(boundary)) {\r\n    _loop = true;\r\n    points = boundary;\r\n  } else {\r\n    points = _pointsFromSegments(boundary, line);\r\n  }\r\n  return points.length ? new LineElement({\r\n    points,\r\n    options: {tension: 0},\r\n    _loop,\r\n    _fullLoop: _loop\r\n  }) : null;\r\n}\r\nfunction _shouldApplyFill(source) {\r\n  return source && source.fill !== false;\r\n}\r\n\r\nfunction _resolveTarget(sources, index, propagate) {\r\n  const source = sources[index];\r\n  let fill = source.fill;\r\n  const visited = [index];\r\n  let target;\r\n  if (!propagate) {\r\n    return fill;\r\n  }\r\n  while (fill !== false && visited.indexOf(fill) === -1) {\r\n    if (!isNumberFinite(fill)) {\r\n      return fill;\r\n    }\r\n    target = sources[fill];\r\n    if (!target) {\r\n      return false;\r\n    }\r\n    if (target.visible) {\r\n      return fill;\r\n    }\r\n    visited.push(fill);\r\n    fill = target.fill;\r\n  }\r\n  return false;\r\n}\r\nfunction _decodeFill(line, index, count) {\r\n  const fill = parseFillOption(line);\r\n  if (isObject(fill)) {\r\n    return isNaN(fill.value) ? false : fill;\r\n  }\r\n  let target = parseFloat(fill);\r\n  if (isNumberFinite(target) && Math.floor(target) === target) {\r\n    return decodeTargetIndex(fill[0], index, target, count);\r\n  }\r\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\r\n}\r\nfunction decodeTargetIndex(firstCh, index, target, count) {\r\n  if (firstCh === '-' || firstCh === '+') {\r\n    target = index + target;\r\n  }\r\n  if (target === index || target < 0 || target >= count) {\r\n    return false;\r\n  }\r\n  return target;\r\n}\r\nfunction _getTargetPixel(fill, scale) {\r\n  let pixel = null;\r\n  if (fill === 'start') {\r\n    pixel = scale.bottom;\r\n  } else if (fill === 'end') {\r\n    pixel = scale.top;\r\n  } else if (isObject(fill)) {\r\n    pixel = scale.getPixelForValue(fill.value);\r\n  } else if (scale.getBasePixel) {\r\n    pixel = scale.getBasePixel();\r\n  }\r\n  return pixel;\r\n}\r\nfunction _getTargetValue(fill, scale, startValue) {\r\n  let value;\r\n  if (fill === 'start') {\r\n    value = startValue;\r\n  } else if (fill === 'end') {\r\n    value = scale.options.reverse ? scale.min : scale.max;\r\n  } else if (isObject(fill)) {\r\n    value = fill.value;\r\n  } else {\r\n    value = scale.getBaseValue();\r\n  }\r\n  return value;\r\n}\r\nfunction parseFillOption(line) {\r\n  const options = line.options;\r\n  const fillOption = options.fill;\r\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n  if (fill === undefined) {\r\n    fill = !!options.backgroundColor;\r\n  }\r\n  if (fill === false || fill === null) {\r\n    return false;\r\n  }\r\n  if (fill === true) {\r\n    return 'origin';\r\n  }\r\n  return fill;\r\n}\r\n\r\nfunction _buildStackLine(source) {\r\n  const {scale, index, line} = source;\r\n  const points = [];\r\n  const segments = line.segments;\r\n  const sourcePoints = line.points;\r\n  const linesBelow = getLinesBelow(scale, index);\r\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    for (let j = segment.start; j <= segment.end; j++) {\r\n      addPointsBelow(points, sourcePoints[j], linesBelow);\r\n    }\r\n  }\r\n  return new LineElement({points, options: {}});\r\n}\r\nfunction getLinesBelow(scale, index) {\r\n  const below = [];\r\n  const metas = scale.getMatchingVisibleMetas('line');\r\n  for (let i = 0; i < metas.length; i++) {\r\n    const meta = metas[i];\r\n    if (meta.index === index) {\r\n      break;\r\n    }\r\n    if (!meta.hidden) {\r\n      below.unshift(meta.dataset);\r\n    }\r\n  }\r\n  return below;\r\n}\r\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\r\n  const postponed = [];\r\n  for (let j = 0; j < linesBelow.length; j++) {\r\n    const line = linesBelow[j];\r\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\r\n    if (!point || (first && last)) {\r\n      continue;\r\n    }\r\n    if (first) {\r\n      postponed.unshift(point);\r\n    } else {\r\n      points.push(point);\r\n      if (!last) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  points.push(...postponed);\r\n}\r\nfunction findPoint(line, sourcePoint, property) {\r\n  const point = line.interpolate(sourcePoint, property);\r\n  if (!point) {\r\n    return {};\r\n  }\r\n  const pointValue = point[property];\r\n  const segments = line.segments;\r\n  const linePoints = line.points;\r\n  let first = false;\r\n  let last = false;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const firstValue = linePoints[segment.start][property];\r\n    const lastValue = linePoints[segment.end][property];\r\n    if (_isBetween(pointValue, firstValue, lastValue)) {\r\n      first = pointValue === firstValue;\r\n      last = pointValue === lastValue;\r\n      break;\r\n    }\r\n  }\r\n  return {first, last, point};\r\n}\r\n\r\nclass simpleArc {\r\n  constructor(opts) {\r\n    this.x = opts.x;\r\n    this.y = opts.y;\r\n    this.radius = opts.radius;\r\n  }\r\n  pathSegment(ctx, bounds, opts) {\r\n    const {x, y, radius} = this;\r\n    bounds = bounds || {start: 0, end: TAU};\r\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n    return !opts.bounds;\r\n  }\r\n  interpolate(point) {\r\n    const {x, y, radius} = this;\r\n    const angle = point.angle;\r\n    return {\r\n      x: x + Math.cos(angle) * radius,\r\n      y: y + Math.sin(angle) * radius,\r\n      angle\r\n    };\r\n  }\r\n}\r\n\r\nfunction _getTarget(source) {\r\n  const {chart, fill, line} = source;\r\n  if (isNumberFinite(fill)) {\r\n    return getLineByIndex(chart, fill);\r\n  }\r\n  if (fill === 'stack') {\r\n    return _buildStackLine(source);\r\n  }\r\n  if (fill === 'shape') {\r\n    return true;\r\n  }\r\n  const boundary = computeBoundary(source);\r\n  if (boundary instanceof simpleArc) {\r\n    return boundary;\r\n  }\r\n  return _createBoundaryLine(boundary, line);\r\n}\r\nfunction getLineByIndex(chart, index) {\r\n  const meta = chart.getDatasetMeta(index);\r\n  const visible = meta && chart.isDatasetVisible(index);\r\n  return visible ? meta.dataset : null;\r\n}\r\nfunction computeBoundary(source) {\r\n  const scale = source.scale || {};\r\n  if (scale.getPointPositionForValue) {\r\n    return computeCircularBoundary(source);\r\n  }\r\n  return computeLinearBoundary(source);\r\n}\r\nfunction computeLinearBoundary(source) {\r\n  const {scale = {}, fill} = source;\r\n  const pixel = _getTargetPixel(fill, scale);\r\n  if (isNumberFinite(pixel)) {\r\n    const horizontal = scale.isHorizontal();\r\n    return {\r\n      x: horizontal ? pixel : null,\r\n      y: horizontal ? null : pixel\r\n    };\r\n  }\r\n  return null;\r\n}\r\nfunction computeCircularBoundary(source) {\r\n  const {scale, fill} = source;\r\n  const options = scale.options;\r\n  const length = scale.getLabels().length;\r\n  const start = options.reverse ? scale.max : scale.min;\r\n  const value = _getTargetValue(fill, scale, start);\r\n  const target = [];\r\n  if (options.grid.circular) {\r\n    const center = scale.getPointPositionForValue(0, start);\r\n    return new simpleArc({\r\n      x: center.x,\r\n      y: center.y,\r\n      radius: scale.getDistanceFromCenterForValue(value)\r\n    });\r\n  }\r\n  for (let i = 0; i < length; ++i) {\r\n    target.push(scale.getPointPositionForValue(i, value));\r\n  }\r\n  return target;\r\n}\r\n\r\nfunction _drawfill(ctx, source, area) {\r\n  const target = _getTarget(source);\r\n  const {line, scale, axis} = source;\r\n  const lineOpts = line.options;\r\n  const fillOption = lineOpts.fill;\r\n  const color = lineOpts.backgroundColor;\r\n  const {above = color, below = color} = fillOption || {};\r\n  if (target && line.points.length) {\r\n    clipArea(ctx, area);\r\n    doFill(ctx, {line, target, above, below, area, scale, axis});\r\n    unclipArea(ctx);\r\n  }\r\n}\r\nfunction doFill(ctx, cfg) {\r\n  const {line, target, above, below, area, scale} = cfg;\r\n  const property = line._loop ? 'angle' : cfg.axis;\r\n  ctx.save();\r\n  if (property === 'x' && below !== above) {\r\n    clipVertical(ctx, target, area.top);\r\n    fill(ctx, {line, target, color: above, scale, property});\r\n    ctx.restore();\r\n    ctx.save();\r\n    clipVertical(ctx, target, area.bottom);\r\n  }\r\n  fill(ctx, {line, target, color: below, scale, property});\r\n  ctx.restore();\r\n}\r\nfunction clipVertical(ctx, target, clipY) {\r\n  const {segments, points} = target;\r\n  let first = true;\r\n  let lineLoop = false;\r\n  ctx.beginPath();\r\n  for (const segment of segments) {\r\n    const {start, end} = segment;\r\n    const firstPoint = points[start];\r\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\r\n    if (first) {\r\n      ctx.moveTo(firstPoint.x, firstPoint.y);\r\n      first = false;\r\n    } else {\r\n      ctx.lineTo(firstPoint.x, clipY);\r\n      ctx.lineTo(firstPoint.x, firstPoint.y);\r\n    }\r\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\r\n    if (lineLoop) {\r\n      ctx.closePath();\r\n    } else {\r\n      ctx.lineTo(lastPoint.x, clipY);\r\n    }\r\n  }\r\n  ctx.lineTo(target.first().x, clipY);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction fill(ctx, cfg) {\r\n  const {line, target, property, color, scale} = cfg;\r\n  const segments = _segments(line, target, property);\r\n  for (const {source: src, target: tgt, start, end} of segments) {\r\n    const {style: {backgroundColor = color} = {}} = src;\r\n    const notShape = target !== true;\r\n    ctx.save();\r\n    ctx.fillStyle = backgroundColor;\r\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\r\n    ctx.beginPath();\r\n    const lineLoop = !!line.pathSegment(ctx, src);\r\n    let loop;\r\n    if (notShape) {\r\n      if (lineLoop) {\r\n        ctx.closePath();\r\n      } else {\r\n        interpolatedLineTo(ctx, target, end, property);\r\n      }\r\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\r\n      loop = lineLoop && targetLoop;\r\n      if (!loop) {\r\n        interpolatedLineTo(ctx, target, start, property);\r\n      }\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n    ctx.restore();\r\n  }\r\n}\r\nfunction clipBounds(ctx, scale, bounds) {\r\n  const {top, bottom} = scale.chart.chartArea;\r\n  const {property, start, end} = bounds || {};\r\n  if (property === 'x') {\r\n    ctx.beginPath();\r\n    ctx.rect(start, top, end - start, bottom - top);\r\n    ctx.clip();\r\n  }\r\n}\r\nfunction interpolatedLineTo(ctx, target, point, property) {\r\n  const interpolatedPoint = target.interpolate(point, property);\r\n  if (interpolatedPoint) {\r\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n  }\r\n}\r\n\r\nvar index = {\r\n  id: 'filler',\r\n  afterDatasetsUpdate(chart, _args, options) {\r\n    const count = (chart.data.datasets || []).length;\r\n    const sources = [];\r\n    let meta, i, line, source;\r\n    for (i = 0; i < count; ++i) {\r\n      meta = chart.getDatasetMeta(i);\r\n      line = meta.dataset;\r\n      source = null;\r\n      if (line && line.options && line instanceof LineElement) {\r\n        source = {\r\n          visible: chart.isDatasetVisible(i),\r\n          index: i,\r\n          fill: _decodeFill(line, i, count),\r\n          chart,\r\n          axis: meta.controller.options.indexAxis,\r\n          scale: meta.vScale,\r\n          line,\r\n        };\r\n      }\r\n      meta.$filler = source;\r\n      sources.push(source);\r\n    }\r\n    for (i = 0; i < count; ++i) {\r\n      source = sources[i];\r\n      if (!source || source.fill === false) {\r\n        continue;\r\n      }\r\n      source.fill = _resolveTarget(sources, i, options.propagate);\r\n    }\r\n  },\r\n  beforeDraw(chart, _args, options) {\r\n    const draw = options.drawTime === 'beforeDraw';\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    const area = chart.chartArea;\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (!source) {\r\n        continue;\r\n      }\r\n      source.line.updateControlPoints(area, source.axis);\r\n      if (draw && source.fill) {\r\n        _drawfill(chart.ctx, source, area);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetsDraw(chart, _args, options) {\r\n    if (options.drawTime !== 'beforeDatasetsDraw') {\r\n      return;\r\n    }\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (_shouldApplyFill(source)) {\r\n        _drawfill(chart.ctx, source, chart.chartArea);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetDraw(chart, args, options) {\r\n    const source = args.meta.$filler;\r\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\r\n      return;\r\n    }\r\n    _drawfill(chart.ctx, source, chart.chartArea);\r\n  },\r\n  defaults: {\r\n    propagate: true,\r\n    drawTime: 'beforeDatasetDraw'\r\n  }\r\n};\r\n\r\nconst getBoxSize = (labelOpts, fontSize) => {\r\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\r\n  if (labelOpts.usePointStyle) {\r\n    boxHeight = Math.min(boxHeight, fontSize);\r\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\r\n  }\r\n  return {\r\n    boxWidth,\r\n    boxHeight,\r\n    itemHeight: Math.max(fontSize, boxHeight)\r\n  };\r\n};\r\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\nclass Legend extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this._added = false;\r\n    this.legendHitBoxes = [];\r\n    this._hoveredItem = null;\r\n    this.doughnutMode = false;\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this.legendItems = undefined;\r\n    this.columnSizes = undefined;\r\n    this.lineWidths = undefined;\r\n    this.maxHeight = undefined;\r\n    this.maxWidth = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this._margins = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins;\r\n    this.setDimensions();\r\n    this.buildLabels();\r\n    this.fit();\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = this._margins.left;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = this._margins.top;\r\n      this.bottom = this.height;\r\n    }\r\n  }\r\n  buildLabels() {\r\n    const labelOpts = this.options.labels || {};\r\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\r\n    if (labelOpts.filter) {\r\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\r\n    }\r\n    if (labelOpts.sort) {\r\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\r\n    }\r\n    if (this.options.reverse) {\r\n      legendItems.reverse();\r\n    }\r\n    this.legendItems = legendItems;\r\n  }\r\n  fit() {\r\n    const {options, ctx} = this;\r\n    if (!options.display) {\r\n      this.width = this.height = 0;\r\n      return;\r\n    }\r\n    const labelOpts = options.labels;\r\n    const labelFont = toFont(labelOpts.font);\r\n    const fontSize = labelFont.size;\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    let width, height;\r\n    ctx.font = labelFont.string;\r\n    if (this.isHorizontal()) {\r\n      width = this.maxWidth;\r\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    } else {\r\n      height = this.maxHeight;\r\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    }\r\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\r\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\r\n  }\r\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const lineWidths = this.lineWidths = [0];\r\n    const lineHeight = itemHeight + padding;\r\n    let totalHeight = titleHeight;\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n    let row = -1;\r\n    let top = -lineHeight;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n        totalHeight += lineHeight;\r\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n        top += lineHeight;\r\n        row++;\r\n      }\r\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\r\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n    });\r\n    return totalHeight;\r\n  }\r\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const columnSizes = this.columnSizes = [];\r\n    const heightLimit = maxHeight - titleHeight;\r\n    let totalWidth = padding;\r\n    let currentColWidth = 0;\r\n    let currentColHeight = 0;\r\n    let left = 0;\r\n    let col = 0;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\r\n        totalWidth += currentColWidth + padding;\r\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n        left += currentColWidth + padding;\r\n        col++;\r\n        currentColWidth = currentColHeight = 0;\r\n      }\r\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\r\n      currentColWidth = Math.max(currentColWidth, itemWidth);\r\n      currentColHeight += itemHeight + padding;\r\n    });\r\n    totalWidth += currentColWidth;\r\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n    return totalWidth;\r\n  }\r\n  adjustHitBoxes() {\r\n    if (!this.options.display) {\r\n      return;\r\n    }\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\r\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\r\n    if (this.isHorizontal()) {\r\n      let row = 0;\r\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n      for (const hitbox of hitboxes) {\r\n        if (row !== hitbox.row) {\r\n          row = hitbox.row;\r\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n        }\r\n        hitbox.top += this.top + titleHeight + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\r\n        left += hitbox.width + padding;\r\n      }\r\n    } else {\r\n      let col = 0;\r\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n      for (const hitbox of hitboxes) {\r\n        if (hitbox.col !== col) {\r\n          col = hitbox.col;\r\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n        }\r\n        hitbox.top = top;\r\n        hitbox.left += this.left + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\r\n        top += hitbox.height + padding;\r\n      }\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    return this.options.position === 'top' || this.options.position === 'bottom';\r\n  }\r\n  draw() {\r\n    if (this.options.display) {\r\n      const ctx = this.ctx;\r\n      clipArea(ctx, this);\r\n      this._draw();\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  _draw() {\r\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\r\n    const {align, labels: labelOpts} = opts;\r\n    const defaultColor = defaults.color;\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const labelFont = toFont(labelOpts.font);\r\n    const {color: fontColor, padding} = labelOpts;\r\n    const fontSize = labelFont.size;\r\n    const halfFontSize = fontSize / 2;\r\n    let cursor;\r\n    this.drawTitle();\r\n    ctx.textAlign = rtlHelper.textAlign('left');\r\n    ctx.textBaseline = 'middle';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.font = labelFont.string;\r\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    const drawLegendBox = function(x, y, legendItem) {\r\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n      if (labelOpts.usePointStyle) {\r\n        const drawOptions = {\r\n          radius: boxHeight * Math.SQRT2 / 2,\r\n          pointStyle: legendItem.pointStyle,\r\n          rotation: legendItem.rotation,\r\n          borderWidth: lineWidth\r\n        };\r\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n        const centerY = y + halfFontSize;\r\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\r\n      } else {\r\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\r\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\r\n        ctx.beginPath();\r\n        if (Object.values(borderRadius).some(v => v !== 0)) {\r\n          addRoundedRectPath(ctx, {\r\n            x: xBoxLeft,\r\n            y: yBoxTop,\r\n            w: boxWidth,\r\n            h: boxHeight,\r\n            radius: borderRadius,\r\n          });\r\n        } else {\r\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\r\n        }\r\n        ctx.fill();\r\n        if (lineWidth !== 0) {\r\n          ctx.stroke();\r\n        }\r\n      }\r\n      ctx.restore();\r\n    };\r\n    const fillText = function(x, y, legendItem) {\r\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\r\n        strikethrough: legendItem.hidden,\r\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\r\n      });\r\n    };\r\n    const isHorizontal = this.isHorizontal();\r\n    const titleHeight = this._computeTitleHeight();\r\n    if (isHorizontal) {\r\n      cursor = {\r\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\r\n        y: this.top + padding + titleHeight,\r\n        line: 0\r\n      };\r\n    } else {\r\n      cursor = {\r\n        x: this.left + padding,\r\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\r\n        line: 0\r\n      };\r\n    }\r\n    overrideTextDirection(this.ctx, opts.textDirection);\r\n    const lineHeight = itemHeight + padding;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\r\n      ctx.fillStyle = legendItem.fontColor || fontColor;\r\n      const textWidth = ctx.measureText(legendItem.text).width;\r\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n      const width = boxWidth + halfFontSize + textWidth;\r\n      let x = cursor.x;\r\n      let y = cursor.y;\r\n      rtlHelper.setWidth(this.width);\r\n      if (isHorizontal) {\r\n        if (i > 0 && x + width + padding > this.right) {\r\n          y = cursor.y += lineHeight;\r\n          cursor.line++;\r\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\r\n        }\r\n      } else if (i > 0 && y + lineHeight > this.bottom) {\r\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n        cursor.line++;\r\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\r\n      }\r\n      const realX = rtlHelper.x(x);\r\n      drawLegendBox(realX, y, legendItem);\r\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\r\n      fillText(rtlHelper.x(x), y, legendItem);\r\n      if (isHorizontal) {\r\n        cursor.x += width + padding;\r\n      } else {\r\n        cursor.y += lineHeight;\r\n      }\r\n    });\r\n    restoreTextDirection(this.ctx, opts.textDirection);\r\n  }\r\n  drawTitle() {\r\n    const opts = this.options;\r\n    const titleOpts = opts.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    if (!titleOpts.display) {\r\n      return;\r\n    }\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const ctx = this.ctx;\r\n    const position = titleOpts.position;\r\n    const halfFontSize = titleFont.size / 2;\r\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n    let y;\r\n    let left = this.left;\r\n    let maxWidth = this.width;\r\n    if (this.isHorizontal()) {\r\n      maxWidth = Math.max(...this.lineWidths);\r\n      y = this.top + topPaddingPlusHalfFontSize;\r\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\r\n    } else {\r\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\r\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\r\n    }\r\n    const x = _alignStartEnd(position, left, left + maxWidth);\r\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n    ctx.textBaseline = 'middle';\r\n    ctx.strokeStyle = titleOpts.color;\r\n    ctx.fillStyle = titleOpts.color;\r\n    ctx.font = titleFont.string;\r\n    renderText(ctx, titleOpts.text, x, y, titleFont);\r\n  }\r\n  _computeTitleHeight() {\r\n    const titleOpts = this.options.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n  }\r\n  _getLegendItemAt(x, y) {\r\n    let i, hitBox, lh;\r\n    if (_isBetween(x, this.left, this.right)\r\n      && _isBetween(y, this.top, this.bottom)) {\r\n      lh = this.legendHitBoxes;\r\n      for (i = 0; i < lh.length; ++i) {\r\n        hitBox = lh[i];\r\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\r\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\r\n          return this.legendItems[i];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  handleEvent(e) {\r\n    const opts = this.options;\r\n    if (!isListened(e.type, opts)) {\r\n      return;\r\n    }\r\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\r\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\r\n      const previous = this._hoveredItem;\r\n      const sameItem = itemsEqual(previous, hoveredItem);\r\n      if (previous && !sameItem) {\r\n        callback(opts.onLeave, [e, previous, this], this);\r\n      }\r\n      this._hoveredItem = hoveredItem;\r\n      if (hoveredItem && !sameItem) {\r\n        callback(opts.onHover, [e, hoveredItem, this], this);\r\n      }\r\n    } else if (hoveredItem) {\r\n      callback(opts.onClick, [e, hoveredItem, this], this);\r\n    }\r\n  }\r\n}\r\nfunction isListened(type, opts) {\r\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\r\n    return true;\r\n  }\r\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nvar plugin_legend = {\r\n  id: 'legend',\r\n  _element: Legend,\r\n  start(chart, _args, options) {\r\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\r\n    layouts.configure(chart, legend, options);\r\n    layouts.addBox(chart, legend);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, chart.legend);\r\n    delete chart.legend;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const legend = chart.legend;\r\n    layouts.configure(chart, legend, options);\r\n    legend.options = options;\r\n  },\r\n  afterUpdate(chart) {\r\n    const legend = chart.legend;\r\n    legend.buildLabels();\r\n    legend.adjustHitBoxes();\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (!args.replay) {\r\n      chart.legend.handleEvent(args.event);\r\n    }\r\n  },\r\n  defaults: {\r\n    display: true,\r\n    position: 'top',\r\n    align: 'center',\r\n    fullSize: true,\r\n    reverse: false,\r\n    weight: 1000,\r\n    onClick(e, legendItem, legend) {\r\n      const index = legendItem.datasetIndex;\r\n      const ci = legend.chart;\r\n      if (ci.isDatasetVisible(index)) {\r\n        ci.hide(index);\r\n        legendItem.hidden = true;\r\n      } else {\r\n        ci.show(index);\r\n        legendItem.hidden = false;\r\n      }\r\n    },\r\n    onHover: null,\r\n    onLeave: null,\r\n    labels: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      boxWidth: 40,\r\n      padding: 10,\r\n      generateLabels(chart) {\r\n        const datasets = chart.data.datasets;\r\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\r\n        return chart._getSortedDatasetMetas().map((meta) => {\r\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n          const borderWidth = toPadding(style.borderWidth);\r\n          return {\r\n            text: datasets[meta.index].label,\r\n            fillStyle: style.backgroundColor,\r\n            fontColor: color,\r\n            hidden: !meta.visible,\r\n            lineCap: style.borderCapStyle,\r\n            lineDash: style.borderDash,\r\n            lineDashOffset: style.borderDashOffset,\r\n            lineJoin: style.borderJoinStyle,\r\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n            strokeStyle: style.borderColor,\r\n            pointStyle: pointStyle || style.pointStyle,\r\n            rotation: style.rotation,\r\n            textAlign: textAlign || style.textAlign,\r\n            borderRadius: 0,\r\n            datasetIndex: meta.index\r\n          };\r\n        }, this);\r\n      }\r\n    },\r\n    title: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      display: false,\r\n      position: 'center',\r\n      text: '',\r\n    }\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => !name.startsWith('on'),\r\n    labels: {\r\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\r\n    }\r\n  },\r\n};\r\n\r\nclass Title extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this._padding = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight) {\r\n    const opts = this.options;\r\n    this.left = 0;\r\n    this.top = 0;\r\n    if (!opts.display) {\r\n      this.width = this.height = this.right = this.bottom = 0;\r\n      return;\r\n    }\r\n    this.width = this.right = maxWidth;\r\n    this.height = this.bottom = maxHeight;\r\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n    this._padding = toPadding(opts.padding);\r\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\r\n    if (this.isHorizontal()) {\r\n      this.height = textSize;\r\n    } else {\r\n      this.width = textSize;\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    const pos = this.options.position;\r\n    return pos === 'top' || pos === 'bottom';\r\n  }\r\n  _drawArgs(offset) {\r\n    const {top, left, bottom, right, options} = this;\r\n    const align = options.align;\r\n    let rotation = 0;\r\n    let maxWidth, titleX, titleY;\r\n    if (this.isHorizontal()) {\r\n      titleX = _alignStartEnd(align, left, right);\r\n      titleY = top + offset;\r\n      maxWidth = right - left;\r\n    } else {\r\n      if (options.position === 'left') {\r\n        titleX = left + offset;\r\n        titleY = _alignStartEnd(align, bottom, top);\r\n        rotation = PI * -0.5;\r\n      } else {\r\n        titleX = right - offset;\r\n        titleY = _alignStartEnd(align, top, bottom);\r\n        rotation = PI * 0.5;\r\n      }\r\n      maxWidth = bottom - top;\r\n    }\r\n    return {titleX, titleY, maxWidth, rotation};\r\n  }\r\n  draw() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    if (!opts.display) {\r\n      return;\r\n    }\r\n    const fontOpts = toFont(opts.font);\r\n    const lineHeight = fontOpts.lineHeight;\r\n    const offset = lineHeight / 2 + this._padding.top;\r\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\r\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n      color: opts.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: _toLeftRightCenter(opts.align),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n}\r\nfunction createTitle(chart, titleOpts) {\r\n  const title = new Title({\r\n    ctx: chart.ctx,\r\n    options: titleOpts,\r\n    chart\r\n  });\r\n  layouts.configure(chart, title, titleOpts);\r\n  layouts.addBox(chart, title);\r\n  chart.titleBlock = title;\r\n}\r\nvar plugin_title = {\r\n  id: 'title',\r\n  _element: Title,\r\n  start(chart, _args, options) {\r\n    createTitle(chart, options);\r\n  },\r\n  stop(chart) {\r\n    const titleBlock = chart.titleBlock;\r\n    layouts.removeBox(chart, titleBlock);\r\n    delete chart.titleBlock;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = chart.titleBlock;\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'bold',\r\n    },\r\n    fullSize: true,\r\n    padding: 10,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 2000\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst map = new WeakMap();\r\nvar plugin_subtitle = {\r\n  id: 'subtitle',\r\n  start(chart, _args, options) {\r\n    const title = new Title({\r\n      ctx: chart.ctx,\r\n      options,\r\n      chart\r\n    });\r\n    layouts.configure(chart, title, options);\r\n    layouts.addBox(chart, title);\r\n    map.set(chart, title);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, map.get(chart));\r\n    map.delete(chart);\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = map.get(chart);\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'normal',\r\n    },\r\n    fullSize: true,\r\n    padding: 0,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 1500\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst positioners = {\r\n  average(items) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let i, len;\r\n    let x = 0;\r\n    let y = 0;\r\n    let count = 0;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const pos = el.tooltipPosition();\r\n        x += pos.x;\r\n        y += pos.y;\r\n        ++count;\r\n      }\r\n    }\r\n    return {\r\n      x: x / count,\r\n      y: y / count\r\n    };\r\n  },\r\n  nearest(items, eventPosition) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let x = eventPosition.x;\r\n    let y = eventPosition.y;\r\n    let minDistance = Number.POSITIVE_INFINITY;\r\n    let i, len, nearestElement;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const center = el.getCenterPoint();\r\n        const d = distanceBetweenPoints(eventPosition, center);\r\n        if (d < minDistance) {\r\n          minDistance = d;\r\n          nearestElement = el;\r\n        }\r\n      }\r\n    }\r\n    if (nearestElement) {\r\n      const tp = nearestElement.tooltipPosition();\r\n      x = tp.x;\r\n      y = tp.y;\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n};\r\nfunction pushOrConcat(base, toPush) {\r\n  if (toPush) {\r\n    if (isArray(toPush)) {\r\n      Array.prototype.push.apply(base, toPush);\r\n    } else {\r\n      base.push(toPush);\r\n    }\r\n  }\r\n  return base;\r\n}\r\nfunction splitNewlines(str) {\r\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n    return str.split('\\n');\r\n  }\r\n  return str;\r\n}\r\nfunction createTooltipItem(chart, item) {\r\n  const {element, datasetIndex, index} = item;\r\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n  const {label, value} = controller.getLabelAndValue(index);\r\n  return {\r\n    chart,\r\n    label,\r\n    parsed: controller.getParsed(index),\r\n    raw: chart.data.datasets[datasetIndex].data[index],\r\n    formattedValue: value,\r\n    dataset: controller.getDataset(),\r\n    dataIndex: index,\r\n    datasetIndex,\r\n    element\r\n  };\r\n}\r\nfunction getTooltipSize(tooltip, options) {\r\n  const ctx = tooltip.chart.ctx;\r\n  const {body, footer, title} = tooltip;\r\n  const {boxWidth, boxHeight} = options;\r\n  const bodyFont = toFont(options.bodyFont);\r\n  const titleFont = toFont(options.titleFont);\r\n  const footerFont = toFont(options.footerFont);\r\n  const titleLineCount = title.length;\r\n  const footerLineCount = footer.length;\r\n  const bodyLineItemCount = body.length;\r\n  const padding = toPadding(options.padding);\r\n  let height = padding.height;\r\n  let width = 0;\r\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n  if (titleLineCount) {\r\n    height += titleLineCount * titleFont.lineHeight\r\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\r\n\t\t\t+ options.titleMarginBottom;\r\n  }\r\n  if (combinedBodyLength) {\r\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n    height += bodyLineItemCount * bodyLineHeight\r\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\r\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\r\n  }\r\n  if (footerLineCount) {\r\n    height += options.footerMarginTop\r\n\t\t\t+ footerLineCount * footerFont.lineHeight\r\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\r\n  }\r\n  let widthPadding = 0;\r\n  const maxLineWidth = function(line) {\r\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n  };\r\n  ctx.save();\r\n  ctx.font = titleFont.string;\r\n  each(tooltip.title, maxLineWidth);\r\n  ctx.font = bodyFont.string;\r\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\r\n  each(body, (bodyItem) => {\r\n    each(bodyItem.before, maxLineWidth);\r\n    each(bodyItem.lines, maxLineWidth);\r\n    each(bodyItem.after, maxLineWidth);\r\n  });\r\n  widthPadding = 0;\r\n  ctx.font = footerFont.string;\r\n  each(tooltip.footer, maxLineWidth);\r\n  ctx.restore();\r\n  width += padding.width;\r\n  return {width, height};\r\n}\r\nfunction determineYAlign(chart, size) {\r\n  const {y, height} = size;\r\n  if (y < height / 2) {\r\n    return 'top';\r\n  } else if (y > (chart.height - height / 2)) {\r\n    return 'bottom';\r\n  }\r\n  return 'center';\r\n}\r\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\r\n  const {x, width} = size;\r\n  const caret = options.caretSize + options.caretPadding;\r\n  if (xAlign === 'left' && x + width + caret > chart.width) {\r\n    return true;\r\n  }\r\n  if (xAlign === 'right' && x - width - caret < 0) {\r\n    return true;\r\n  }\r\n}\r\nfunction determineXAlign(chart, options, size, yAlign) {\r\n  const {x, width} = size;\r\n  const {width: chartWidth, chartArea: {left, right}} = chart;\r\n  let xAlign = 'center';\r\n  if (yAlign === 'center') {\r\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n  } else if (x <= width / 2) {\r\n    xAlign = 'left';\r\n  } else if (x >= chartWidth - width / 2) {\r\n    xAlign = 'right';\r\n  }\r\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n    xAlign = 'center';\r\n  }\r\n  return xAlign;\r\n}\r\nfunction determineAlignment(chart, options, size) {\r\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\r\n  return {\r\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n    yAlign\r\n  };\r\n}\r\nfunction alignX(size, xAlign) {\r\n  let {x, width} = size;\r\n  if (xAlign === 'right') {\r\n    x -= width;\r\n  } else if (xAlign === 'center') {\r\n    x -= (width / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction alignY(size, yAlign, paddingAndSize) {\r\n  let {y, height} = size;\r\n  if (yAlign === 'top') {\r\n    y += paddingAndSize;\r\n  } else if (yAlign === 'bottom') {\r\n    y -= height + paddingAndSize;\r\n  } else {\r\n    y -= (height / 2);\r\n  }\r\n  return y;\r\n}\r\nfunction getBackgroundPoint(options, size, alignment, chart) {\r\n  const {caretSize, caretPadding, cornerRadius} = options;\r\n  const {xAlign, yAlign} = alignment;\r\n  const paddingAndSize = caretSize + caretPadding;\r\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n  let x = alignX(size, xAlign);\r\n  const y = alignY(size, yAlign, paddingAndSize);\r\n  if (yAlign === 'center') {\r\n    if (xAlign === 'left') {\r\n      x += paddingAndSize;\r\n    } else if (xAlign === 'right') {\r\n      x -= paddingAndSize;\r\n    }\r\n  } else if (xAlign === 'left') {\r\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\r\n  } else if (xAlign === 'right') {\r\n    x += Math.max(topRight, bottomRight) + caretSize;\r\n  }\r\n  return {\r\n    x: _limitValue(x, 0, chart.width - size.width),\r\n    y: _limitValue(y, 0, chart.height - size.height)\r\n  };\r\n}\r\nfunction getAlignedX(tooltip, align, options) {\r\n  const padding = toPadding(options.padding);\r\n  return align === 'center'\r\n    ? tooltip.x + tooltip.width / 2\r\n    : align === 'right'\r\n      ? tooltip.x + tooltip.width - padding.right\r\n      : tooltip.x + padding.left;\r\n}\r\nfunction getBeforeAfterBodyLines(callback) {\r\n  return pushOrConcat([], splitNewlines(callback));\r\n}\r\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\r\n  return createContext(parent, {\r\n    tooltip,\r\n    tooltipItems,\r\n    type: 'tooltip'\r\n  });\r\n}\r\nfunction overrideCallbacks(callbacks, context) {\r\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n  return override ? callbacks.override(override) : callbacks;\r\n}\r\nclass Tooltip extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.opacity = 0;\r\n    this._active = [];\r\n    this._eventPosition = undefined;\r\n    this._size = undefined;\r\n    this._cachedAnimations = undefined;\r\n    this._tooltipItems = [];\r\n    this.$animations = undefined;\r\n    this.$context = undefined;\r\n    this.chart = config.chart || config._chart;\r\n    this._chart = this.chart;\r\n    this.options = config.options;\r\n    this.dataPoints = undefined;\r\n    this.title = undefined;\r\n    this.beforeBody = undefined;\r\n    this.body = undefined;\r\n    this.afterBody = undefined;\r\n    this.footer = undefined;\r\n    this.xAlign = undefined;\r\n    this.yAlign = undefined;\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this.caretX = undefined;\r\n    this.caretY = undefined;\r\n    this.labelColors = undefined;\r\n    this.labelPointStyles = undefined;\r\n    this.labelTextColors = undefined;\r\n  }\r\n  initialize(options) {\r\n    this.options = options;\r\n    this._cachedAnimations = undefined;\r\n    this.$context = undefined;\r\n  }\r\n  _resolveAnimations() {\r\n    const cached = this._cachedAnimations;\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const chart = this.chart;\r\n    const options = this.options.setContext(this.getContext());\r\n    const opts = options.enabled && chart.options.animation && options.animations;\r\n    const animations = new Animations(this.chart, opts);\r\n    if (opts._cacheable) {\r\n      this._cachedAnimations = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getContext() {\r\n    return this.$context ||\r\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\r\n  }\r\n  getTitle(context, options) {\r\n    const {callbacks} = options;\r\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\r\n    const title = callbacks.title.apply(this, [context]);\r\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n    lines = pushOrConcat(lines, splitNewlines(title));\r\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n    return lines;\r\n  }\r\n  getBeforeBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\r\n  }\r\n  getBody(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const bodyItems = [];\r\n    each(tooltipItems, (context) => {\r\n      const bodyItem = {\r\n        before: [],\r\n        lines: [],\r\n        after: []\r\n      };\r\n      const scoped = overrideCallbacks(callbacks, context);\r\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\r\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\r\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\r\n      bodyItems.push(bodyItem);\r\n    });\r\n    return bodyItems;\r\n  }\r\n  getAfterBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\r\n  }\r\n  getFooter(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\r\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\r\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n    lines = pushOrConcat(lines, splitNewlines(footer));\r\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n    return lines;\r\n  }\r\n  _createItems(options) {\r\n    const active = this._active;\r\n    const data = this.chart.data;\r\n    const labelColors = [];\r\n    const labelPointStyles = [];\r\n    const labelTextColors = [];\r\n    let tooltipItems = [];\r\n    let i, len;\r\n    for (i = 0, len = active.length; i < len; ++i) {\r\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\r\n    }\r\n    if (options.filter) {\r\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\r\n    }\r\n    if (options.itemSort) {\r\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\r\n    }\r\n    each(tooltipItems, (context) => {\r\n      const scoped = overrideCallbacks(options.callbacks, context);\r\n      labelColors.push(scoped.labelColor.call(this, context));\r\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\r\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\r\n    });\r\n    this.labelColors = labelColors;\r\n    this.labelPointStyles = labelPointStyles;\r\n    this.labelTextColors = labelTextColors;\r\n    this.dataPoints = tooltipItems;\r\n    return tooltipItems;\r\n  }\r\n  update(changed, replay) {\r\n    const options = this.options.setContext(this.getContext());\r\n    const active = this._active;\r\n    let properties;\r\n    let tooltipItems = [];\r\n    if (!active.length) {\r\n      if (this.opacity !== 0) {\r\n        properties = {\r\n          opacity: 0\r\n        };\r\n      }\r\n    } else {\r\n      const position = positioners[options.position].call(this, active, this._eventPosition);\r\n      tooltipItems = this._createItems(options);\r\n      this.title = this.getTitle(tooltipItems, options);\r\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\r\n      this.body = this.getBody(tooltipItems, options);\r\n      this.afterBody = this.getAfterBody(tooltipItems, options);\r\n      this.footer = this.getFooter(tooltipItems, options);\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, size);\r\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\r\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\r\n      this.xAlign = alignment.xAlign;\r\n      this.yAlign = alignment.yAlign;\r\n      properties = {\r\n        opacity: 1,\r\n        x: backgroundPoint.x,\r\n        y: backgroundPoint.y,\r\n        width: size.width,\r\n        height: size.height,\r\n        caretX: position.x,\r\n        caretY: position.y\r\n      };\r\n    }\r\n    this._tooltipItems = tooltipItems;\r\n    this.$context = undefined;\r\n    if (properties) {\r\n      this._resolveAnimations().update(this, properties);\r\n    }\r\n    if (changed && options.external) {\r\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\r\n    }\r\n  }\r\n  drawCaret(tooltipPoint, ctx, size, options) {\r\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n  }\r\n  getCaretPosition(tooltipPoint, size, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {caretSize, cornerRadius} = options;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n    const {x: ptX, y: ptY} = tooltipPoint;\r\n    const {width, height} = size;\r\n    let x1, x2, x3, y1, y2, y3;\r\n    if (yAlign === 'center') {\r\n      y2 = ptY + (height / 2);\r\n      if (xAlign === 'left') {\r\n        x1 = ptX;\r\n        x2 = x1 - caretSize;\r\n        y1 = y2 + caretSize;\r\n        y3 = y2 - caretSize;\r\n      } else {\r\n        x1 = ptX + width;\r\n        x2 = x1 + caretSize;\r\n        y1 = y2 - caretSize;\r\n        y3 = y2 + caretSize;\r\n      }\r\n      x3 = x1;\r\n    } else {\r\n      if (xAlign === 'left') {\r\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\r\n      } else if (xAlign === 'right') {\r\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\r\n      } else {\r\n        x2 = this.caretX;\r\n      }\r\n      if (yAlign === 'top') {\r\n        y1 = ptY;\r\n        y2 = y1 - caretSize;\r\n        x1 = x2 - caretSize;\r\n        x3 = x2 + caretSize;\r\n      } else {\r\n        y1 = ptY + height;\r\n        y2 = y1 + caretSize;\r\n        x1 = x2 + caretSize;\r\n        x3 = x2 - caretSize;\r\n      }\r\n      y3 = y1;\r\n    }\r\n    return {x1, x2, x3, y1, y2, y3};\r\n  }\r\n  drawTitle(pt, ctx, options) {\r\n    const title = this.title;\r\n    const length = title.length;\r\n    let titleFont, titleSpacing, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.titleAlign, options);\r\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n      ctx.textBaseline = 'middle';\r\n      titleFont = toFont(options.titleFont);\r\n      titleSpacing = options.titleSpacing;\r\n      ctx.fillStyle = options.titleColor;\r\n      ctx.font = titleFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n        pt.y += titleFont.lineHeight + titleSpacing;\r\n        if (i + 1 === length) {\r\n          pt.y += options.titleMarginBottom - titleSpacing;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n    const labelColors = this.labelColors[i];\r\n    const labelPointStyle = this.labelPointStyles[i];\r\n    const {boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    const colorX = getAlignedX(this, 'left', options);\r\n    const rtlColorX = rtlHelper.x(colorX);\r\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n    const colorY = pt.y + yOffSet;\r\n    if (options.usePointStyle) {\r\n      const drawOptions = {\r\n        radius: Math.min(boxWidth, boxHeight) / 2,\r\n        pointStyle: labelPointStyle.pointStyle,\r\n        rotation: labelPointStyle.rotation,\r\n        borderWidth: 1\r\n      };\r\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n      const centerY = colorY + boxHeight / 2;\r\n      ctx.strokeStyle = options.multiKeyBackground;\r\n      ctx.fillStyle = options.multiKeyBackground;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.fillStyle = labelColors.backgroundColor;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n    } else {\r\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.setLineDash(labelColors.borderDash || []);\r\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\r\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\r\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\r\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        addRoundedRectPath(ctx, {\r\n          x: outerX,\r\n          y: colorY,\r\n          w: boxWidth,\r\n          h: boxHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: innerX,\r\n          y: colorY + 1,\r\n          w: boxWidth - 2,\r\n          h: boxHeight - 2,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\r\n      }\r\n    }\r\n    ctx.fillStyle = this.labelTextColors[i];\r\n  }\r\n  drawBody(pt, ctx, options) {\r\n    const {body} = this;\r\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    let bodyLineHeight = bodyFont.lineHeight;\r\n    let xLinePadding = 0;\r\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n    const fillLineOfText = function(line) {\r\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n      pt.y += bodyLineHeight + bodySpacing;\r\n    };\r\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n    ctx.textAlign = bodyAlign;\r\n    ctx.textBaseline = 'middle';\r\n    ctx.font = bodyFont.string;\r\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\r\n    ctx.fillStyle = options.bodyColor;\r\n    each(this.beforeBody, fillLineOfText);\r\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\r\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\r\n      : 0;\r\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\r\n      bodyItem = body[i];\r\n      textColor = this.labelTextColors[i];\r\n      ctx.fillStyle = textColor;\r\n      each(bodyItem.before, fillLineOfText);\r\n      lines = bodyItem.lines;\r\n      if (displayColors && lines.length) {\r\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n      }\r\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\r\n        fillLineOfText(lines[j]);\r\n        bodyLineHeight = bodyFont.lineHeight;\r\n      }\r\n      each(bodyItem.after, fillLineOfText);\r\n    }\r\n    xLinePadding = 0;\r\n    bodyLineHeight = bodyFont.lineHeight;\r\n    each(this.afterBody, fillLineOfText);\r\n    pt.y -= bodySpacing;\r\n  }\r\n  drawFooter(pt, ctx, options) {\r\n    const footer = this.footer;\r\n    const length = footer.length;\r\n    let footerFont, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.footerAlign, options);\r\n      pt.y += options.footerMarginTop;\r\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n      ctx.textBaseline = 'middle';\r\n      footerFont = toFont(options.footerFont);\r\n      ctx.fillStyle = options.footerColor;\r\n      ctx.font = footerFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n        pt.y += footerFont.lineHeight + options.footerSpacing;\r\n      }\r\n    }\r\n  }\r\n  drawBackground(pt, ctx, tooltipSize, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {x, y} = pt;\r\n    const {width, height} = tooltipSize;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + topLeft, y);\r\n    if (yAlign === 'top') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width - topRight, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\r\n    if (yAlign === 'center' && xAlign === 'right') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width, y + height - bottomRight);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\r\n    if (yAlign === 'bottom') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + bottomLeft, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\r\n    if (yAlign === 'center' && xAlign === 'left') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x, y + topLeft);\r\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    if (options.borderWidth > 0) {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n  _updateAnimationTarget(options) {\r\n    const chart = this.chart;\r\n    const anims = this.$animations;\r\n    const animX = anims && anims.x;\r\n    const animY = anims && anims.y;\r\n    if (animX || animY) {\r\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, this._size);\r\n      const alignment = determineAlignment(chart, options, positionAndSize);\r\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n      if (animX._to !== point.x || animY._to !== point.y) {\r\n        this.xAlign = alignment.xAlign;\r\n        this.yAlign = alignment.yAlign;\r\n        this.width = size.width;\r\n        this.height = size.height;\r\n        this.caretX = position.x;\r\n        this.caretY = position.y;\r\n        this._resolveAnimations().update(this, point);\r\n      }\r\n    }\r\n  }\r\n  _willRender() {\r\n    return !!this.opacity;\r\n  }\r\n  draw(ctx) {\r\n    const options = this.options.setContext(this.getContext());\r\n    let opacity = this.opacity;\r\n    if (!opacity) {\r\n      return;\r\n    }\r\n    this._updateAnimationTarget(options);\r\n    const tooltipSize = {\r\n      width: this.width,\r\n      height: this.height\r\n    };\r\n    const pt = {\r\n      x: this.x,\r\n      y: this.y\r\n    };\r\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n    const padding = toPadding(options.padding);\r\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\r\n    if (options.enabled && hasTooltipContent) {\r\n      ctx.save();\r\n      ctx.globalAlpha = opacity;\r\n      this.drawBackground(pt, ctx, tooltipSize, options);\r\n      overrideTextDirection(ctx, options.textDirection);\r\n      pt.y += padding.top;\r\n      this.drawTitle(pt, ctx, options);\r\n      this.drawBody(pt, ctx, options);\r\n      this.drawFooter(pt, ctx, options);\r\n      restoreTextDirection(ctx, options.textDirection);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements, eventPosition) {\r\n    const lastActive = this._active;\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.chart.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(lastActive, active);\r\n    const positionChanged = this._positionChanged(active, eventPosition);\r\n    if (changed || positionChanged) {\r\n      this._active = active;\r\n      this._eventPosition = eventPosition;\r\n      this._ignoreReplayEvents = true;\r\n      this.update(true);\r\n    }\r\n  }\r\n  handleEvent(e, replay, inChartArea = true) {\r\n    if (replay && this._ignoreReplayEvents) {\r\n      return false;\r\n    }\r\n    this._ignoreReplayEvents = false;\r\n    const options = this.options;\r\n    const lastActive = this._active || [];\r\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\r\n    const positionChanged = this._positionChanged(active, e);\r\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n    if (changed) {\r\n      this._active = active;\r\n      if (options.enabled || options.external) {\r\n        this._eventPosition = {\r\n          x: e.x,\r\n          y: e.y\r\n        };\r\n        this.update(true, replay);\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n  _getActiveElements(e, lastActive, replay, inChartArea) {\r\n    const options = this.options;\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n    if (!inChartArea) {\r\n      return lastActive;\r\n    }\r\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n    if (options.reverse) {\r\n      active.reverse();\r\n    }\r\n    return active;\r\n  }\r\n  _positionChanged(active, e) {\r\n    const {caretX, caretY, options} = this;\r\n    const position = positioners[options.position].call(this, active, e);\r\n    return position !== false && (caretX !== position.x || caretY !== position.y);\r\n  }\r\n}\r\nTooltip.positioners = positioners;\r\nvar plugin_tooltip = {\r\n  id: 'tooltip',\r\n  _element: Tooltip,\r\n  positioners,\r\n  afterInit(chart, _args, options) {\r\n    if (options) {\r\n      chart.tooltip = new Tooltip({chart, options});\r\n    }\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  reset(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  afterDraw(chart) {\r\n    const tooltip = chart.tooltip;\r\n    if (tooltip && tooltip._willRender()) {\r\n      const args = {\r\n        tooltip\r\n      };\r\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\r\n        return;\r\n      }\r\n      tooltip.draw(chart.ctx);\r\n      chart.notifyPlugins('afterTooltipDraw', args);\r\n    }\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (chart.tooltip) {\r\n      const useFinalPosition = args.replay;\r\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\r\n        args.changed = true;\r\n      }\r\n    }\r\n  },\r\n  defaults: {\r\n    enabled: true,\r\n    external: null,\r\n    position: 'average',\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    titleColor: '#fff',\r\n    titleFont: {\r\n      weight: 'bold',\r\n    },\r\n    titleSpacing: 2,\r\n    titleMarginBottom: 6,\r\n    titleAlign: 'left',\r\n    bodyColor: '#fff',\r\n    bodySpacing: 2,\r\n    bodyFont: {\r\n    },\r\n    bodyAlign: 'left',\r\n    footerColor: '#fff',\r\n    footerSpacing: 2,\r\n    footerMarginTop: 6,\r\n    footerFont: {\r\n      weight: 'bold',\r\n    },\r\n    footerAlign: 'left',\r\n    padding: 6,\r\n    caretPadding: 2,\r\n    caretSize: 5,\r\n    cornerRadius: 6,\r\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\r\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\r\n    multiKeyBackground: '#fff',\r\n    displayColors: true,\r\n    boxPadding: 0,\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    animation: {\r\n      duration: 400,\r\n      easing: 'easeOutQuart',\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\r\n      },\r\n      opacity: {\r\n        easing: 'linear',\r\n        duration: 200\r\n      }\r\n    },\r\n    callbacks: {\r\n      beforeTitle: noop,\r\n      title(tooltipItems) {\r\n        if (tooltipItems.length > 0) {\r\n          const item = tooltipItems[0];\r\n          const labels = item.chart.data.labels;\r\n          const labelCount = labels ? labels.length : 0;\r\n          if (this && this.options && this.options.mode === 'dataset') {\r\n            return item.dataset.label || '';\r\n          } else if (item.label) {\r\n            return item.label;\r\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n            return labels[item.dataIndex];\r\n          }\r\n        }\r\n        return '';\r\n      },\r\n      afterTitle: noop,\r\n      beforeBody: noop,\r\n      beforeLabel: noop,\r\n      label(tooltipItem) {\r\n        if (this && this.options && this.options.mode === 'dataset') {\r\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n        }\r\n        let label = tooltipItem.dataset.label || '';\r\n        if (label) {\r\n          label += ': ';\r\n        }\r\n        const value = tooltipItem.formattedValue;\r\n        if (!isNullOrUndef(value)) {\r\n          label += value;\r\n        }\r\n        return label;\r\n      },\r\n      labelColor(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          borderColor: options.borderColor,\r\n          backgroundColor: options.backgroundColor,\r\n          borderWidth: options.borderWidth,\r\n          borderDash: options.borderDash,\r\n          borderDashOffset: options.borderDashOffset,\r\n          borderRadius: 0,\r\n        };\r\n      },\r\n      labelTextColor() {\r\n        return this.options.bodyColor;\r\n      },\r\n      labelPointStyle(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          pointStyle: options.pointStyle,\r\n          rotation: options.rotation,\r\n        };\r\n      },\r\n      afterLabel: noop,\r\n      afterBody: noop,\r\n      beforeFooter: noop,\r\n      footer: noop,\r\n      afterFooter: noop\r\n    }\r\n  },\r\n  defaultRoutes: {\r\n    bodyFont: 'font',\r\n    footerFont: 'font',\r\n    titleFont: 'font'\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n    _indexable: false,\r\n    callbacks: {\r\n      _scriptable: false,\r\n      _indexable: false,\r\n    },\r\n    animation: {\r\n      _fallback: false\r\n    },\r\n    animations: {\r\n      _fallback: 'animation'\r\n    }\r\n  },\r\n  additionalOptionScopes: ['interaction']\r\n};\r\n\r\nvar plugins = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nDecimation: plugin_decimation,\r\nFiller: index,\r\nLegend: plugin_legend,\r\nSubTitle: plugin_subtitle,\r\nTitle: plugin_title,\r\nTooltip: plugin_tooltip\r\n});\r\n\r\nconst addIfString = (labels, raw, index, addedLabels) => {\r\n  if (typeof raw === 'string') {\r\n    index = labels.push(raw) - 1;\r\n    addedLabels.unshift({index, label: raw});\r\n  } else if (isNaN(raw)) {\r\n    index = null;\r\n  }\r\n  return index;\r\n};\r\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\r\n  const first = labels.indexOf(raw);\r\n  if (first === -1) {\r\n    return addIfString(labels, raw, index, addedLabels);\r\n  }\r\n  const last = labels.lastIndexOf(raw);\r\n  return first !== last ? index : first;\r\n}\r\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\r\nclass CategoryScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n    this._addedLabels = [];\r\n  }\r\n  init(scaleOptions) {\r\n    const added = this._addedLabels;\r\n    if (added.length) {\r\n      const labels = this.getLabels();\r\n      for (const {index, label} of added) {\r\n        if (labels[index] === label) {\r\n          labels.splice(index, 1);\r\n        }\r\n      }\r\n      this._addedLabels = [];\r\n    }\r\n    super.init(scaleOptions);\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    const labels = this.getLabels();\r\n    index = isFinite(index) && labels[index] === raw ? index\r\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\r\n    return validIndex(index, labels.length - 1);\r\n  }\r\n  determineDataLimits() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this.getMinMax(true);\r\n    if (this.options.bounds === 'ticks') {\r\n      if (!minDefined) {\r\n        min = 0;\r\n      }\r\n      if (!maxDefined) {\r\n        max = this.getLabels().length - 1;\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const offset = this.options.offset;\r\n    const ticks = [];\r\n    let labels = this.getLabels();\r\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\r\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n    this._startValue = this.min - (offset ? 0.5 : 0);\r\n    for (let value = min; value <= max; value++) {\r\n      ticks.push({value});\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    const labels = this.getLabels();\r\n    if (value >= 0 && value < labels.length) {\r\n      return labels[value];\r\n    }\r\n    return value;\r\n  }\r\n  configure() {\r\n    super.configure();\r\n    if (!this.isHorizontal()) {\r\n      this._reversePixels = !this._reversePixels;\r\n    }\r\n  }\r\n  getPixelForValue(value) {\r\n    if (typeof value !== 'number') {\r\n      value = this.parse(value);\r\n    }\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\r\n  }\r\n  getBasePixel() {\r\n    return this.bottom;\r\n  }\r\n}\r\nCategoryScale.id = 'category';\r\nCategoryScale.defaults = {\r\n  ticks: {\r\n    callback: CategoryScale.prototype.getLabelForValue\r\n  }\r\n};\r\n\r\nfunction generateTicks$1(generationOptions, dataRange) {\r\n  const ticks = [];\r\n  const MIN_SPACING = 1e-14;\r\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\r\n  const unit = step || 1;\r\n  const maxSpaces = maxTicks - 1;\r\n  const {min: rmin, max: rmax} = dataRange;\r\n  const minDefined = !isNullOrUndef(min);\r\n  const maxDefined = !isNullOrUndef(max);\r\n  const countDefined = !isNullOrUndef(count);\r\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\r\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n  let factor, niceMin, niceMax, numSpaces;\r\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n    return [{value: rmin}, {value: rmax}];\r\n  }\r\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n  if (numSpaces > maxSpaces) {\r\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n  }\r\n  if (!isNullOrUndef(precision)) {\r\n    factor = Math.pow(10, precision);\r\n    spacing = Math.ceil(spacing * factor) / factor;\r\n  }\r\n  if (bounds === 'ticks') {\r\n    niceMin = Math.floor(rmin / spacing) * spacing;\r\n    niceMax = Math.ceil(rmax / spacing) * spacing;\r\n  } else {\r\n    niceMin = rmin;\r\n    niceMax = rmax;\r\n  }\r\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\r\n    spacing = (max - min) / numSpaces;\r\n    niceMin = min;\r\n    niceMax = max;\r\n  } else if (countDefined) {\r\n    niceMin = minDefined ? min : niceMin;\r\n    niceMax = maxDefined ? max : niceMax;\r\n    numSpaces = count - 1;\r\n    spacing = (niceMax - niceMin) / numSpaces;\r\n  } else {\r\n    numSpaces = (niceMax - niceMin) / spacing;\r\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n      numSpaces = Math.round(numSpaces);\r\n    } else {\r\n      numSpaces = Math.ceil(numSpaces);\r\n    }\r\n  }\r\n  const decimalPlaces = Math.max(\r\n    _decimalPlaces(spacing),\r\n    _decimalPlaces(niceMin)\r\n  );\r\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\r\n  niceMin = Math.round(niceMin * factor) / factor;\r\n  niceMax = Math.round(niceMax * factor) / factor;\r\n  let j = 0;\r\n  if (minDefined) {\r\n    if (includeBounds && niceMin !== min) {\r\n      ticks.push({value: min});\r\n      if (niceMin < min) {\r\n        j++;\r\n      }\r\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\r\n        j++;\r\n      }\r\n    } else if (niceMin < min) {\r\n      j++;\r\n    }\r\n  }\r\n  for (; j < numSpaces; ++j) {\r\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\r\n  }\r\n  if (maxDefined && includeBounds && niceMax !== max) {\r\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\r\n      ticks[ticks.length - 1].value = max;\r\n    } else {\r\n      ticks.push({value: max});\r\n    }\r\n  } else if (!maxDefined || niceMax === max) {\r\n    ticks.push({value: niceMax});\r\n  }\r\n  return ticks;\r\n}\r\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\r\n  const rad = toRadians(minRotation);\r\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\r\n  const length = 0.75 * minSpacing * ('' + value).length;\r\n  return Math.min(minSpacing / ratio, length);\r\n}\r\nclass LinearScaleBase extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._endValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n      return null;\r\n    }\r\n    return +raw;\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {beginAtZero} = this.options;\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    if (beginAtZero) {\r\n      const minSign = sign(min);\r\n      const maxSign = sign(max);\r\n      if (minSign < 0 && maxSign < 0) {\r\n        setMax(0);\r\n      } else if (minSign > 0 && maxSign > 0) {\r\n        setMin(0);\r\n      }\r\n    }\r\n    if (min === max) {\r\n      let offset = 1;\r\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\r\n        offset = Math.abs(max * 0.05);\r\n      }\r\n      setMax(max + offset);\r\n      if (!beginAtZero) {\r\n        setMin(min - offset);\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  getTickLimit() {\r\n    const tickOpts = this.options.ticks;\r\n    let {maxTicksLimit, stepSize} = tickOpts;\r\n    let maxTicks;\r\n    if (stepSize) {\r\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\r\n      if (maxTicks > 1000) {\r\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\r\n        maxTicks = 1000;\r\n      }\r\n    } else {\r\n      maxTicks = this.computeTickLimit();\r\n      maxTicksLimit = maxTicksLimit || 11;\r\n    }\r\n    if (maxTicksLimit) {\r\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n    }\r\n    return maxTicks;\r\n  }\r\n  computeTickLimit() {\r\n    return Number.POSITIVE_INFINITY;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    let maxTicks = this.getTickLimit();\r\n    maxTicks = Math.max(2, maxTicks);\r\n    const numericGeneratorOptions = {\r\n      maxTicks,\r\n      bounds: opts.bounds,\r\n      min: opts.min,\r\n      max: opts.max,\r\n      precision: tickOpts.precision,\r\n      step: tickOpts.stepSize,\r\n      count: tickOpts.count,\r\n      maxDigits: this._maxDigits(),\r\n      horizontal: this.isHorizontal(),\r\n      minRotation: tickOpts.minRotation || 0,\r\n      includeBounds: tickOpts.includeBounds !== false\r\n    };\r\n    const dataRange = this._range || this;\r\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  configure() {\r\n    const ticks = this.ticks;\r\n    let start = this.min;\r\n    let end = this.max;\r\n    super.configure();\r\n    if (this.options.offset && ticks.length) {\r\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n      start -= offset;\r\n      end += offset;\r\n    }\r\n    this._startValue = start;\r\n    this._endValue = end;\r\n    this._valueRange = end - start;\r\n  }\r\n  getLabelForValue(value) {\r\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n}\r\n\r\nclass LinearScale extends LinearScaleBase {\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? min : 0;\r\n    this.max = isNumberFinite(max) ? max : 1;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    const horizontal = this.isHorizontal();\r\n    const length = horizontal ? this.width : this.height;\r\n    const minRotation = toRadians(this.options.ticks.minRotation);\r\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\r\n    const tickFont = this._resolveTickFontOptions(0);\r\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\r\n  }\r\n  getPixelForValue(value) {\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n  }\r\n}\r\nLinearScale.id = 'linear';\r\nLinearScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.numeric\r\n  }\r\n};\r\n\r\nfunction isMajor(tickVal) {\r\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\r\n  return remain === 1;\r\n}\r\nfunction generateTicks(generationOptions, dataRange) {\r\n  const endExp = Math.floor(log10(dataRange.max));\r\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n  const ticks = [];\r\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\r\n  let exp = Math.floor(log10(tickVal));\r\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\r\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n  do {\r\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\r\n    ++significand;\r\n    if (significand === 10) {\r\n      significand = 1;\r\n      ++exp;\r\n      precision = exp >= 0 ? 1 : precision;\r\n    }\r\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\r\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\r\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\r\n  return ticks;\r\n}\r\nclass LogarithmicScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\r\n    if (value === 0) {\r\n      this._zero = true;\r\n      return undefined;\r\n    }\r\n    return isNumberFinite(value) && value > 0 ? value : null;\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\r\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\r\n    if (this.options.beginAtZero) {\r\n      this._zero = true;\r\n    }\r\n    this.handleTickRangeOptions();\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let min = this.min;\r\n    let max = this.max;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\r\n    if (min === max) {\r\n      if (min <= 0) {\r\n        setMin(1);\r\n        setMax(10);\r\n      } else {\r\n        setMin(exp(min, -1));\r\n        setMax(exp(max, +1));\r\n      }\r\n    }\r\n    if (min <= 0) {\r\n      setMin(exp(max, -1));\r\n    }\r\n    if (max <= 0) {\r\n      setMax(exp(min, +1));\r\n    }\r\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\r\n      setMin(exp(min, -1));\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const generationOptions = {\r\n      min: this._userMin,\r\n      max: this._userMax\r\n    };\r\n    const ticks = generateTicks(generationOptions, this);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    return value === undefined\r\n      ? '0'\r\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n  configure() {\r\n    const start = this.min;\r\n    super.configure();\r\n    this._startValue = log10(start);\r\n    this._valueRange = log10(this.max) - log10(start);\r\n  }\r\n  getPixelForValue(value) {\r\n    if (value === undefined || value === 0) {\r\n      value = this.min;\r\n    }\r\n    if (value === null || isNaN(value)) {\r\n      return NaN;\r\n    }\r\n    return this.getPixelForDecimal(value === this.min\r\n      ? 0\r\n      : (log10(value) - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const decimal = this.getDecimalForPixel(pixel);\r\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\r\n  }\r\n}\r\nLogarithmicScale.id = 'logarithmic';\r\nLogarithmicScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.logarithmic,\r\n    major: {\r\n      enabled: true\r\n    }\r\n  }\r\n};\r\n\r\nfunction getTickBackdropHeight(opts) {\r\n  const tickOpts = opts.ticks;\r\n  if (tickOpts.display && opts.display) {\r\n    const padding = toPadding(tickOpts.backdropPadding);\r\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n  }\r\n  return 0;\r\n}\r\nfunction measureLabelSize(ctx, font, label) {\r\n  label = isArray(label) ? label : [label];\r\n  return {\r\n    w: _longestText(ctx, font.string, label),\r\n    h: label.length * font.lineHeight\r\n  };\r\n}\r\nfunction determineLimits(angle, pos, size, min, max) {\r\n  if (angle === min || angle === max) {\r\n    return {\r\n      start: pos - (size / 2),\r\n      end: pos + (size / 2)\r\n    };\r\n  } else if (angle < min || angle > max) {\r\n    return {\r\n      start: pos - size,\r\n      end: pos\r\n    };\r\n  }\r\n  return {\r\n    start: pos,\r\n    end: pos + size\r\n  };\r\n}\r\nfunction fitWithPointLabels(scale) {\r\n  const orig = {\r\n    l: scale.left + scale._padding.left,\r\n    r: scale.right - scale._padding.right,\r\n    t: scale.top + scale._padding.top,\r\n    b: scale.bottom - scale._padding.bottom\r\n  };\r\n  const limits = Object.assign({}, orig);\r\n  const labelSizes = [];\r\n  const padding = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const pointLabelOpts = scale.options.pointLabels;\r\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\r\n    padding[i] = opts.padding;\r\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\r\n    const plFont = toFont(opts.font);\r\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\r\n    labelSizes[i] = textSize;\r\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\r\n    const angle = Math.round(toDegrees(angleRadians));\r\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\r\n  }\r\n  scale.setCenterPoint(\r\n    orig.l - limits.l,\r\n    limits.r - orig.r,\r\n    orig.t - limits.t,\r\n    limits.b - orig.b\r\n  );\r\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\r\n}\r\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\r\n  const sin = Math.abs(Math.sin(angle));\r\n  const cos = Math.abs(Math.cos(angle));\r\n  let x = 0;\r\n  let y = 0;\r\n  if (hLimits.start < orig.l) {\r\n    x = (orig.l - hLimits.start) / sin;\r\n    limits.l = Math.min(limits.l, orig.l - x);\r\n  } else if (hLimits.end > orig.r) {\r\n    x = (hLimits.end - orig.r) / sin;\r\n    limits.r = Math.max(limits.r, orig.r + x);\r\n  }\r\n  if (vLimits.start < orig.t) {\r\n    y = (orig.t - vLimits.start) / cos;\r\n    limits.t = Math.min(limits.t, orig.t - y);\r\n  } else if (vLimits.end > orig.b) {\r\n    y = (vLimits.end - orig.b) / cos;\r\n    limits.b = Math.max(limits.b, orig.b + y);\r\n  }\r\n}\r\nfunction buildPointLabelItems(scale, labelSizes, padding) {\r\n  const items = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const opts = scale.options;\r\n  const extra = getTickBackdropHeight(opts) / 2;\r\n  const outerDistance = scale.drawingArea;\r\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\r\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\r\n    const size = labelSizes[i];\r\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\r\n    const textAlign = getTextAlignForAngle(angle);\r\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\r\n    items.push({\r\n      x: pointLabelPosition.x,\r\n      y,\r\n      textAlign,\r\n      left,\r\n      top: y,\r\n      right: left + size.w,\r\n      bottom: y + size.h\r\n    });\r\n  }\r\n  return items;\r\n}\r\nfunction getTextAlignForAngle(angle) {\r\n  if (angle === 0 || angle === 180) {\r\n    return 'center';\r\n  } else if (angle < 180) {\r\n    return 'left';\r\n  }\r\n  return 'right';\r\n}\r\nfunction leftForTextAlign(x, w, align) {\r\n  if (align === 'right') {\r\n    x -= w;\r\n  } else if (align === 'center') {\r\n    x -= (w / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction yForAngle(y, h, angle) {\r\n  if (angle === 90 || angle === 270) {\r\n    y -= (h / 2);\r\n  } else if (angle > 270 || angle < 90) {\r\n    y -= h;\r\n  }\r\n  return y;\r\n}\r\nfunction drawPointLabels(scale, labelCount) {\r\n  const {ctx, options: {pointLabels}} = scale;\r\n  for (let i = labelCount - 1; i >= 0; i--) {\r\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\r\n    const plFont = toFont(optsAtIndex.font);\r\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\r\n    const {backdropColor} = optsAtIndex;\r\n    if (!isNullOrUndef(backdropColor)) {\r\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\r\n      const padding = toPadding(optsAtIndex.backdropPadding);\r\n      ctx.fillStyle = backdropColor;\r\n      const backdropLeft = left - padding.left;\r\n      const backdropTop = top - padding.top;\r\n      const backdropWidth = right - left + padding.width;\r\n      const backdropHeight = bottom - top + padding.height;\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: backdropLeft,\r\n          y: backdropTop,\r\n          w: backdropWidth,\r\n          h: backdropHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\r\n      }\r\n    }\r\n    renderText(\r\n      ctx,\r\n      scale._pointLabels[i],\r\n      x,\r\n      y + (plFont.lineHeight / 2),\r\n      plFont,\r\n      {\r\n        color: optsAtIndex.color,\r\n        textAlign: textAlign,\r\n        textBaseline: 'middle'\r\n      }\r\n    );\r\n  }\r\n}\r\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\r\n  const {ctx} = scale;\r\n  if (circular) {\r\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n  } else {\r\n    let pointPosition = scale.getPointPosition(0, radius);\r\n    ctx.moveTo(pointPosition.x, pointPosition.y);\r\n    for (let i = 1; i < labelCount; i++) {\r\n      pointPosition = scale.getPointPosition(i, radius);\r\n      ctx.lineTo(pointPosition.x, pointPosition.y);\r\n    }\r\n  }\r\n}\r\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\r\n  const ctx = scale.ctx;\r\n  const circular = gridLineOpts.circular;\r\n  const {color, lineWidth} = gridLineOpts;\r\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\r\n    return;\r\n  }\r\n  ctx.save();\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.setLineDash(gridLineOpts.borderDash);\r\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\r\n  ctx.beginPath();\r\n  pathRadiusLine(scale, radius, circular, labelCount);\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n  ctx.restore();\r\n}\r\nfunction createPointLabelContext(parent, index, label) {\r\n  return createContext(parent, {\r\n    label,\r\n    index,\r\n    type: 'pointLabel'\r\n  });\r\n}\r\nclass RadialLinearScale extends LinearScaleBase {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.xCenter = undefined;\r\n    this.yCenter = undefined;\r\n    this.drawingArea = undefined;\r\n    this._pointLabels = [];\r\n    this._pointLabelItems = [];\r\n  }\r\n  setDimensions() {\r\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\r\n    const w = this.width = this.maxWidth - padding.width;\r\n    const h = this.height = this.maxHeight - padding.height;\r\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\r\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\r\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(false);\r\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\r\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n  }\r\n  generateTickLabels(ticks) {\r\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\r\n    this._pointLabels = this.getLabels()\r\n      .map((value, index) => {\r\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\r\n        return label || label === 0 ? label : '';\r\n      })\r\n      .filter((v, i) => this.chart.getDataVisibility(i));\r\n  }\r\n  fit() {\r\n    const opts = this.options;\r\n    if (opts.display && opts.pointLabels.display) {\r\n      fitWithPointLabels(this);\r\n    } else {\r\n      this.setCenterPoint(0, 0, 0, 0);\r\n    }\r\n  }\r\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\r\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\r\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\r\n  }\r\n  getIndexAngle(index) {\r\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\r\n    const startAngle = this.options.startAngle || 0;\r\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n  }\r\n  getDistanceFromCenterForValue(value) {\r\n    if (isNullOrUndef(value)) {\r\n      return NaN;\r\n    }\r\n    const scalingFactor = this.drawingArea / (this.max - this.min);\r\n    if (this.options.reverse) {\r\n      return (this.max - value) * scalingFactor;\r\n    }\r\n    return (value - this.min) * scalingFactor;\r\n  }\r\n  getValueForDistanceFromCenter(distance) {\r\n    if (isNullOrUndef(distance)) {\r\n      return NaN;\r\n    }\r\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\r\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\r\n  }\r\n  getPointLabelContext(index) {\r\n    const pointLabels = this._pointLabels || [];\r\n    if (index >= 0 && index < pointLabels.length) {\r\n      const pointLabel = pointLabels[index];\r\n      return createPointLabelContext(this.getContext(), index, pointLabel);\r\n    }\r\n  }\r\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\r\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\r\n    return {\r\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\r\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\r\n      angle\r\n    };\r\n  }\r\n  getPointPositionForValue(index, value) {\r\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n  }\r\n  getBasePosition(index) {\r\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n  }\r\n  getPointLabelPosition(index) {\r\n    const {left, top, right, bottom} = this._pointLabelItems[index];\r\n    return {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    };\r\n  }\r\n  drawBackground() {\r\n    const {backgroundColor, grid: {circular}} = this.options;\r\n    if (backgroundColor) {\r\n      const ctx = this.ctx;\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\r\n      ctx.closePath();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawGrid() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const {angleLines, grid} = opts;\r\n    const labelCount = this._pointLabels.length;\r\n    let i, offset, position;\r\n    if (opts.pointLabels.display) {\r\n      drawPointLabels(this, labelCount);\r\n    }\r\n    if (grid.display) {\r\n      this.ticks.forEach((tick, index) => {\r\n        if (index !== 0) {\r\n          offset = this.getDistanceFromCenterForValue(tick.value);\r\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\r\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\r\n        }\r\n      });\r\n    }\r\n    if (angleLines.display) {\r\n      ctx.save();\r\n      for (i = labelCount - 1; i >= 0; i--) {\r\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\r\n        const {color, lineWidth} = optsAtIndex;\r\n        if (!lineWidth || !color) {\r\n          continue;\r\n        }\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = color;\r\n        ctx.setLineDash(optsAtIndex.borderDash);\r\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\r\n        position = this.getPointPosition(i, offset);\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.xCenter, this.yCenter);\r\n        ctx.lineTo(position.x, position.y);\r\n        ctx.stroke();\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawBorder() {}\r\n  drawLabels() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    if (!tickOpts.display) {\r\n      return;\r\n    }\r\n    const startAngle = this.getIndexAngle(0);\r\n    let offset, width;\r\n    ctx.save();\r\n    ctx.translate(this.xCenter, this.yCenter);\r\n    ctx.rotate(startAngle);\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    this.ticks.forEach((tick, index) => {\r\n      if (index === 0 && !opts.reverse) {\r\n        return;\r\n      }\r\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\r\n      const tickFont = toFont(optsAtIndex.font);\r\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        ctx.font = tickFont.string;\r\n        width = ctx.measureText(tick.label).width;\r\n        ctx.fillStyle = optsAtIndex.backdropColor;\r\n        const padding = toPadding(optsAtIndex.backdropPadding);\r\n        ctx.fillRect(\r\n          -width / 2 - padding.left,\r\n          -offset - tickFont.size / 2 - padding.top,\r\n          width + padding.width,\r\n          tickFont.size + padding.height\r\n        );\r\n      }\r\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n        color: optsAtIndex.color,\r\n      });\r\n    });\r\n    ctx.restore();\r\n  }\r\n  drawTitle() {}\r\n}\r\nRadialLinearScale.id = 'radialLinear';\r\nRadialLinearScale.defaults = {\r\n  display: true,\r\n  animate: true,\r\n  position: 'chartArea',\r\n  angleLines: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0\r\n  },\r\n  grid: {\r\n    circular: false\r\n  },\r\n  startAngle: 0,\r\n  ticks: {\r\n    showLabelBackdrop: true,\r\n    callback: Ticks.formatters.numeric\r\n  },\r\n  pointLabels: {\r\n    backdropColor: undefined,\r\n    backdropPadding: 2,\r\n    display: true,\r\n    font: {\r\n      size: 10\r\n    },\r\n    callback(label) {\r\n      return label;\r\n    },\r\n    padding: 5,\r\n    centerPointLabels: false\r\n  }\r\n};\r\nRadialLinearScale.defaultRoutes = {\r\n  'angleLines.color': 'borderColor',\r\n  'pointLabels.color': 'color',\r\n  'ticks.color': 'color'\r\n};\r\nRadialLinearScale.descriptors = {\r\n  angleLines: {\r\n    _fallback: 'grid'\r\n  }\r\n};\r\n\r\nconst INTERVALS = {\r\n  millisecond: {common: true, size: 1, steps: 1000},\r\n  second: {common: true, size: 1000, steps: 60},\r\n  minute: {common: true, size: 60000, steps: 60},\r\n  hour: {common: true, size: 3600000, steps: 24},\r\n  day: {common: true, size: 86400000, steps: 30},\r\n  week: {common: false, size: 604800000, steps: 4},\r\n  month: {common: true, size: 2.628e9, steps: 12},\r\n  quarter: {common: false, size: 7.884e9, steps: 4},\r\n  year: {common: true, size: 3.154e10}\r\n};\r\nconst UNITS = (Object.keys(INTERVALS));\r\nfunction sorter(a, b) {\r\n  return a - b;\r\n}\r\nfunction parse(scale, input) {\r\n  if (isNullOrUndef(input)) {\r\n    return null;\r\n  }\r\n  const adapter = scale._adapter;\r\n  const {parser, round, isoWeekday} = scale._parseOpts;\r\n  let value = input;\r\n  if (typeof parser === 'function') {\r\n    value = parser(value);\r\n  }\r\n  if (!isNumberFinite(value)) {\r\n    value = typeof parser === 'string'\r\n      ? adapter.parse(value, parser)\r\n      : adapter.parse(value);\r\n  }\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n  if (round) {\r\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\r\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\r\n      : adapter.startOf(value, round);\r\n  }\r\n  return +value;\r\n}\r\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n  const ilen = UNITS.length;\r\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\r\n    const interval = INTERVALS[UNITS[i]];\r\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n  return UNITS[ilen - 1];\r\n}\r\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\r\n    const unit = UNITS[i];\r\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n      return unit;\r\n    }\r\n  }\r\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n}\r\nfunction determineMajorUnit(unit) {\r\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\r\n    if (INTERVALS[UNITS[i]].common) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n}\r\nfunction addTick(ticks, time, timestamps) {\r\n  if (!timestamps) {\r\n    ticks[time] = true;\r\n  } else if (timestamps.length) {\r\n    const {lo, hi} = _lookup(timestamps, time);\r\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n    ticks[timestamp] = true;\r\n  }\r\n}\r\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\r\n  const adapter = scale._adapter;\r\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n  const last = ticks[ticks.length - 1].value;\r\n  let major, index;\r\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\r\n    index = map[major];\r\n    if (index >= 0) {\r\n      ticks[index].major = true;\r\n    }\r\n  }\r\n  return ticks;\r\n}\r\nfunction ticksFromTimestamps(scale, values, majorUnit) {\r\n  const ticks = [];\r\n  const map = {};\r\n  const ilen = values.length;\r\n  let i, value;\r\n  for (i = 0; i < ilen; ++i) {\r\n    value = values[i];\r\n    map[value] = i;\r\n    ticks.push({\r\n      value,\r\n      major: false\r\n    });\r\n  }\r\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n}\r\nclass TimeScale extends Scale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n    this._unit = 'day';\r\n    this._majorUnit = undefined;\r\n    this._offsets = {};\r\n    this._normalized = false;\r\n    this._parseOpts = undefined;\r\n  }\r\n  init(scaleOpts, opts) {\r\n    const time = scaleOpts.time || (scaleOpts.time = {});\r\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\r\n    adapter.init(opts);\r\n    mergeIf(time.displayFormats, adapter.formats());\r\n    this._parseOpts = {\r\n      parser: time.parser,\r\n      round: time.round,\r\n      isoWeekday: time.isoWeekday\r\n    };\r\n    super.init(scaleOpts);\r\n    this._normalized = opts.normalized;\r\n  }\r\n  parse(raw, index) {\r\n    if (raw === undefined) {\r\n      return null;\r\n    }\r\n    return parse(this, raw);\r\n  }\r\n  beforeLayout() {\r\n    super.beforeLayout();\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n  }\r\n  determineDataLimits() {\r\n    const options = this.options;\r\n    const adapter = this._adapter;\r\n    const unit = options.time.unit || 'day';\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    function _applyBounds(bounds) {\r\n      if (!minDefined && !isNaN(bounds.min)) {\r\n        min = Math.min(min, bounds.min);\r\n      }\r\n      if (!maxDefined && !isNaN(bounds.max)) {\r\n        max = Math.max(max, bounds.max);\r\n      }\r\n    }\r\n    if (!minDefined || !maxDefined) {\r\n      _applyBounds(this._getLabelBounds());\r\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n        _applyBounds(this.getMinMax(false));\r\n      }\r\n    }\r\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n    this.min = Math.min(min, max - 1);\r\n    this.max = Math.max(min + 1, max);\r\n  }\r\n  _getLabelBounds() {\r\n    const arr = this.getLabelTimestamps();\r\n    let min = Number.POSITIVE_INFINITY;\r\n    let max = Number.NEGATIVE_INFINITY;\r\n    if (arr.length) {\r\n      min = arr[0];\r\n      max = arr[arr.length - 1];\r\n    }\r\n    return {min, max};\r\n  }\r\n  buildTicks() {\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const tickOpts = options.ticks;\r\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\r\n    if (options.bounds === 'ticks' && timestamps.length) {\r\n      this.min = this._userMin || timestamps[0];\r\n      this.max = this._userMax || timestamps[timestamps.length - 1];\r\n    }\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const ticks = _filterBetween(timestamps, min, max);\r\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\r\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\r\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\r\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\r\n      : determineMajorUnit(this._unit);\r\n    this.initOffsets(timestamps);\r\n    if (options.reverse) {\r\n      ticks.reverse();\r\n    }\r\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\r\n  }\r\n  afterAutoSkip() {\r\n    if (this.options.offsetAfterAutoskip) {\r\n      this.initOffsets(this.ticks.map(tick => +tick.value));\r\n    }\r\n  }\r\n  initOffsets(timestamps) {\r\n    let start = 0;\r\n    let end = 0;\r\n    let first, last;\r\n    if (this.options.offset && timestamps.length) {\r\n      first = this.getDecimalForValue(timestamps[0]);\r\n      if (timestamps.length === 1) {\r\n        start = 1 - first;\r\n      } else {\r\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\r\n      }\r\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n      if (timestamps.length === 1) {\r\n        end = last;\r\n      } else {\r\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n      }\r\n    }\r\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n    start = _limitValue(start, 0, limit);\r\n    end = _limitValue(end, 0, limit);\r\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\r\n  }\r\n  _generate() {\r\n    const adapter = this._adapter;\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\r\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\r\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n    const hasWeekday = isNumber(weekday) || weekday === true;\r\n    const ticks = {};\r\n    let first = min;\r\n    let time, count;\r\n    if (hasWeekday) {\r\n      first = +adapter.startOf(first, 'isoWeek', weekday);\r\n    }\r\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n    }\r\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\r\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    if (time === max || options.bounds === 'ticks' || count === 1) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\r\n  }\r\n  getLabelForValue(value) {\r\n    const adapter = this._adapter;\r\n    const timeOpts = this.options.time;\r\n    if (timeOpts.tooltipFormat) {\r\n      return adapter.format(value, timeOpts.tooltipFormat);\r\n    }\r\n    return adapter.format(value, timeOpts.displayFormats.datetime);\r\n  }\r\n  _tickFormatFunction(time, index, ticks, format) {\r\n    const options = this.options;\r\n    const formats = options.time.displayFormats;\r\n    const unit = this._unit;\r\n    const majorUnit = this._majorUnit;\r\n    const minorFormat = unit && formats[unit];\r\n    const majorFormat = majorUnit && formats[majorUnit];\r\n    const tick = ticks[index];\r\n    const major = majorUnit && majorFormat && tick && tick.major;\r\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n    const formatter = options.ticks.callback;\r\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\r\n  }\r\n  generateTickLabels(ticks) {\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n    }\r\n  }\r\n  getDecimalForValue(value) {\r\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\r\n  }\r\n  getPixelForValue(value) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForValue(value);\r\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return this.min + pos * (this.max - this.min);\r\n  }\r\n  _getLabelSize(label) {\r\n    const ticksOpts = this.options.ticks;\r\n    const tickLabelWidth = this.ctx.measureText(label).width;\r\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n    const cosRotation = Math.cos(angle);\r\n    const sinRotation = Math.sin(angle);\r\n    const tickFontSize = this._resolveTickFontOptions(0).size;\r\n    return {\r\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\r\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\r\n    };\r\n  }\r\n  _getLabelCapacity(exampleTime) {\r\n    const timeOpts = this.options.time;\r\n    const displayFormats = timeOpts.displayFormats;\r\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\r\n    const size = this._getLabelSize(exampleLabel);\r\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\r\n    return capacity > 0 ? capacity : 1;\r\n  }\r\n  getDataTimestamps() {\r\n    let timestamps = this._cache.data || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    if (this._normalized && metas.length) {\r\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\r\n    }\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\r\n    }\r\n    return (this._cache.data = this.normalize(timestamps));\r\n  }\r\n  getLabelTimestamps() {\r\n    const timestamps = this._cache.labels || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const labels = this.getLabels();\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      timestamps.push(parse(this, labels[i]));\r\n    }\r\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\r\n  }\r\n  normalize(values) {\r\n    return _arrayUnique(values.sort(sorter));\r\n  }\r\n}\r\nTimeScale.id = 'time';\r\nTimeScale.defaults = {\r\n  bounds: 'data',\r\n  adapters: {},\r\n  time: {\r\n    parser: false,\r\n    unit: false,\r\n    round: false,\r\n    isoWeekday: false,\r\n    minUnit: 'millisecond',\r\n    displayFormats: {}\r\n  },\r\n  ticks: {\r\n    source: 'auto',\r\n    major: {\r\n      enabled: false\r\n    }\r\n  }\r\n};\r\n\r\nfunction interpolate(table, val, reverse) {\r\n  let lo = 0;\r\n  let hi = table.length - 1;\r\n  let prevSource, nextSource, prevTarget, nextTarget;\r\n  if (reverse) {\r\n    if (val >= table[lo].pos && val <= table[hi].pos) {\r\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\r\n    }\r\n    ({pos: prevSource, time: prevTarget} = table[lo]);\r\n    ({pos: nextSource, time: nextTarget} = table[hi]);\r\n  } else {\r\n    if (val >= table[lo].time && val <= table[hi].time) {\r\n      ({lo, hi} = _lookupByKey(table, 'time', val));\r\n    }\r\n    ({time: prevSource, pos: prevTarget} = table[lo]);\r\n    ({time: nextSource, pos: nextTarget} = table[hi]);\r\n  }\r\n  const span = nextSource - prevSource;\r\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n}\r\nclass TimeSeriesScale extends TimeScale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._table = [];\r\n    this._minPos = undefined;\r\n    this._tableRange = undefined;\r\n  }\r\n  initOffsets() {\r\n    const timestamps = this._getTimestampsForTable();\r\n    const table = this._table = this.buildLookupTable(timestamps);\r\n    this._minPos = interpolate(table, this.min);\r\n    this._tableRange = interpolate(table, this.max) - this._minPos;\r\n    super.initOffsets(timestamps);\r\n  }\r\n  buildLookupTable(timestamps) {\r\n    const {min, max} = this;\r\n    const items = [];\r\n    const table = [];\r\n    let i, ilen, prev, curr, next;\r\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\r\n      curr = timestamps[i];\r\n      if (curr >= min && curr <= max) {\r\n        items.push(curr);\r\n      }\r\n    }\r\n    if (items.length < 2) {\r\n      return [\r\n        {time: min, pos: 0},\r\n        {time: max, pos: 1}\r\n      ];\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      next = items[i + 1];\r\n      prev = items[i - 1];\r\n      curr = items[i];\r\n      if (Math.round((next + prev) / 2) !== curr) {\r\n        table.push({time: curr, pos: i / (ilen - 1)});\r\n      }\r\n    }\r\n    return table;\r\n  }\r\n  _getTimestampsForTable() {\r\n    let timestamps = this._cache.all || [];\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const data = this.getDataTimestamps();\r\n    const label = this.getLabelTimestamps();\r\n    if (data.length && label.length) {\r\n      timestamps = this.normalize(data.concat(label));\r\n    } else {\r\n      timestamps = data.length ? data : label;\r\n    }\r\n    timestamps = this._cache.all = timestamps;\r\n    return timestamps;\r\n  }\r\n  getDecimalForValue(value) {\r\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\r\n  }\r\n}\r\nTimeSeriesScale.id = 'timeseries';\r\nTimeSeriesScale.defaults = TimeScale.defaults;\r\n\r\nvar scales = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nCategoryScale: CategoryScale,\r\nLinearScale: LinearScale,\r\nLogarithmicScale: LogarithmicScale,\r\nRadialLinearScale: RadialLinearScale,\r\nTimeScale: TimeScale,\r\nTimeSeriesScale: TimeSeriesScale\r\n});\r\n\r\nconst registerables = [\r\n  controllers,\r\n  elements,\r\n  plugins,\r\n  scales,\r\n];\r\n\r\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}