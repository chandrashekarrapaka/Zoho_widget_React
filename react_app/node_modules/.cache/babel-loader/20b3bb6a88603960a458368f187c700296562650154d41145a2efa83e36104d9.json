{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\demo\\\\Desktop\\\\CRV\\\\Zoho_widget_React\\\\react_app\\\\src\\\\Components\\\\Containers\\\\MFI\\\\MFI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MFI(prop) {\n  _s();\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [dataDisplay, setDataDisplay] = useState([]);\n  const [nocomments, setNoComments] = useState(true);\n  const currentPlant = prop.currentPlant;\n\n  //console.log(\"MFI1\", currentPlant[0].plantid, accessToken);\n\n  useEffect(() => {\n    const fetchDataz = async () => {\n      try {\n        const response = await LoginCredentialsAndQueries();\n        if (response.length > 0) {\n          //console.log(\"responseMFI\", response);\n          setAccessToken(response);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchDataz();\n  }, [currentPlant]);\n  let plantid = currentPlant[0].plantid;\n  useEffect(() => {\n    setDataDisplay([]);\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://api.infinite-uptime.com/api/3.0/idap-api/service-requests?plantIds=\" + plantid, {\n          method: \"GET\",\n          headers: {\n            accept: \"application/json\",\n            Authorization: \"Bearer \" + accessToken\n          }\n        });\n        const data = await response.json();\n        let key = Object.keys(data.data);\n        const dataWithNewStatus = data.data[key].filter(ele => ele.status === \"NEW\");\n        dataWithNewStatus.sort((a, b) => new Date(b.createdDate) - new Date(a.createdDate));\n        setDataDisplay(dataWithNewStatus);\n        setNoComments(dataWithNewStatus.length === 0);\n        // console.log(\"mfi\"+dataDisplay);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 30000); // Fetch data every 30 seconds\n\n    return () => {\n      clearInterval(interval); // Clean up the interval on component unmount\n    };\n  }, [currentPlant, accessToken, plantid]);\n  let i = 1;\n  //const check=(new Date().getTime()-new Date(ele.serviceReqMachineDetails[0].createdDate).getTime()/3600000)<=48;\n  // if(ele.status==\"NEW\")i++;\n  // \n  //let keylength=data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anomaly-alert\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"heading fs-16\",\n      children: \"Machine with Faults\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data mb-2  fs-11\",\n        children: dataDisplay && dataDisplay.length > 0 ? dataDisplay.map(ele => {\n          if (ele.status === \"NEW\") {\n            return ele.serviceReqMachineDetails.map(srmd => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fs-11 mb-0 text-dark\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fw-bold\",\n                children: srmd.machineName ? i++ + \". \" + srmd.machineName + \" \" + srmd.createdDateWithPlantTimezone : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), srmd.machineServiceDetails.map((msd, index) => /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"data-badge mb-0\",\n                children: String.fromCharCode(97 + index) + \". \" + msd.serviceName\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this));\n          }\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fs-14 mb-0 text-dark\",\n          children: \"No Faults observed in machines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(MFI, \"R3CwZ/q2m6puToyTn4ItwOcp9m8=\");\n_c = MFI;\nexport default MFI;\nvar _c;\n$RefreshReg$(_c, \"MFI\");","map":{"version":3,"names":["React","useState","useEffect","LoginCredentialsAndQueries","jsxDEV","_jsxDEV","MFI","prop","_s","accessToken","setAccessToken","dataDisplay","setDataDisplay","nocomments","setNoComments","currentPlant","fetchDataz","response","length","error","console","plantid","fetchData","fetch","method","headers","accept","Authorization","data","json","key","Object","keys","dataWithNewStatus","filter","ele","status","sort","a","b","Date","createdDate","interval","setInterval","clearInterval","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","serviceReqMachineDetails","srmd","machineName","createdDateWithPlantTimezone","machineServiceDetails","msd","index","String","fromCharCode","serviceName","_c","$RefreshReg$"],"sources":["C:/Users/demo/Desktop/CRV/Zoho_widget_React/react_app/src/Components/Containers/MFI/MFI.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\r\n\r\nfunction MFI(prop) {\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [dataDisplay, setDataDisplay] = useState([]);\r\n  const [nocomments, setNoComments] = useState(true);\r\n  \r\n\r\n  const currentPlant = prop.currentPlant;\r\n\r\n  //console.log(\"MFI1\", currentPlant[0].plantid, accessToken);\r\n\r\n  useEffect(() => {\r\n    const fetchDataz = async () => {\r\n      try {\r\n        const response = await LoginCredentialsAndQueries();\r\n        if (response.length > 0) {\r\n          //console.log(\"responseMFI\", response);\r\n          setAccessToken(response);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchDataz();\r\n  }, [currentPlant]);\r\n\r\n  let plantid = currentPlant[0].plantid;\r\n  useEffect(() => {\r\n    setDataDisplay([]);\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api.infinite-uptime.com/api/3.0/idap-api/service-requests?plantIds=\" + plantid,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              accept: \"application/json\",\r\n              Authorization: \"Bearer \" + accessToken,\r\n            },\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n\r\n        let key = Object.keys(data.data);\r\n       \r\n\r\n        const dataWithNewStatus = data.data[key].filter((ele) => ele.status === \"NEW\");\r\n        dataWithNewStatus.sort((a, b) => new Date(b.createdDate) - new Date(a.createdDate));\r\n        setDataDisplay(dataWithNewStatus);\r\n        setNoComments(dataWithNewStatus.length === 0);\r\n       // console.log(\"mfi\"+dataDisplay);\r\n      \r\n     \r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    const interval = setInterval(fetchData, 30000); // Fetch data every 30 seconds\r\n\r\n    return () => {\r\n      clearInterval(interval); // Clean up the interval on component unmount\r\n    };\r\n  }, [currentPlant, accessToken, plantid ]);\r\n  let i = 1;\r\n  //const check=(new Date().getTime()-new Date(ele.serviceReqMachineDetails[0].createdDate).getTime()/3600000)<=48;\r\n  // if(ele.status==\"NEW\")i++;\r\n  // \r\n  //let keylength=data\r\n  return (\r\n    <div className=\"anomaly-alert\">\r\n    <p className=\"heading fs-16\">Machine with Faults</p>\r\n    <div className=\"data-box\">\r\n      <div className=\"data mb-2  fs-11\">\r\n        {dataDisplay && dataDisplay.length > 0 ? (\r\n          dataDisplay.map((ele) => {\r\n            if (ele.status === \"NEW\") {\r\n              return (\r\n                ele.serviceReqMachineDetails.map((srmd) => (\r\n                  <div className=\"fs-11 mb-0 text-dark\">\r\n                    <span className=\"fw-bold\">\r\n                      {srmd.machineName ? i++ + \". \" + srmd.machineName + \" \" + srmd.createdDateWithPlantTimezone : ''}\r\n                    </span>\r\n                    {srmd.machineServiceDetails.map((msd, index) => (\r\n                      <ol className=\"data-badge mb-0\" key={index}>\r\n                        {String.fromCharCode(97 + index) + \". \" + msd.serviceName}\r\n                      </ol>\r\n                    ))}\r\n                  </div>\r\n                ))\r\n              );\r\n            }\r\n          })\r\n        ) : (\r\n          <div className=\"fs-14 mb-0 text-dark\">No Faults observed in machines</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default MFI;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}