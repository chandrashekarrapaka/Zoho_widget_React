{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\zoho-creator-widget-starter-template-reactJS\\\\react_app\\\\src\\\\Components\\\\Containers\\\\Plant\\\\Machine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Monitor from \"./Monitor\";\nimport './Machine.css';\nimport { Velocity } from '../../../Services/Velocity';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Machine(prop) {\n  _s();\n  const [showPopup, setShowPopup] = useState(false); // State variable for pop-up visibility\n  const [apiData, setApiData] = useState([]); // State variable for API data\n\n  useEffect(() => {\n    // Function to fetch API data\n    const fetchData = () => {\n      // Replace this with your actual API call\n      // Here, we simulate a delay and set dummy data\n      try {\n        setTimeout(() => {\n          const dummyData = [{\n            id: 1,\n            name: \"Dummy Data 1\"\n          }, {\n            id: 2,\n            name: \"Dummy Data 2\"\n          }, {\n            id: 3,\n            name: \"Dummy Data 3\"\n          }];\n          setApiData(dummyData);\n        }, 1000); // Simulating API delay of 1 second\n        //     const response = await Velocity();\n        //     setApiData(response);\n        //     // const plantNames = response.map((ele) => ele.plantName);\n        //     // setOptions(plantNames);\n        //      console.log(\"velocity\"+response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    // Fetch API data initially\n    fetchData();\n\n    // Fetch API data every 30 seconds\n    const interval = setInterval(fetchData, 30000);\n\n    // Clean up the interval when the component is unmounted\n    return () => clearInterval(interval);\n  }, []);\n  // //  try {\n  //     const response = await Velocity();\n  //     setApiData(response);\n  //     // const plantNames = response.map((ele) => ele.plantName);\n  //     // setOptions(plantNames);\n  //      console.log(\"velocity\"+response);\n  const handleInfoClick = id => {\n    // const response = Velocity();\n    //        // setApiData(response);\n    //         // const plantNames = response.map((ele) => ele.plantName);\n    //         // setOptions(plantNames);\n    //          console.log(\"velocity\"+response.machineGroups);\n    //          response.machineGroups.forEach(element => {\n    //             if(element.id===id){\n\n    //                 element.monitors.forEach(mon=>{\n    //                     console.log(mon)\n    //                 })\n    //             }\n\n    //          });\n    console.log(\"machineid\" + id);\n    setShowPopup(true);\n  };\n  const closePopup = () => {\n    setShowPopup(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"machines\",\n    children: [prop.machine.map(function (ele) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"machine\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"2px solid yellow\",\n            borderRadius: \"10px\",\n            margin: \"5px\",\n            padding: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: \"black\"\n            },\n            children: ele.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signals\",\n            children: [/*#__PURE__*/_jsxDEV(Monitor, {\n              monitor: ele.monitors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"HS \", ele.healthScore]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-icon\",\n              onClick: () => handleInfoClick(ele.id),\n              children: \"\\uD83D\\uDEC8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, ele.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this);\n    }), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"API Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: apiData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: data.name\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: closePopup,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Machine, \"eoTXHDXX6B5oJ4bNysck6aLuBPQ=\");\n_c = Machine;\nexport default Machine;\nvar _c;\n$RefreshReg$(_c, \"Machine\");","map":{"version":3,"names":["React","useState","useEffect","Monitor","Velocity","jsxDEV","_jsxDEV","Machine","prop","_s","showPopup","setShowPopup","apiData","setApiData","fetchData","setTimeout","dummyData","id","name","error","console","log","interval","setInterval","clearInterval","handleInfoClick","closePopup","className","children","machine","map","ele","style","border","borderRadius","margin","padding","color","fileName","_jsxFileName","lineNumber","columnNumber","monitor","monitors","healthScore","onClick","data","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Components/Containers/Plant/Machine.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Monitor from \"./Monitor\";\r\nimport './Machine.css';\r\nimport {Velocity} from '../../../Services/Velocity'\r\n\r\nfunction Machine(prop) {\r\n  const [showPopup, setShowPopup] = useState(false); // State variable for pop-up visibility\r\n  const [apiData, setApiData] = useState([]); // State variable for API data\r\n\r\n  useEffect(() => {\r\n    // Function to fetch API data\r\n    const fetchData = () => {\r\n      // Replace this with your actual API call\r\n      // Here, we simulate a delay and set dummy data\r\n      try {\r\n        setTimeout(() => {\r\n            const dummyData = [\r\n              { id: 1, name: \"Dummy Data 1\" },\r\n              { id: 2, name: \"Dummy Data 2\" },\r\n              { id: 3, name: \"Dummy Data 3\" },\r\n            ];\r\n            setApiData(dummyData);\r\n          }, 1000); // Simulating API delay of 1 second\r\n        //     const response = await Velocity();\r\n        //     setApiData(response);\r\n        //     // const plantNames = response.map((ele) => ele.plantName);\r\n        //     // setOptions(plantNames);\r\n        //      console.log(\"velocity\"+response);\r\n      }\r\n      catch(error){\r\n        console.log(error);\r\n      }\r\n      \r\n    };\r\n\r\n    // Fetch API data initially\r\n    fetchData();\r\n\r\n    // Fetch API data every 30 seconds\r\n    const interval = setInterval(fetchData, 30000);\r\n\r\n    // Clean up the interval when the component is unmounted\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n// //  try {\r\n//     const response = await Velocity();\r\n//     setApiData(response);\r\n//     // const plantNames = response.map((ele) => ele.plantName);\r\n//     // setOptions(plantNames);\r\n//      console.log(\"velocity\"+response);\r\n  const handleInfoClick = (id) => {\r\n    // const response = Velocity();\r\n    //        // setApiData(response);\r\n    //         // const plantNames = response.map((ele) => ele.plantName);\r\n    //         // setOptions(plantNames);\r\n    //          console.log(\"velocity\"+response.machineGroups);\r\n    //          response.machineGroups.forEach(element => {\r\n    //             if(element.id===id){\r\n                   \r\n    //                 element.monitors.forEach(mon=>{\r\n    //                     console.log(mon)\r\n    //                 })\r\n    //             }\r\n                \r\n    //          });\r\n    console.log(\"machineid\"+id)\r\n    setShowPopup(true);\r\n    \r\n  };\r\n\r\n  const closePopup = () => {\r\n    setShowPopup(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"machines\">\r\n      {prop.machine.map(function (ele) {\r\n        return (\r\n          <div className=\"machine\" key={ele.id}>\r\n            <div\r\n              style={{\r\n                border: \"2px solid yellow\",\r\n                borderRadius: \"10px\",\r\n                margin: \"5px\",\r\n                padding: \"5px\"\r\n              }}\r\n            >\r\n              <h4 style={{ color: \"black\" }}>{ele.name}</h4>\r\n              <div className=\"signals\">\r\n                <Monitor monitor={ele.monitors} />\r\n                <h4>HS {ele.healthScore}</h4>\r\n                <div className=\"info-icon\"  onClick={() => handleInfoClick(ele.id)}>\r\n                  &#x1F6C8;\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {showPopup && (\r\n        <div className=\"popup\">\r\n          <div className=\"popup-content\">\r\n            <h2>API Data</h2>\r\n            <ul>\r\n              {apiData.map((data) => (\r\n                <li key={data.id}>{data.name}</li>\r\n              ))}\r\n            </ul>\r\n            <button className=\"close-btn\" onClick={closePopup}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Machine;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}