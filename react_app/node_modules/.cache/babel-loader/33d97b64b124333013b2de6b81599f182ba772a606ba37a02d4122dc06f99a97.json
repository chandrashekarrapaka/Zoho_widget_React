{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\zoho-creator-widget-starter-template-reactJS\\\\react_app\\\\src\\\\Components\\\\Containers\\\\MFI\\\\MFI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./MFI.css\";\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MFI(prop) {\n  _s();\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [dataDisplay, setDataDisplay] = useState([]);\n  const currentPlant = prop.currentPlant;\n  console.log(\"MFI1\", currentPlant[0].plantid, accessToken);\n  useEffect(() => {\n    const fetchDataz = async () => {\n      try {\n        const response = await LoginCredentialsAndQueries();\n        if (response.length > 0) {\n          console.log(\"responseMFI\", response);\n          setAccessToken(response);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchDataz();\n  }, []);\n  let plantid = currentPlant[0].plantid;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://api-idap.infinite-uptime.com/api/3.0/idap-api/service-requests?plantIds=\" + plantid, {\n          method: \"GET\",\n          headers: {\n            accept: \"application/json\",\n            Authorization: \"Bearer \" + accessToken\n          }\n        });\n        const data = await response.json();\n        let key = Object.keys(data.data);\n        setDataDisplay(data.data[key]);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 30000); // Fetch data every 30 seconds\n\n    return () => {\n      clearInterval(interval); // Clean up the interval on component unmount\n    };\n  }, [currentPlant, accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head\",\n      children: \"Machine with Faults\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: dataDisplay.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: dataDisplay.map((ele, index) => {\n          const check = (new Date().getTime() - new Date(ele.serviceReqMachineDetails[0].createdDate).getTime()) / 3600000 <= 48;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [`${index + 1}. ${ele.serviceReqMachineDetails[0].machineName}`, ele.status === \"NEW\" && (new Date().getTime() - new Date(ele.serviceReqMachineDetails[0].createdDate).getTime()) / 3600000 <= 48 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: ele.serviceReqMachineDetails[0].machineServiceDetails.map((service, subIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: `${String.fromCharCode(97 + subIndex)}. ${service.serviceName}`\n              }, subIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Faults observed in machines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(MFI, \"cT2NB6JZKdyjzopU9NQ40uhIx7c=\");\n_c = MFI;\nexport default MFI;\nvar _c;\n$RefreshReg$(_c, \"MFI\");","map":{"version":3,"names":["React","useState","useEffect","LoginCredentialsAndQueries","jsxDEV","_jsxDEV","MFI","prop","_s","accessToken","setAccessToken","dataDisplay","setDataDisplay","currentPlant","console","log","plantid","fetchDataz","response","length","error","fetchData","fetch","method","headers","accept","Authorization","data","json","key","Object","keys","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ele","index","check","Date","getTime","serviceReqMachineDetails","createdDate","machineName","status","machineServiceDetails","service","subIndex","String","fromCharCode","serviceName","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Components/Containers/MFI/MFI.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./MFI.css\";\r\nimport { LoginCredentialsAndQueries } from \"../../../Services/loginCredentialsAndQueries\";\r\n\r\nfunction MFI(prop) {\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [dataDisplay, setDataDisplay] = useState([]);\r\n\r\n  const currentPlant = prop.currentPlant;\r\n  console.log(\"MFI1\", currentPlant[0].plantid, accessToken);\r\n\r\n  useEffect(() => {\r\n    const fetchDataz = async () => {\r\n      try {\r\n        const response = await LoginCredentialsAndQueries();\r\n        if (response.length > 0) {\r\n          console.log(\"responseMFI\", response);\r\n          setAccessToken(response);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchDataz();\r\n  }, []);\r\n\r\n  let plantid = currentPlant[0].plantid;\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api-idap.infinite-uptime.com/api/3.0/idap-api/service-requests?plantIds=\" + plantid,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              accept: \"application/json\",\r\n              Authorization: \"Bearer \" + accessToken,\r\n            },\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n\r\n        let key = Object.keys(data.data);\r\n        setDataDisplay(data.data[key]);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    const interval = setInterval(fetchData, 30000); // Fetch data every 30 seconds\r\n\r\n    return () => {\r\n      clearInterval(interval); // Clean up the interval on component unmount\r\n    };\r\n  }, [currentPlant, accessToken]);\r\n\r\n  return (\r\n    <div className=\"content-box\">\r\n      <div className=\"head\">Machine with Faults</div>\r\n      <div className=\"content-container\">\r\n        {dataDisplay.length > 0 ? (\r\n          <ul>\r\n            {dataDisplay.map((ele, index) => {\r\n              const check =\r\n                (new Date().getTime() - new Date(ele.serviceReqMachineDetails[0].createdDate).getTime()) / 3600000 <= 48;\r\n\r\n              return (\r\n                <li key={index}>\r\n                  {`${index + 1}. ${ele.serviceReqMachineDetails[0].machineName}`}\r\n                  {ele.status === \"NEW\" &&\r\n                  (new Date().getTime() - new Date(ele.serviceReqMachineDetails[0].createdDate).getTime()) / 3600000 <= 48 ? (\r\n                    <ul>\r\n                      {ele.serviceReqMachineDetails[0].machineServiceDetails.map((service, subIndex) => (\r\n                        <li key={subIndex}>{`${String.fromCharCode(97 + subIndex)}. ${service.serviceName}`}</li>\r\n                      ))}\r\n                    </ul>\r\n                  ) : (\r\n                    <div>No data available</div>\r\n                  )}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          <div>No Faults observed in machines</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MFI;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}